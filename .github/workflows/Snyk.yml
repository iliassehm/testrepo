name: Full Security Scan

on:
  push:
    branches:
      - main
      - feat/test-brancheeeee
  pull_request:
    branches:
      - main
  release:
    types:
      - created  # Exécute le workflow quand une release est créée

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch tags
        run: |
          git fetch --tags
          echo "Tags fetched"

      - name: Get Latest Tag
        id: latest-tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          echo "Latest tag: $latest_tag"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Version plus récente pour compatibilité

      - name: Install dependencies
        run: npm install

      - name: Install Security Tools
        run: |
          npm install -g snyk
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          wget https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64 -O /usr/local/bin/tfsec
          chmod +x /usr/local/bin/tfsec

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      # Utiliser le dernier tag dans la commande de pull de l'image Docker
      - name: Pull Docker image
        run: |
          echo "Pulling Docker image with tag: $LATEST_TAG"
          echo "${{ secrets.SCW_SECRET_KEY }}" | docker login rg.${{ secrets.SCW_REGION }}.scw.cloud -u ${{ secrets.SCW_ACCESS_KEY }} --password-stdin

      # Autres étapes de scan de sécurité
      - name: Run Snyk Code Scan
        run: snyk code test || echo "Code scan found issues, but continuing"

      - name: Monitor Snyk Code Issues
        run: snyk code monitor || echo "Snyk Code Monitor failed, but continuing"
