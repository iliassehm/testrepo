name: Full Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created  # Ex√©cute le workflow quand une release est cr√©√©e

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Checkout le code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2Ô∏è‚É£ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Version plus r√©cente pour compatibilit√©

      # 3Ô∏è‚É£ Installer les d√©pendances
      - name: Install dependencies
        run: npm install

      # 4Ô∏è‚É£ Installer les outils de s√©curit√©
      - name: Install Security Tools
        run: |
          npm install -g snyk
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          wget https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64 -O /usr/local/bin/tfsec
          chmod +x /usr/local/bin/tfsec

      # 5Ô∏è‚É£ Authentification avec Snyk
      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      # 6Ô∏è‚É£ Installer le Scaleway CLI
      - name: Install Scaleway CLI
        run: |
          curl -sL https://github.com/scaleway/scaleway-cli/releases/download/v2.4.0/scw-v2.4.0-linux-amd64.tar.gz | tar xz
          sudo mv scw /usr/local/bin/

      # 7Ô∏è‚É£ Authentification avec Scaleway CLI
      - name: Authenticate with Scaleway CLI
        run: |
          scw config profile set access-key ${{ secrets.SCW_ACCESS_KEY }} secret-key ${{ secrets.SCW_SECRET_KEY }} region ${{ secrets.SCW_REGION }}

      # 8Ô∏è‚É£ R√©cup√©rer la derni√®re version de l'image Docker
      - name: Get Latest Docker Image Tag from Scaleway CLI
        run: |
          LATEST_TAG=$(scw container image list --namespace ${SCW_REGISTRY_NAME} --image-name backend --format "{{ .Tag }}" | sort -r | head -n 1)
          
          if [ -z "$LATEST_TAG" ]; then
            echo "‚ùå No tags found in Scaleway Container Registry!"
            exit 1
          else
            echo "‚úÖ Found latest tag: $LATEST_TAG"
            echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          fi

      # 9Ô∏è‚É£ Pull de l'image Docker avec le dernier tag
      - name: Pull Latest Docker Image
        run: |
          echo "üöÄ Pulling latest image: rg.${{ secrets.SCW_REGION }}.scw.cloud/${{ secrets.SCW_REGISTRY_NAME }}/backend:${{ env.LATEST_TAG }}"
          docker pull rg.${{ secrets.SCW_REGION }}.scw.cloud/${{ secrets.SCW_REGISTRY_NAME }}/backend:${{ env.LATEST_TAG }}

      # 10Ô∏è‚É£ Scan du code source et envoi √† Snyk App
      - name: Run Snyk Code Scan
        run: snyk code test || echo "Code scan found issues, but continuing"

      - name: Monitor Snyk Code Issues
        run: snyk code monitor || echo "Snyk Code Monitor failed, but continuing"

      # 11Ô∏è‚É£ Scan des d√©pendances et envoi √† Snyk App
      - name: Run Dependency Scan
        run: snyk test || echo "Dependency scan found vulnerabilities, but continuing"

      - name: Monitor Dependency Issues
        run: snyk monitor || echo "Snyk Dependency Monitor failed, but continuing"

      # 12Ô∏è‚É£ Scan de l'image Docker avec Snyk et envoi √† Snyk App
      - name: Run Snyk Container Security Scan
        run: |
          snyk container test rg.${{ secrets.SCW_REGION }}.scw.cloud/${{ secrets.SCW_REGISTRY_NAME }}/backend:${{ env.LATEST_TAG }} || echo "Container scan found vulnerabilities, but continuing"

      - name: Monitor Container in Snyk
        run: snyk container monitor rg.${{ secrets.SCW_REGION }}.scw.cloud/${{ secrets.SCW_REGISTRY_NAME }}/backend:${{ env.LATEST_TAG }}

      # 13Ô∏è‚É£ Scan de l'image Docker avec Trivy
      - name: Run Trivy Container Scan
        run: |
          trivy image --exit-code 0 --severity HIGH,CRITICAL rg.${{ secrets.SCW_REGION }}.scw.cloud/${{ secrets.SCW_REGISTRY_NAME }}/backend:${{ env.LATEST_TAG }}

      # 14Ô∏è‚É£ Scan de la configuration Terraform/Kubernetes et envoi √† Snyk App
      - name: Run Infrastructure-as-Code Security Scan (Terraform/K8s)
        run: snyk iac test || echo "Snyk IaC scan found issues, but continuing"

      - name: Monitor IaC Issues
        run: snyk iac monitor || echo "Snyk IaC Monitor failed, but continuing"
