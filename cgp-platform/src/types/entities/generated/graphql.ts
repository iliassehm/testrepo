/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from "@graphql-typed-document-node/core";

import { CompanyActivitiesSchema } from "../../../../shared/schemas/companyHolding";
import { CompanyFinancialSchema } from "../../../../shared/schemas/companyHolding";
import { HoldingCompanyInfo } from "../../../../shared/schemas/companyHolding";
import { HoldingManagerSchema } from "../../../../shared/schemas/companyHolding";
import { NbHoldingManagerSchema } from "../../../../shared/schemas/companyHolding";
import { CompanyGeneralForm } from "../../../../shared/schemas/companySetting";
import { CompanyIntermediationForm } from "../../../../shared/schemas/companySetting";
import { CompanyLegalForm } from "../../../../shared/schemas/companySetting";
import { LCBForm } from "../../../../shared/schemas/lcb";
import { NotificationData } from "../../../../shared/schemas/notification";
import { CustomerRelationForm } from "../../../../shared/schemas/relation";

export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  Amount: any;
  CompanyActivitiesSchema: CompanyActivitiesSchema;
  CompanyFeatures: any;
  CompanyFinancialSchema: CompanyFinancialSchema;
  CompanyForm: any;
  CompanyGeneralForm: CompanyGeneralForm;
  CompanyIntermediationForm: CompanyIntermediationForm;
  CompanyLegalForm: CompanyLegalForm;
  CompanyMetadata: any;
  ConformityObjectives: any;
  ConnectionMetadata: any;
  /**
   * Customers asset creation form data
   * fields for life insurance:
   *   - insuranceCompany: The name of the insurer
   *   - transfersAmount: The amount of the asset
   *   - currency: The currency of the asset
   *
   *   - accountNumber: The contract number of the asset
   *   - date: Souscription date
   *   - metadata:
   *     - variableExpenses: The variable expenses of the asset
   *     - percent: The percent of the asset
   *     - fixedExpenses: The fixed expenses of the asset
   */
  CustomerAssetCreationValues: any;
  CustomerAssetMetadata: any;
  CustomerAssetMixedData: any;
  CustomerRelationForm: CustomerRelationForm;
  CustomerSearchSchema: any;
  DateTime: any;
  DetailsInformations: any;
  FavoriteContractMetadata: any;
  FiscalityInformations: any;
  GeneralInformations: any;
  HoldingCompanyInfo: HoldingCompanyInfo;
  HoldingForm: any;
  HoldingManagerSchema: HoldingManagerSchema;
  InstalledIntegrationSettings: any;
  IntegrationKey: any;
  InvestmentInstrumentMetadata: any;
  InvestorProfile: any;
  InvestorProfileForm: any;
  Key: any;
  LCBForm: LCBForm;
  Labels: any;
  ManagedMode: any;
  MigrationMetadata: any;
  NbHoldingManagerSchema: NbHoldingManagerSchema;
  NotificationData: NotificationData;
  ProjectMetadata: any;
  PublicFormSubmit: any;
  TransactionMetadata: any;
  URL: any;
};

export type AccountingAnalyticsFilters = {
  computing: WealthFilter;
  date?: InputMaybe<DateRange>;
  group?: InputMaybe<AssetGroup>;
};

export type AccountingTransaction = {
  __typename?: "AccountingTransaction";
  amount: Scalars["Float"];
  assetName: Scalars["String"];
  date: Scalars["DateTime"];
  entityName: Scalars["String"];
  id: Scalars["ID"];
  name: Scalars["String"];
};

export type AccountingTransactionConnection = {
  __typename?: "AccountingTransactionConnection";
  edges: Array<AccountingTransactionEdge>;
  totalCount: Scalars["Int"];
};

export type AccountingTransactionEdge = {
  __typename?: "AccountingTransactionEdge";
  node: AccountingTransaction;
};

export type Activity = {
  __typename?: "Activity";
  asset: Scalars["ID"];
  id: Scalars["ID"];
  instrument: Scalars["String"];
  start?: Maybe<Scalars["DateTime"]>;
  value: Scalars["Float"];
};

export type ActivityByYear = {
  __typename?: "ActivityByYear";
  endValue?: Maybe<Scalars["String"]>;
  performance?: Maybe<Performance>;
  startValue: Scalars["String"];
  year: Scalars["Int"];
};

export type ActivityYearHistoryCreationInput = {
  endValue?: InputMaybe<Scalars["String"]>;
  startValue?: InputMaybe<Scalars["String"]>;
  year: Scalars["Int"];
};

export type AdequacyFile = {
  __typename?: "AdequacyFile";
  extension: Scalars["String"];
  name: Scalars["String"];
  projectID: Scalars["ID"];
  url: Scalars["URL"];
};

export enum AppartmentCondition {
  ImportantWork = "IMPORTANT_WORK",
  Redone = "REDONE",
  Refreshed = "REFRESHED",
  Standard = "STANDARD",
  ToRefresh = "TO_REFRESH",
}

export enum AppartmentType {
  Duplex = "DUPLEX",
  House = "HOUSE",
  Land = "LAND",
  Simplex = "SIMPLEX",
  Triplex = "TRIPLEX",
}

export type AssetConnection = {
  __typename?: "AssetConnection";
  edges: Array<AssetEdge>;
  totalCount: Scalars["Int"];
  totalPages: Scalars["Int"];
};

export type AssetEdge = {
  __typename?: "AssetEdge";
  node: CustomerAsset;
};

export type AssetFilters = {
  assigner?: InputMaybe<Scalars["Boolean"]>;
  dateRange?: InputMaybe<DateRange>;
  limit?: InputMaybe<Scalars["Int"]>;
  page?: InputMaybe<Scalars["Int"]>;
  search?: InputMaybe<Scalars["String"]>;
  sortBy?: InputMaybe<AssetSortBy>;
  sortDirection?: InputMaybe<SortDirection>;
};

export enum AssetGroup {
  Banking = "banking",
  Benefits = "benefits",
  BusinessLoan = "business_loan",
  CommercialRealEstate = "commercial_real_estate",
  ConsumerLoan = "consumer_loan",
  Crowdfunding = "crowdfunding",
  Crypto = "crypto",
  Exotic = "exotic",
  HeritageRealEstate = "heritage_real_estate",
  HomeLoan = "home_loan",
  LifeInsuranceCapitalization = "lifeInsurance_capitalization",
  Other = "other",
  OtherLoan = "other_loan",
  PrivateEquity = "private_equity",
  ProfessionalRealEstate = "professional_real_estate",
  RetirementEmployee = "retirement_employee",
  RockPaper = "rock_paper",
  Securities = "securities",
  Unrecognized = "unrecognized",
}

export type AssetOwner = {
  __typename?: "AssetOwner";
  entity?: Maybe<Customer>;
  mode?: Maybe<Scalars["String"]>;
  ownership?: Maybe<Scalars["Float"]>;
};

export type AssetOwnerInput = {
  id: Scalars["ID"];
  mode?: InputMaybe<Scalars["String"]>;
  ownership?: Scalars["Float"];
};

export enum AssetPerformanceOrder {
  Best = "BEST",
  Worst = "WORST",
}

export enum AssetSortBy {
  AccountName = "accountName",
  FirstNameOrLastName = "first_name_or_lastName",
  Valuation = "valuation",
}

/** The most occuring asset type */
export type AssetStats = {
  __typename?: "AssetStats";
  /** The number of occurence. */
  count: Scalars["Int"];
  /** The asset type. */
  group: AssetGroup;
};

export type Authentication = {
  __typename?: "Authentication";
  date: Scalars["DateTime"];
  id: Scalars["String"];
  manager?: Maybe<Manager>;
  provider: Scalars["String"];
};

export type Budget = {
  __typename?: "Budget";
  amount: Scalars["Amount"];
  id: Scalars["ID"];
  libelle?: Maybe<Scalars["String"]>;
  name: Scalars["String"];
  type: Scalars["String"];
};

export type BudgetCreationInput = {
  amount: Scalars["Float"];
  name: Scalars["String"];
  type: Scalars["String"];
};

export enum BuildingStanding {
  Good = "GOOD",
  Low = "LOW",
  Normal = "NORMAL",
  Premium = "PREMIUM",
}

export type BusinessStats = {
  __typename?: "BusinessStats";
  created?: Maybe<Scalars["DateTime"]>;
  id: Scalars["ID"];
  name: Scalars["String"];
  ownerName: Scalars["String"];
};

/** A Company commercial campaign. */
export type Campaign = {
  __typename?: "Campaign";
  /** The campaign contract assets type. */
  assetGroup: AssetGroup;
  /** The list of the campaign contracts. */
  contractList?: Maybe<Array<CampaignContract>>;
  /** The campaign creation date. */
  created: Scalars["DateTime"];
  /** The number of contract for this campaign. */
  customersCount: Scalars["Int"];
  /** The campaign ID. */
  id: Scalars["ID"];
  /** The campaign name. */
  name: Scalars["String"];
  /** The campaign assets provider name. */
  provider?: Maybe<Scalars["String"]>;
  /** The total investment from all the contracts of the campaign. */
  totalInvestment: Scalars["Amount"];
  /** The campaign last update date. */
  updated: Scalars["DateTime"];
};

/** A campaign contract is a contract between a customer and a company for a specific asset provider. */
export type CampaignContract = {
  __typename?: "CampaignContract";
  /** The customer bind by the contract. */
  customer: Customer;
  /** The contract ID. */
  id: Scalars["ID"];
  /** The contract investment amount. */
  investment: Scalars["Amount"];
  /** The contract current status. */
  status: CampaignContractStatus;
};

/**
 * Field updatable for a campaign contract.
 * > If a field is null the campaign contract related field will not be updated.
 */
export type CampaignContractModification = {
  /** Set the contract invested amount. */
  investment?: InputMaybe<Scalars["Amount"]>;
  /**
   * Mark the contract as valid.
   * > Will set the contract status to valid.
   */
  markAsValid?: InputMaybe<Scalars["Boolean"]>;
};

/** Describe the status of a campaign contract. */
export enum CampaignContractStatus {
  /** The contract not valid (one of the document is expired). */
  Invalid = "invalid",
  /** The contract is waiting for a signature or for a investment amount. */
  Pending = "pending",
  /** The customer refused the contract. */
  Refused = "refused",
  /** The contract is valid, but assets are still not aggregated. */
  Unused = "unused",
  /** The contract is valid and aggregated. */
  Valid = "valid",
}

/** Field and values needed to create a campaign. */
export type CampaignCreation = {
  /**
   * The campaign assets type.
   * > Note that only crypto, stocks, lifeInsurance, crowdfunding, realEstate and exotic are accepted.
   */
  assetGroup: AssetGroup;
  /** The name of the campaign. */
  name: Scalars["String"];
  /** The asset provider name. */
  provider?: InputMaybe<Scalars["String"]>;
};

/**
 * Field updatable for a campaign.
 * > If a field is null the campaign related field will not be updated.
 */
export type CampaignModification = {
  /** The campaign name. */
  name?: InputMaybe<Scalars["String"]>;
  /** The campaign provider name. */
  provider?: InputMaybe<Scalars["String"]>;
};

export type Company = {
  __typename?: "Company";
  assetsUnderManagement: AssetConnection;
  created: Scalars["DateTime"];
  customerList: CustomerConnection;
  /** Resolve the company forms. */
  general?: Maybe<Scalars["CompanyGeneralForm"]>;
  id: Scalars["ID"];
  /** Resolve the company intermediation form. */
  intermediation?: Maybe<Scalars["CompanyIntermediationForm"]>;
  isParentCompany: Scalars["Boolean"];
  /** Resolve the company legal form. */
  legal?: Maybe<Scalars["CompanyLegalForm"]>;
  logo?: Maybe<Scalars["URL"]>;
  managerList?: Maybe<Array<Manager>>;
  metadata?: Maybe<Scalars["CompanyMetadata"]>;
  name: Scalars["String"];
  parentCompanyId?: Maybe<Scalars["ID"]>;
  quotas?: Maybe<CompanyQuotas>;
  updated: Scalars["DateTime"];
  wealth: Scalars["Amount"];
};

export type CompanyAssetsUnderManagementArgs = {
  computing?: InputMaybe<WealthFilter>;
  filters?: InputMaybe<AssetFilters>;
  group?: InputMaybe<AssetGroup>;
};

export type CompanyCustomerListArgs = {
  group?: InputMaybe<AssetGroup>;
  input?: InputMaybe<CustomersInput>;
};

export type CompanyWealthArgs = {
  computing?: InputMaybe<WealthFilter>;
};

export type CompanyCompliance = {
  __typename?: "CompanyCompliance";
  category: DocumentCategory;
  levels: Compliance;
};

export type CompanyCreation = {
  name: Scalars["String"];
};

export type CompanyGlobalCompliance = {
  __typename?: "CompanyGlobalCompliance";
  unvalid: Scalars["Float"];
  valid: Scalars["Float"];
  waiting: Scalars["Float"];
};

export type CompanyQuotas = {
  __typename?: "CompanyQuotas";
  digitalEnvelopeUsed: Scalars["Int"];
  storage: StorageQuota;
};

export type CompanyTaskFilter = {
  category?: InputMaybe<Scalars["String"]>;
  contractNumber?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  manager?: InputMaybe<Scalars["String"]>;
  page?: InputMaybe<Scalars["Int"]>;
  status?: InputMaybe<CompanyTaskFilterStatus>;
  take?: InputMaybe<Scalars["Int"]>;
};

export enum CompanyTaskFilterStatus {
  All = "all",
  Completed = "completed",
  InProgress = "in_progress",
  Late = "late",
}

export type CompanyTaskSearch = {
  __typename?: "CompanyTaskSearch";
  count: Scalars["Int"];
  tasks?: Maybe<Array<TaskSearchResult>>;
};

export type CompanyWealth = {
  __typename?: "CompanyWealth";
  assetsUnderManagement?: Maybe<Array<CustomerAsset>>;
  group: AssetGroup;
  performance?: Maybe<Performance>;
  valuation: Scalars["Amount"];
};

export type CompanyWealthAssetsUnderManagementArgs = {
  computing?: InputMaybe<WealthFilter>;
  limit?: Scalars["Int"];
};

export type CompanyWealthPerformanceArgs = {
  computing?: InputMaybe<WealthFilter>;
  end?: InputMaybe<Scalars["DateTime"]>;
  start?: InputMaybe<Scalars["DateTime"]>;
};

export type CompareContract = {
  mainContractID?: InputMaybe<Scalars["Int"]>;
  secondaryContractID?: InputMaybe<Scalars["Int"]>;
  type: Scalars["String"];
};

export type Compliance = {
  __typename?: "Compliance";
  unvalid: Scalars["Float"];
  valid: Scalars["Float"];
  waiting: Scalars["Float"];
};

export enum ComplianceEnum {
  Unvalid = "UNVALID",
  Valid = "VALID",
  Waiting = "WAITING",
}

export enum CondominiumCondition {
  Neclected = "NECLECTED",
  Standard = "STANDARD",
  WellMaintained = "WELL_MAINTAINED",
}

export type Conformity = {
  __typename?: "Conformity";
  compliance: ComplianceEnum;
  documentTitle: Scalars["String"];
  id: Scalars["ID"];
  treatement: Treatement;
  validityDate?: Maybe<Scalars["DateTime"]>;
};

export enum ConformityField {
  Der = "DER",
  Lcb = "LCB",
  EngagementLetter = "engagementLetter",
  InvestorProfile = "investorProfile",
  ObjectivesHeritage = "objectivesHeritage",
  OfficialDocument = "officialDocument",
}

export type ConformityStatus = {
  __typename?: "ConformityStatus";
  DER?: Maybe<StatusData>;
  LCB?: Maybe<StatusData>;
  conformityId?: Maybe<Scalars["String"]>;
  engagementLetter?: Maybe<StatusData>;
  informationCollections?: Maybe<StatusData>;
  investorProfile?: Maybe<StatusData>;
  objectivesHeritage?: Maybe<StatusData>;
  officialDocuments?: Maybe<StatusData>;
};

export type Connection = {
  __typename?: "Connection";
  connector: Connector;
  id: Scalars["ID"];
  identifier?: Maybe<Scalars["String"]>;
  manager: Manager;
  state: ConnectionState;
  updated: Scalars["DateTime"];
};

export type ConnectionResponse = {
  __typename?: "ConnectionResponse";
  connection: Connection;
  synchronization: Synchronization;
};

export enum ConnectionState {
  Active = "ACTIVE",
  AwaitingLink = "AWAITING_LINK",
  Error = "ERROR",
  InvalidCredentials = "INVALID_CREDENTIALS",
  NotImplemented = "NOT_IMPLEMENTED",
  Off = "OFF",
  Pending = "PENDING",
  Progress = "PROGRESS",
  RequireOtp = "REQUIRE_OTP",
}

export type Connector = {
  __typename?: "Connector";
  key: Scalars["Key"];
  labels: Scalars["Labels"];
  logo: Scalars["URL"];
  name: Scalars["String"];
  provider: ConnectorProvider;
};

export enum ConnectorProvider {
  Powens = "powens",
  Wealthcome = "wealthcome",
}

export type Contract = {
  __typename?: "Contract";
  accountUnits: Scalars["Float"];
  arbitrageFees?: Maybe<Scalars["String"]>;
  fundsOrigin?: Maybe<Scalars["String"]>;
  id: Scalars["ID"];
  insuranceCompany?: Maybe<Scalars["String"]>;
  intermediary?: Maybe<Scalars["String"]>;
  isSelected?: Maybe<Scalars["Boolean"]>;
  managed?: Maybe<Scalars["Boolean"]>;
  managedModes: Array<Maybe<Scalars["ManagedMode"]>>;
  maxTransferFees?: Maybe<Scalars["Float"]>;
  metadata?: Maybe<Scalars["FavoriteContractMetadata"]>;
  minTransferAmount?: Maybe<Scalars["Float"]>;
  name: Scalars["String"];
  performance?: Maybe<Scalars["Float"]>;
  type: Scalars["String"];
  yearlyFees?: Maybe<Scalars["Float"]>;
};

export type ContractIsSelectedArgs = {
  companyID: Scalars["ID"];
};

export type ContractMetadataArgs = {
  companyID: Scalars["ID"];
};

export type ContractAvailableFiltersValues = {
  __typename?: "ContractAvailableFiltersValues";
  fundsOrigins?: Maybe<Array<Maybe<Scalars["String"]>>>;
  insuranceCompanies?: Maybe<Array<Maybe<Scalars["String"]>>>;
  managedModes?: Maybe<Array<Maybe<Scalars["String"]>>>;
  types?: Maybe<Array<Maybe<Scalars["String"]>>>;
};

export type ContractFilters = {
  insuranceCompanies?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  name?: InputMaybe<Scalars["String"]>;
  selected?: InputMaybe<Scalars["Boolean"]>;
  types?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type ContractPaginated = {
  __typename?: "ContractPaginated";
  contracts: Array<Contract>;
  totalCount: Scalars["Int"];
  totalPages: Scalars["Int"];
};

export enum ContractSortBy {
  Name = "name",
  Selected = "selected",
}

export type Customer = {
  __typename?: "Customer";
  availableLiquidity?: Maybe<Scalars["Amount"]>;
  conformity: Treatement;
  conformityObjectives?: Maybe<Scalars["ConformityObjectives"]>;
  created: Scalars["DateTime"];
  email?: Maybe<Scalars["String"]>;
  firstName?: Maybe<Scalars["String"]>;
  fiscality?: Maybe<Scalars["FiscalityInformations"]>;
  hasB2CAccount?: Maybe<Scalars["Boolean"]>;
  id: Scalars["ID"];
  informations?: Maybe<CustomerInformations>;
  investorProfile?: Maybe<Scalars["InvestorProfile"]>;
  lastName?: Maybe<Scalars["String"]>;
  manager?: Maybe<Manager>;
  name: Scalars["String"];
  pendingInvitations?: Maybe<Array<CustomerInvite>>;
  performance?: Maybe<Performance>;
  phoneNumber?: Maybe<Scalars["String"]>;
  plan?: Maybe<CustomerPlan>;
  tag?: Maybe<Scalars["String"]>;
  type?: Maybe<CustomerType>;
  updated: Scalars["DateTime"];
  wealth: Scalars["Amount"];
};

export type CustomerAvailableLiquidityArgs = {
  companyID: Scalars["ID"];
};

export type CustomerConformityArgs = {
  companyID: Scalars["ID"];
};

export type CustomerFiscalityArgs = {
  year: Scalars["Int"];
};

export type CustomerManagerArgs = {
  companyID: Scalars["ID"];
};

export type CustomerPerformanceArgs = {
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
  end?: InputMaybe<Scalars["DateTime"]>;
  ignoring?: InputMaybe<Array<AssetGroup>>;
  start?: InputMaybe<Scalars["DateTime"]>;
};

export type CustomerWealthArgs = {
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
  ignoring?: InputMaybe<Array<AssetGroup>>;
};

export type CustomerAsset = {
  __typename?: "CustomerAsset";
  accountNumber?: Maybe<Scalars["String"]>;
  activity?: Maybe<Scalars["Amount"]>;
  categoryName?: Maybe<Scalars["String"]>;
  connection?: Maybe<Connection>;
  customer?: Maybe<Customer>;
  group: AssetGroup;
  id: Scalars["ID"];
  investmentCode?: Maybe<Scalars["String"]>;
  investmentLabel?: Maybe<Scalars["String"]>;
  investmentList?: Maybe<Array<CustomerAssetInvestment>>;
  investmentPerformance?: Maybe<Scalars["Amount"]>;
  investmentQuantity?: Maybe<Scalars["Float"]>;
  investmentUnitPrice?: Maybe<Scalars["Float"]>;
  investmentUnitValue?: Maybe<Scalars["Float"]>;
  investmentValuation?: Maybe<Scalars["Amount"]>;
  isManual: Scalars["Boolean"];
  metadata?: Maybe<Scalars["CustomerAssetMetadata"]>;
  mixedData?: Maybe<Scalars["CustomerAssetMixedData"]>;
  name: Scalars["String"];
  openDate?: Maybe<Scalars["DateTime"]>;
  owners?: Maybe<Array<AssetOwner>>;
  performance?: Maybe<Performance>;
  sri?: Maybe<Scalars["Int"]>;
  transfersAmount?: Maybe<Scalars["Amount"]>;
  underManagement: Scalars["Boolean"];
  valuation?: Maybe<Scalars["Amount"]>;
  withdrawalAmount?: Maybe<Scalars["Amount"]>;
};

export type CustomerAssetAccountNumber = {
  __typename?: "CustomerAssetAccountNumber";
  label: Scalars["String"];
  value: Scalars["String"];
};

export type CustomerAssetInvestment = {
  __typename?: "CustomerAssetInvestment";
  category?: Maybe<Scalars["String"]>;
  code?: Maybe<Scalars["String"]>;
  created?: Maybe<Scalars["DateTime"]>;
  logo?: Maybe<Scalars["String"]>;
  managementCompany?: Maybe<Scalars["String"]>;
  name: Scalars["String"];
  performance?: Maybe<Performance>;
  quantity?: Maybe<Scalars["Float"]>;
  riskIndicator?: Maybe<Scalars["Int"]>;
  sri?: Maybe<Scalars["String"]>;
  subcategory?: Maybe<Scalars["String"]>;
  unitPrice?: Maybe<Scalars["Float"]>;
  unitValue?: Maybe<Scalars["Float"]>;
  valuation?: Maybe<Scalars["Amount"]>;
};

export type CustomerConnection = {
  __typename?: "CustomerConnection";
  edges: Array<CustomerEdge>;
  totalCount: Scalars["Int"];
};

export type CustomerCreation = {
  denomination?: InputMaybe<Scalars["String"]>;
  email: Scalars["String"];
  firstName?: InputMaybe<Scalars["String"]>;
  gender?: InputMaybe<Scalars["String"]>;
  lastName?: InputMaybe<Scalars["String"]>;
  name: Scalars["String"];
  plan?: CustomerPlan;
  sendInvite: Scalars["Boolean"];
  socialReason?: InputMaybe<Scalars["String"]>;
  type: CustomerType;
};

export type CustomerDetails = {
  __typename?: "CustomerDetails";
  averageWealth: Scalars["Amount"];
  count: Scalars["Float"];
  managedWealth: Scalars["Amount"];
};

export type CustomerDetailsUpdateInput = {
  averageWealth?: InputMaybe<Scalars["Float"]>;
  count?: InputMaybe<Scalars["Float"]>;
  managedWealth?: InputMaybe<Scalars["Float"]>;
};

export type CustomerEdge = {
  __typename?: "CustomerEdge";
  node: Customer;
};

export type CustomerInformations = {
  __typename?: "CustomerInformations";
  company?: Maybe<Scalars["CompanyForm"]>;
  details?: Maybe<Scalars["DetailsInformations"]>;
  general?: Maybe<Scalars["GeneralInformations"]>;
  lcbLab?: Maybe<Scalars["LCBForm"]>;
  relations?: Maybe<CustomerRelation>;
};

export type CustomerInvestment = {
  __typename?: "CustomerInvestment";
  buyingDate?: Maybe<Scalars["DateTime"]>;
  category?: Maybe<Scalars["String"]>;
  code?: Maybe<Scalars["String"]>;
  dateValuation?: Maybe<Scalars["DateTime"]>;
  dateValue?: Maybe<Scalars["DateTime"]>;
  id: Scalars["ID"];
  instrument?: Maybe<Scalars["String"]>;
  investmentInstrument?: Maybe<InvestmentInstrument>;
  label?: Maybe<Scalars["String"]>;
  managementCompany?: Maybe<Scalars["String"]>;
  quantity?: Maybe<Scalars["Float"]>;
  riskIndicator?: Maybe<Scalars["Int"]>;
  sri?: Maybe<Scalars["String"]>;
  subcategory?: Maybe<Scalars["String"]>;
  unitPrice?: Maybe<Scalars["Float"]>;
  unitValue?: Maybe<Scalars["Float"]>;
  valuation?: Maybe<Scalars["Amount"]>;
};

export type CustomerInvestmentCreation = {
  buyingDate: Scalars["DateTime"];
  code: Scalars["String"];
  instrument: Scalars["String"];
  name?: InputMaybe<Scalars["String"]>;
  quantity: Scalars["Float"];
  unitPrice: Scalars["Amount"];
  unitValue: Scalars["Amount"];
};

export type CustomerInvite = {
  __typename?: "CustomerInvite";
  code: Scalars["String"];
  company?: Maybe<Company>;
  created: Scalars["DateTime"];
  email: Scalars["String"];
  id: Scalars["ID"];
  status: InviteStatus;
  updated: Scalars["DateTime"];
};

export type CustomerInviteCreation = {
  email: Scalars["String"];
  name?: InputMaybe<Scalars["String"]>;
};

export enum CustomerPlan {
  Free = "free",
  Premium = "premium",
  ProPremium = "pro_premium",
  ProSimple = "pro_simple",
}

export type CustomerRelation = {
  __typename?: "CustomerRelation";
  list: Array<Scalars["CustomerRelationForm"]>;
};

export type CustomerSearchResult = {
  __typename?: "CustomerSearchResult";
  id: Scalars["ID"];
  result: Array<CustomerSearchResultData>;
  schema: Scalars["CustomerSearchSchema"];
};

export type CustomerSearchResultData = Customer | CustomerAsset;

export enum CustomerSortBy {
  Advisor = "advisor",
  Email = "email",
  FirstName = "firstName",
  LastName = "lastName",
  Name = "name",
  PhoneNumber = "phoneNumber",
  Wealth = "wealth",
}

export enum CustomerType {
  Company = "company",
  Person = "person",
}

export type CustomerUpdate = {
  email?: InputMaybe<Scalars["String"]>;
  plan?: InputMaybe<CustomerPlan>;
};

export type CustomerWallet = {
  __typename?: "CustomerWallet";
  accountNumber?: Maybe<Scalars["String"]>;
  group: AssetGroup;
  id: Scalars["ID"];
  initialValuation?: Maybe<Scalars["Amount"]>;
  insuranceCompany?: Maybe<Scalars["String"]>;
  investments?: Maybe<Array<CustomerInvestment>>;
  irr?: Maybe<Scalars["Float"]>;
  metadata?: Maybe<Scalars["CustomerAssetMetadata"]>;
  mixedData?: Maybe<Scalars["CustomerAssetMixedData"]>;
  name: Scalars["String"];
  openDate?: Maybe<Scalars["DateTime"]>;
  risk?: Maybe<Scalars["Float"]>;
  sri?: Maybe<Scalars["Int"]>;
  transfersAmount?: Maybe<Scalars["Amount"]>;
  valuation?: Maybe<Scalars["Amount"]>;
  withdrawalAmount?: Maybe<Scalars["Amount"]>;
};

export type CustomerWealth = {
  __typename?: "CustomerWealth";
  assets?: Maybe<Array<CustomerAsset>>;
  group: AssetGroup;
  performance?: Maybe<Performance>;
  valuation: Scalars["Amount"];
};

export type CustomerWealthAssetsArgs = {
  computing?: InputMaybe<WealthFilter>;
};

export type CustomerWealthPerformanceArgs = {
  computing?: InputMaybe<WealthFilter>;
  end?: InputMaybe<Scalars["DateTime"]>;
  start?: InputMaybe<Scalars["DateTime"]>;
};

export type CustomersInput = {
  dateRange?: InputMaybe<DateRange>;
  limit?: InputMaybe<Scalars["Int"]>;
  page?: InputMaybe<Scalars["Int"]>;
  search?: InputMaybe<Scalars["String"]>;
  sortBy?: InputMaybe<CustomerSortBy>;
  sortDirection?: InputMaybe<SortDirection>;
  wealth?: InputMaybe<Range>;
};

export type CustomersSearchFilters = {
  __typename?: "CustomersSearchFilters";
  category?: Maybe<Array<Scalars["String"]>>;
  group?: Maybe<Array<Scalars["String"]>>;
  insuranceCompany?: Maybe<Array<Scalars["String"]>>;
  investmentManagementCompany?: Maybe<Array<Scalars["String"]>>;
  investmentType?: Maybe<Array<Scalars["String"]>>;
  tags?: Maybe<Array<Scalars["String"]>>;
};

export type DateRange = {
  from?: InputMaybe<Scalars["DateTime"]>;
  to?: InputMaybe<Scalars["DateTime"]>;
};

export enum Direction {
  East = "EAST",
  North = "NORTH",
  South = "SOUTH",
  West = "WEST",
}

export type Document = {
  __typename?: "Document";
  category: DocumentCategory;
  created: Scalars["DateTime"];
  customer: Customer;
  envelope?: Maybe<Envelope>;
  expiration?: Maybe<Scalars["DateTime"]>;
  extension: Scalars["String"];
  id: Scalars["ID"];
  name: Scalars["String"];
  notes?: Maybe<Scalars["String"]>;
  signature?: Maybe<DocumentSignatureInformation>;
  treatement?: Maybe<Treatement>;
  updated: Scalars["DateTime"];
  url?: Maybe<Scalars["String"]>;
};

export enum DocumentAction {
  CustomerConfirmation = "CustomerConfirmation",
  CustomerSigned = "CustomerSigned",
  ManagerConfirmation = "ManagerConfirmation",
  MangagerSigned = "MangagerSigned",
}

export enum DocumentActionType {
  Consultation = "consultation",
  Signature = "signature",
}

export type DocumentAdd = {
  category: Scalars["String"];
  envelopeID?: InputMaybe<Scalars["ID"]>;
  expirationDate?: InputMaybe<Scalars["DateTime"]>;
  extension: Scalars["String"];
  importDate?: InputMaybe<Scalars["DateTime"]>;
  name: Scalars["String"];
  signingDate?: InputMaybe<Scalars["DateTime"]>;
  validatingDate?: InputMaybe<Scalars["DateTime"]>;
};

export type DocumentCategory = {
  __typename?: "DocumentCategory";
  customerVisibility: Scalars["Boolean"];
  key: Scalars["String"];
  name: Scalars["String"];
};

export type DocumentCategoryV2 = {
  __typename?: "DocumentCategoryV2";
  customerVisibility: Scalars["Boolean"];
  documents?: Maybe<Array<Document>>;
  key: Scalars["String"];
  name: Scalars["String"];
};

export type DocumentCategoryV2DocumentsArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type DocumentConnection = {
  __typename?: "DocumentConnection";
  category: DocumentCategory;
  edges: Array<DocumentEdge>;
  totalCount: Scalars["Int"];
};

export type DocumentCreation = {
  actions?: InputMaybe<Array<DocumentAction>>;
  category?: InputMaybe<Scalars["String"]>;
  digitalAction: Scalars["Boolean"];
  extension: Scalars["String"];
  name: Scalars["String"];
};

export type DocumentCustomer = {
  limit?: InputMaybe<Scalars["Int"]>;
  name?: InputMaybe<Scalars["String"]>;
  page?: InputMaybe<Scalars["Int"]>;
  skip?: InputMaybe<Scalars["Int"]>;
  validityDate?: InputMaybe<Scalars["DateTime"]>;
};

export type DocumentEdge = {
  __typename?: "DocumentEdge";
  node: Document;
};

export enum DocumentOperationStatus {
  Completed = "completed",
  Created = "created",
  Expired = "expired",
  Rejected = "rejected",
}

export enum DocumentSendBy {
  Email = "EMAIL",
  Push = "PUSH",
}

export enum DocumentSignatory {
  Customer = "customer",
  Manager = "manager",
}

export type DocumentSignatureInformation = {
  __typename?: "DocumentSignatureInformation";
  customer?: Maybe<DocumentSignatureState>;
  digital: Scalars["Boolean"];
  manager?: Maybe<DocumentSignatureState>;
  signatories?: Maybe<Array<DocumentSignatory>>;
  signed?: Maybe<Scalars["DateTime"]>;
  validated?: Maybe<Scalars["DateTime"]>;
};

/** SIGNED not implemented yet, only PENDING & VALIDATED */
export enum DocumentSignatureState {
  Pending = "PENDING",
  Signed = "SIGNED",
  Validated = "VALIDATED",
}

export type DocumentTemplate = {
  __typename?: "DocumentTemplate";
  category: Scalars["String"];
  creator: DocumentTemplateCreator;
  description?: Maybe<Scalars["String"]>;
  extension: Scalars["String"];
  id: Scalars["String"];
  name: Scalars["String"];
  productType?: Maybe<Scalars["String"]>;
  properties?: Maybe<DocumentTemplateProperties>;
  /** State of the document status processing */
  status: DocumentTemplateStatus;
  url: Scalars["String"];
};

export type DocumentTemplateCreation = {
  description: Scalars["String"];
  extension: Scalars["String"];
  insertAfterPage?: InputMaybe<Scalars["Int"]>;
  name: Scalars["String"];
  productType?: InputMaybe<Scalars["String"]>;
};

/** The creator of the document Template */
export enum DocumentTemplateCreator {
  ChamberFirst = "CHAMBER_FIRST",
  ChamberSecond = "CHAMBER_SECOND",
  ChamberThird = "CHAMBER_THIRD",
  Company = "COMPANY",
  Wealthcome = "WEALTHCOME",
}

export type DocumentTemplateProperties = {
  __typename?: "DocumentTemplateProperties";
  insertAfterPage?: Maybe<Scalars["Int"]>;
  type?: Maybe<Scalars["String"]>;
};

/** Reprensent the status of the template regarding is usage to create new documents. */
export enum DocumentTemplateStatus {
  /** The template is usable but not recommended. */
  Deprecated = "DEPRECATED",
  /** The template is in review and configuration. */
  Pending = "PENDING",
  /** The template is ready to be use. */
  Ready = "READY",
}

export type DocumentTemplateUpdate = {
  description?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  productType?: InputMaybe<Scalars["String"]>;
  updatedFile?: InputMaybe<Scalars["String"]>;
};

export type DocumentToConformityInput = {
  documentId?: InputMaybe<Scalars["ID"]>;
  field?: InputMaybe<ConformityField>;
};

export type DocumentUpdate = {
  category?: InputMaybe<Scalars["String"]>;
  expirationDate?: InputMaybe<Scalars["DateTime"]>;
  importDate?: InputMaybe<Scalars["DateTime"]>;
  name?: InputMaybe<Scalars["String"]>;
  notes?: InputMaybe<Scalars["String"]>;
  signingDate?: InputMaybe<Scalars["DateTime"]>;
  treatement?: InputMaybe<Treatement>;
  updatedFile?: InputMaybe<Scalars["String"]>;
  validatingDate?: InputMaybe<Scalars["DateTime"]>;
};

export enum EntityRelatedType {
  Document = "document",
  Envelope = "envelope",
}

export type Envelope = {
  __typename?: "Envelope";
  access: EnvelopeAccess;
  /** URL access to the envelope for the company. */
  companyURL?: Maybe<Scalars["URL"]>;
  /**
   * Represent the conformity status of the envelope.
   * - UNVALID: if the envelope or one of it's document is not expired.
   * - WAITING: if at least one of the document is waiting for a signature.
   * - VALID: if all the document are signed and non-expired.
   */
  conformity?: Maybe<Treatement>;
  created: Scalars["DateTime"];
  /** URL access to the envelope for the customer. */
  customerURL?: Maybe<Scalars["URL"]>;
  documentList: Array<Document>;
  expiration?: Maybe<Scalars["DateTime"]>;
  id: Scalars["ID"];
  name: Scalars["String"];
};

export type EnvelopeCustomerUrlArgs = {
  customerID: Scalars["ID"];
};

export type EnvelopeDocumentListArgs = {
  categories?: InputMaybe<Array<Scalars["String"]>>;
  filter?: InputMaybe<Scalars["String"]>;
};

export enum EnvelopeAccess {
  Internal = "internal",
  Shared = "shared",
}

export type EnvelopeCreation = {
  access: EnvelopeAccess;
  documents: Array<InputMaybe<DocumentCreation>>;
  expiration?: InputMaybe<Scalars["DateTime"]>;
  name: Scalars["String"];
  /**
   * Paramters regarding the reminder needed to be sent after the expiration of the envelope.
   * - note: if the field is ommitted, not one reminder will be sent
   */
  reminder?: InputMaybe<EnvelopeReminderSettings>;
  repeatEvery?: InputMaybe<Scalars["Int"]>;
};

/** Envelope Reminder settings */
export type EnvelopeReminderSettings = {
  /** Interval in days between each reminder */
  interval: Scalars["Int"];
  /** Max number of remind that will be sent */
  times: Scalars["Int"];
};

export type EnvelopeUpdate = {
  name: Scalars["String"];
};

export type FavoriteInstrumentsFilters = {
  categories?: InputMaybe<Scalars["String"]>;
  code?: InputMaybe<Scalars["String"]>;
  managementCompanies?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
};

export type FavoriteSearchQuery = {
  __typename?: "FavoriteSearchQuery";
  id: Scalars["ID"];
  schema: Scalars["CustomerSearchSchema"];
};

export type FileFromGed = {
  __typename?: "FileFromGed";
  category: Scalars["String"];
  extension: Scalars["String"];
  name?: Maybe<Scalars["String"]>;
  url: Scalars["URL"];
};

export type FileFromTemplate = {
  __typename?: "FileFromTemplate";
  category: Scalars["String"];
  extension: Scalars["String"];
  id: Scalars["ID"];
  /** List of keys values, not fill accross the platform */
  inclompleteKeys?: Maybe<Array<Scalars["String"]>>;
  name?: Maybe<Scalars["String"]>;
  url: Scalars["URL"];
};

export type FileFromTemplateInput = {
  category: Scalars["String"];
  id: Scalars["ID"];
};

export enum Form {
  Goals = "GOALS",
  Lcb = "LCB",
  ProfilInvest = "PROFIL_INVEST",
}

export enum GardenType {
  Landscape = "LANDSCAPE",
  Landscaped = "LANDSCAPED",
  StandardNone = "STANDARD_NONE",
  ToBeLandscaped = "TO_BE_LANDSCAPED",
}

export type GedDocumentCreation = {
  actions?: InputMaybe<Array<DocumentAction>>;
  category?: InputMaybe<Scalars["String"]>;
  digitalAction: Scalars["Boolean"];
  documentID: Scalars["String"];
  name: Scalars["String"];
};

export type Holding = {
  __typename?: "Holding";
  companies: Array<BusinessStats>;
  form: Scalars["HoldingForm"];
  id: Scalars["ID"];
  name: Scalars["String"];
};

export type InstalledIntegration = {
  __typename?: "InstalledIntegration";
  access: Array<IntegrationAccess>;
  added: Scalars["DateTime"];
  configuration?: Maybe<InstalledIntegrationConfiguration>;
  key: Scalars["IntegrationKey"];
  manager?: Maybe<Manager>;
  state: IntegrationState;
};

export type InstalledIntegrationConfiguration = {
  __typename?: "InstalledIntegrationConfiguration";
  url?: Maybe<Scalars["URL"]>;
};

export type Instrument = {
  __typename?: "Instrument";
  code: Scalars["String"];
  name: Scalars["String"];
  price: Scalars["Amount"];
};

export type InstrumentAvailableFiltersValues = {
  __typename?: "InstrumentAvailableFiltersValues";
  categories?: Maybe<Array<Scalars["String"]>>;
  managementCompanies?: Maybe<Array<Scalars["String"]>>;
  riskIndicators?: Maybe<Array<Scalars["Int"]>>;
  subcategories?: Maybe<Array<Scalars["String"]>>;
};

export type InstrumentAvailableFiltersValuesCategoriesArgs = {
  group?: InputMaybe<AssetGroup>;
};

export type InstrumentAvailableFiltersValuesManagementCompaniesArgs = {
  group?: InputMaybe<AssetGroup>;
};

export type InstrumentAvailableFiltersValuesRiskIndicatorsArgs = {
  group?: InputMaybe<AssetGroup>;
};

export type InstrumentAvailableFiltersValuesSubcategoriesArgs = {
  group?: InputMaybe<AssetGroup>;
};

export type InstrumentCustomerDetail = {
  __typename?: "InstrumentCustomerDetail";
  amount: Scalars["Float"];
  assetGroup: Scalars["String"];
  assetId: Scalars["String"];
  assetName: Scalars["String"];
  code: Scalars["String"];
  customerId: Scalars["String"];
  customerName: Scalars["String"];
  detentions?: Maybe<Scalars["Float"]>;
  performance: PerformanceInstrument;
};

export type InstrumentDataWithMornigstar = {
  __typename?: "InstrumentDataWithMornigstar";
  category?: Maybe<Scalars["String"]>;
  closePrice?: Maybe<Scalars["Float"]>;
  closePriceDate?: Maybe<Scalars["DateTime"]>;
  code?: Maybe<Scalars["String"]>;
  currency?: Maybe<Scalars["String"]>;
  dic?: Maybe<Scalars["String"]>;
  esg?: Maybe<Scalars["Boolean"]>;
  fraisCourants?: Maybe<Scalars["String"]>;
  fraisGestion?: Maybe<Scalars["String"]>;
  fraisPriips?: Maybe<Scalars["String"]>;
  fraisRachat?: Maybe<Scalars["String"]>;
  fraisSouscription?: Maybe<Scalars["String"]>;
  frequenceValorisation?: Maybe<Scalars["String"]>;
  indiceReference?: Maybe<Scalars["String"]>;
  label?: Maybe<Scalars["String"]>;
  location?: Maybe<Scalars["String"]>;
  managementCompany?: Maybe<Scalars["String"]>;
  metadata?: Maybe<Scalars["InvestmentInstrumentMetadata"]>;
  minimumInvestissement?: Maybe<Scalars["String"]>;
  nombreParts?: Maybe<Scalars["String"]>;
  pea?: Maybe<Scalars["Boolean"]>;
  peaPme?: Maybe<Scalars["Boolean"]>;
  perfCalendaire?: Maybe<Array<PerfCalendaire>>;
  prospectus?: Maybe<Scalars["String"]>;
  riskIndicator?: Maybe<Scalars["Int"]>;
  sfdr?: Maybe<Scalars["Int"]>;
  subcategory?: Maybe<Scalars["String"]>;
};

export type InstrumentFavoriteAvailableFiltersValues = {
  __typename?: "InstrumentFavoriteAvailableFiltersValues";
  categories?: Maybe<Array<Scalars["String"]>>;
  managementCompanies?: Maybe<Array<Scalars["String"]>>;
};

export type InstrumentFavorites = {
  __typename?: "InstrumentFavorites";
  code: Scalars["String"];
  name: Scalars["String"];
};

export type InstrumentFilters = {
  categories?: InputMaybe<Array<Scalars["String"]>>;
  code?: InputMaybe<Scalars["String"]>;
  group: AssetGroup;
  managementCompanies?: InputMaybe<Array<Scalars["String"]>>;
  name?: InputMaybe<Scalars["String"]>;
  riskIndicators?: InputMaybe<Array<Scalars["Int"]>>;
  subcategories?: InputMaybe<Array<Scalars["String"]>>;
};

export type InstrumentPaginated = {
  __typename?: "InstrumentPaginated";
  instruments: Array<InvestmentInstrument>;
  totalCount: Scalars["Int"];
  totalPages: Scalars["Int"];
};

export type InstrumentPaginatedWithFavorites = {
  __typename?: "InstrumentPaginatedWithFavorites";
  instruments: Array<InvestmentInstrumentWithFavorites>;
  totalCount: Scalars["Int"];
  totalPages: Scalars["Int"];
};

export type InstrumentsCustomerDetails = {
  __typename?: "InstrumentsCustomerDetails";
  edges?: Maybe<Array<InstrumentCustomerDetail>>;
  totalCount: Scalars["Int"];
};

export type InstrumentsDataInput = {
  category?: InputMaybe<Scalars["String"]>;
  code: Scalars["String"];
  currency?: InputMaybe<Scalars["String"]>;
  location?: InputMaybe<Scalars["String"]>;
  managementCompany?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  riskIndicator: Scalars["Int"];
  sfdr: Scalars["Int"];
  subcategory?: InputMaybe<Scalars["String"]>;
};

export enum IntegrationAccess {
  Customers = "customers",
  Documents = "documents",
}

export enum IntegrationState {
  Error = "ERROR",
  Installed = "INSTALLED",
  Unconfigured = "UNCONFIGURED",
}

export type InvestmentInstrument = {
  __typename?: "InvestmentInstrument";
  category?: Maybe<Scalars["String"]>;
  code: Scalars["String"];
  dic?: Maybe<Scalars["String"]>;
  label: Scalars["String"];
  location?: Maybe<Scalars["String"]>;
  managementCompany?: Maybe<Scalars["String"]>;
  metadata?: Maybe<Scalars["InvestmentInstrumentMetadata"]>;
  prospectus?: Maybe<Scalars["String"]>;
  riskIndicator?: Maybe<Scalars["Int"]>;
  subcategory?: Maybe<Scalars["String"]>;
  valuation?: Maybe<Scalars["Amount"]>;
};

export type InvestmentInstrumentWithFavorites = {
  __typename?: "InvestmentInstrumentWithFavorites";
  category?: Maybe<Scalars["String"]>;
  code: Scalars["String"];
  dic?: Maybe<Scalars["String"]>;
  isFavorite?: Maybe<Scalars["Boolean"]>;
  label: Scalars["String"];
  location?: Maybe<Scalars["String"]>;
  managementCompany?: Maybe<Scalars["String"]>;
  metadata?: Maybe<Scalars["InvestmentInstrumentMetadata"]>;
  prospectus?: Maybe<Scalars["String"]>;
  riskIndicator?: Maybe<Scalars["Int"]>;
  subcategory?: Maybe<Scalars["String"]>;
  valuation?: Maybe<Scalars["Float"]>;
};

export type InvestmentValues = {
  buyingPrice?: InputMaybe<Scalars["Float"]>;
  category?: InputMaybe<Scalars["String"]>;
  code: Scalars["String"];
  date?: InputMaybe<Scalars["DateTime"]>;
  dic?: InputMaybe<Scalars["String"]>;
  label: Scalars["String"];
  managementCompany?: InputMaybe<Scalars["String"]>;
  prospectus?: InputMaybe<Scalars["String"]>;
  quantity: Scalars["Float"];
  riskIndicator?: InputMaybe<Scalars["Int"]>;
  subcategory?: InputMaybe<Scalars["String"]>;
  valuation?: InputMaybe<Scalars["Amount"]>;
};

export type InvestorEnvironmentalStats = {
  __typename?: "InvestorEnvironmentalStats";
  activities: Scalars["Float"];
  negativeImpacts: Scalars["Float"];
  socialObjectives: Scalars["Float"];
};

export type InvestorProfileStats = {
  __typename?: "InvestorProfileStats";
  knowledge: Scalars["Float"];
  nonFinancialSensitivity: Scalars["Float"];
  riskProfile: Scalars["Float"];
};

export enum InviteStatus {
  Accepted = "accepted",
  Rejected = "rejected",
  Sended = "sended",
}

export type LegalRepresentative = {
  __typename?: "LegalRepresentative";
  name: Scalars["String"];
};

export type Manager = {
  __typename?: "Manager";
  advisorRole?: Maybe<Scalars["String"]>;
  claims?: Maybe<Array<ManagerClaims>>;
  companyList?: Maybe<Array<Maybe<Company>>>;
  created: Scalars["DateTime"];
  disabledFeatures?: Maybe<Scalars["CompanyFeatures"]>;
  email: Scalars["String"];
  id: Scalars["ID"];
  name?: Maybe<Scalars["String"]>;
  newsletterSubscriber: Scalars["Boolean"];
  parentCompany?: Maybe<ParentCompany>;
  phone?: Maybe<Scalars["String"]>;
  providerCode?: Maybe<Scalars["String"]>;
  updated: Scalars["DateTime"];
};

export type ManagerClaimsArgs = {
  companyID: Scalars["ID"];
};

export enum ManagerClaims {
  Billing = "billing",
  ClientsInvite = "clients_invite",
  ClientsReads = "clients_reads",
  Management = "management",
  ManagerInvite = "manager_invite",
  ManagersRead = "managers_read",
}

export type ManagerCreation = {
  email: Scalars["String"];
  name: Scalars["String"];
  newsletterSubscriber?: InputMaybe<Scalars["Boolean"]>;
  phone?: InputMaybe<Scalars["String"]>;
};

export type ManagerData = {
  __typename?: "ManagerData";
  claims?: Maybe<Array<ManagerClaims>>;
  email: Scalars["String"];
  name: Scalars["String"];
};

export type ManagerDataInput = {
  email: Scalars["String"];
  name: Scalars["String"];
};

export type ManagerInvite = {
  __typename?: "ManagerInvite";
  company?: Maybe<Company>;
  created: Scalars["DateTime"];
  id: Scalars["ID"];
  updated: Scalars["DateTime"];
};

export type ManagerStats = {
  __typename?: "ManagerStats";
  claims?: Maybe<Array<ManagerClaims>>;
  email: Scalars["String"];
  id: Scalars["ID"];
  lastActive?: Maybe<Scalars["DateTime"]>;
  name?: Maybe<Scalars["String"]>;
  nbClients: Scalars["Int"];
  nbContracts: Scalars["Int"];
  providerCode?: Maybe<Scalars["String"]>;
};

export type Migration = {
  __typename?: "Migration";
  id: Scalars["ID"];
  migrator: Migrator;
  state: MigrationState;
};

export enum MigrationState {
  Done = "DONE",
  Failed = "FAILED",
  InProgress = "IN_PROGRESS",
}

export type Migrator = {
  __typename?: "Migrator";
  key: Scalars["Key"];
  logo: Scalars["URL"];
  name: Scalars["String"];
};

export type Mutation = {
  __typename?: "Mutation";
  addDocumentToConformity?: Maybe<ConformityStatus>;
  addManagedWealth?: Maybe<Company>;
  assetCreation?: Maybe<CustomerAsset>;
  /** Deaffect an asset from a customer. */
  assetDeaffectation?: Maybe<CustomerAsset>;
  /**
   * Delete an asset.
   * You can only delete an manual assets, this will not resolve if the asset is not manual.
   * - note: If the asset is under management, it will be deaffectated.
   */
  assetDeletion?: Maybe<CustomerAsset>;
  assetUpdate?: Maybe<CustomerAsset>;
  assetUpdateDatesAndStatus?: Maybe<CustomerAsset>;
  assetUpdateGroup?: Maybe<Array<CustomerAsset>>;
  assetsAffectation?: Maybe<Array<CustomerAsset>>;
  assetsUpdateOwners?: Maybe<CustomerAsset>;
  assignCustomersToCompany?: Maybe<Scalars["Boolean"]>;
  assignHoldingsToBusiness?: Maybe<Array<Holding>>;
  assignManagerToCustomer?: Maybe<Scalars["Boolean"]>;
  authenticationFirebase?: Maybe<Authentication>;
  automaticContractCompare?: Maybe<Contract>;
  availableTemplateUpdate?: Maybe<Array<DocumentTemplate>>;
  budgetCreation?: Maybe<Budget>;
  budgetItemDeletion: Scalars["Boolean"];
  businessCreate?: Maybe<Holding>;
  businessDeletion?: Maybe<Array<Customer>>;
  businessUpdate?: Maybe<Holding>;
  /** Update a campaign contract informations. */
  campaignContractModification?: Maybe<CampaignContract>;
  /** Create a new campaign for a company. */
  campaignCreation?: Maybe<Campaign>;
  /** Update campaign informations. */
  campaignModification?: Maybe<Campaign>;
  changeConnectionCredentials?: Maybe<ConnectionResponse>;
  companyCreation?: Maybe<Company>;
  companyDeletion?: Maybe<Scalars["Boolean"]>;
  /**
   * Update the company informations forms.
   * - note: If a form input is null, the field will not be updated.
   */
  companyUpdate?: Maybe<Company>;
  companyUpload?: Maybe<Upload>;
  completedTask?: Maybe<Task>;
  conformityObjectivesUpdate: Scalars["ConformityObjectives"];
  convertDocumentToPdf: Scalars["URL"];
  createCustomerFromBusiness?: Maybe<Scalars["ID"]>;
  createFilesFromGedDocuments?: Maybe<Array<Maybe<FileFromGed>>>;
  createFilesFromTemplate?: Maybe<Array<Maybe<FileFromTemplate>>>;
  createManager?: Maybe<Authentication>;
  createNote?: Maybe<Note>;
  createRelationFromExistingCustomer?: Maybe<Customer>;
  createTask?: Maybe<Task>;
  createTaskCategory?: Maybe<TaskCategory>;
  createUserFromRelation?: Maybe<Scalars["ID"]>;
  customerAssetInvestmentUpdate?: Maybe<Array<CustomerInvestment>>;
  customerCreation?: Maybe<Customer>;
  customerCreationMultiple?: Maybe<PendingJob>;
  customerDeletion: Scalars["Boolean"];
  customerDetailsUpdate?: Maybe<CustomerDetails>;
  customerFiscality?: Maybe<Scalars["FiscalityInformations"]>;
  customerInformationsDetail?: Maybe<Scalars["DetailsInformations"]>;
  customerInformationsGeneral?: Maybe<Scalars["DetailsInformations"]>;
  customerInvestmentCreation?: Maybe<CustomerAssetInvestment>;
  customerReferenceCreation?: Maybe<Customer>;
  /** Update all access to the customer reference (will delete existing one) */
  customerReferencesAccessUpdate?: Maybe<Array<ReferenceAccess>>;
  customerRelationCreate?: Maybe<Scalars["CustomerRelationForm"]>;
  customerRelationDelete?: Maybe<Scalars["CustomerRelationForm"]>;
  customerRelationUpdate?: Maybe<Scalars["CustomerRelationForm"]>;
  customerRelations?: Maybe<Scalars["CustomerRelationForm"]>;
  /**
   * Update a customer informations.
   * - note: If a field is null, the field will not be updated.
   */
  customerUpdate?: Maybe<Customer>;
  customerUpload?: Maybe<Upload>;
  customerWalletAddActivityYearHistory?: Maybe<ActivityByYear>;
  customerWalletAddTransaction?: Maybe<Transaction>;
  customerWalletInvestmentSriUpdate?: Maybe<CustomerInvestment>;
  customerWalletTransactionDeletion?: Maybe<Scalars["Boolean"]>;
  customerWalletTransactionUpdate?: Maybe<Transaction>;
  customerWalletUpdateActivityYearHistory?: Maybe<ActivityByYear>;
  deleteConnection?: Maybe<Scalars["Boolean"]>;
  deleteFavoriteSearchQuery?: Maybe<FavoriteSearchQuery>;
  deleteNote?: Maybe<Note>;
  documentAdd?: Maybe<Document>;
  documentCategoryCreation?: Maybe<DocumentCategoryV2>;
  documentCategoryDeletion?: Maybe<DocumentCategoryV2>;
  documentCategoryUpdate?: Maybe<DocumentCategoryV2>;
  documentCustomTemplateCreation?: Maybe<DocumentTemplate>;
  documentDeletion: Scalars["Boolean"];
  documentNotification: Scalars["Boolean"];
  documentTemplateCreation?: Maybe<DocumentTemplate>;
  documentTemplateDeletion?: Maybe<Scalars["Boolean"]>;
  documentTemplateDeletionMultiple?: Maybe<Scalars["Boolean"]>;
  documentTemplateUpdate?: Maybe<DocumentTemplate>;
  documentUpdate?: Maybe<Document>;
  /**
   * Affect an envelope document to a campaign.
   * > This will create a campaign contract if none already exist for the customer.
   */
  envelopeAffectation?: Maybe<Envelope>;
  envelopeCreation?: Maybe<Envelope>;
  envelopeDeletion?: Maybe<Envelope>;
  envelopeUpdate?: Maybe<Envelope>;
  exportAssets?: Maybe<Scalars["String"]>;
  exportCustomerList?: Maybe<Scalars["String"]>;
  exportCustomersParentCompany?: Maybe<Scalars["String"]>;
  exportNotes?: Maybe<Scalars["String"]>;
  exportSearchResult?: Maybe<Scalars["String"]>;
  exportTasks?: Maybe<Scalars["String"]>;
  externalInvestorProfileForm?: Maybe<Scalars["PublicFormSubmit"]>;
  fileDetetion?: Maybe<ObjectStored>;
  formFilling?: Maybe<Scalars["PublicFormSubmit"]>;
  generateAdequacy?: Maybe<AdequacyFile>;
  holdingCreation?: Maybe<Holding>;
  holdingDeletion?: Maybe<Array<Holding>>;
  holdingUpdate?: Maybe<Holding>;
  instrumentSriUpdate?: Maybe<InvestmentInstrument>;
  instrumentUpdate?: Maybe<InvestmentInstrument>;
  integrationAccessConfiguration?: Maybe<InstalledIntegration>;
  integrationDeletion?: Maybe<InstalledIntegration>;
  /** Install an integration in a company workspace. */
  integrationInstallation?: Maybe<InstalledIntegration>;
  investmentDeletion?: Maybe<CustomerAssetInvestment>;
  investorProfileFormUpdate?: Maybe<Scalars["InvestorProfileForm"]>;
  investorProfileUpdate?: Maybe<Scalars["InvestorProfile"]>;
  inviteCustomer?: Maybe<CustomerInvite>;
  inviteManager?: Maybe<Manager>;
  linkContractToCompany?: Maybe<Contract>;
  logoutAuthentication?: Maybe<Authentication>;
  managerCreation?: Maybe<Manager>;
  managerDeletion: Scalars["Boolean"];
  managerInviteAccept?: Maybe<ManagerInvite>;
  managerInviteReject?: Maybe<ManagerInvite>;
  managerUpdate?: Maybe<Manager>;
  /** Mark a notification as read. */
  notificationRead?: Maybe<Notification>;
  notifyDocumentStatus?: Maybe<Array<Maybe<PendingJob>>>;
  notifyEnvelopeStatus?: Maybe<Array<Maybe<PendingJob>>>;
  ownAccountDeletion: Scalars["Boolean"];
  parentCompanyAvailableTemplateUpdate?: Maybe<Array<DocumentTemplate>>;
  parentCompanyDocumentCustomTemplateCreation?: Maybe<DocumentTemplate>;
  parentCompanyDocumentTemplateCreation?: Maybe<DocumentTemplate>;
  parentCompanyDocumentTemplateDeletion?: Maybe<Scalars["Boolean"]>;
  parentCompanyDocumentTemplateDeletionMultiple?: Maybe<Scalars["Boolean"]>;
  parentCompanyDocumentTemplateUpdate?: Maybe<DocumentTemplate>;
  parentCompanyIntegrationDeletion?: Maybe<InstalledIntegration>;
  /** Install an integration in a parent company workspace. */
  parentCompanyIntegrationInstallation?: Maybe<InstalledIntegration>;
  parentCompanyManagerUpdate?: Maybe<Manager>;
  /**
   * Update the parent company informations forms.
   * - note: If a form input is null, the field will not be updated.
   */
  parentCompanyUpdate?: Maybe<Company>;
  parentCompanyUpload?: Maybe<Upload>;
  /** Synchronize a parent company migrator */
  parentSynchronizeMigrator?: Maybe<Migration>;
  profileUpdate?: Maybe<Manager>;
  projectCreation?: Maybe<Project>;
  projectDeletion?: Maybe<Project>;
  projectUpdate?: Maybe<Project>;
  projectValidation?: Maybe<Project>;
  reportingCreation?: Maybe<Array<Maybe<Report>>>;
  requestFormFilling?: Maybe<PendingJob>;
  saveFavoriteSearchQuery?: Maybe<FavoriteSearchQuery>;
  sendToSign?: Maybe<PendingJob>;
  setInstrumentFavorite?: Maybe<InstrumentFavorites>;
  /**
   * Switch the asset management of a customer.
   * It allow a manager to move the asset into the wealh of the customer or into the undermanagement wealth of the company.
   */
  switchAssetManagement?: Maybe<CustomerAsset>;
  synchronizeAssetUnderManagement?: Maybe<Scalars["String"]>;
  /** Synchronize a connector (WEALTHCOME) */
  synchronizeConnector?: Maybe<ConnectionResponse>;
  /** Synchronize a migrator */
  synchronizeMigrator?: Maybe<Migration>;
  /** Synchronize a connector (POWENS) */
  synchronizePowensConnector?: Maybe<Scalars["URL"]>;
  /** Create an new empty team inside a company. */
  teamCreation?: Maybe<Team>;
  /**
   * Delete a team.
   * - note: This will not delete the manager inside the team.
   */
  teamDeletion?: Maybe<Team>;
  /**
   * Add a manager to a team.
   * - note: If the manager is already in the team, it will do nothing.
   */
  teamMemberAdd?: Maybe<Team>;
  /**
   * Remove a manager from a team.
   * - note: If the manager is not in the team, it will do nothing.
   */
  teamMemberRemove?: Maybe<Team>;
  /** Update a team informations. */
  teamUpdate?: Maybe<Team>;
  unlinkContractFromCompany?: Maybe<Contract>;
  unlinkFromCustomerReference?: Maybe<Scalars["ID"]>;
  updateCustomerManager?: Maybe<Customer>;
  updateFavoriteContractMetadata?: Maybe<Scalars["FavoriteContractMetadata"]>;
  updateLCB?: Maybe<Scalars["LCBForm"]>;
  updateManagerProviderCode?: Maybe<Manager>;
  updateNote?: Maybe<Note>;
  updateTask?: Maybe<Task>;
  validateConnectionOTP?: Maybe<Connection>;
};

export type MutationAddDocumentToConformityArgs = {
  companyID: Scalars["ID"];
  conformityID?: InputMaybe<Scalars["ID"]>;
  customerID: Scalars["ID"];
  input: DocumentToConformityInput;
};

export type MutationAddManagedWealthArgs = {
  companyID: Scalars["ID"];
  managedWealth: Scalars["Amount"];
};

export type MutationAssetCreationArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  group: AssetGroup;
  investments?: InputMaybe<Array<InvestmentValues>>;
  name: Scalars["String"];
  values: Scalars["CustomerAssetCreationValues"];
};

export type MutationAssetDeaffectationArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationAssetDeletionArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationAssetUpdateArgs = {
  assetID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  group: AssetGroup;
  investments?: InputMaybe<Array<InvestmentValues>>;
  name: Scalars["String"];
  values: Scalars["CustomerAssetCreationValues"];
};

export type MutationAssetUpdateDatesAndStatusArgs = {
  assetID: Scalars["ID"];
  closeDate?: InputMaybe<Scalars["DateTime"]>;
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  openDate: Scalars["DateTime"];
  status: Scalars["String"];
};

export type MutationAssetUpdateGroupArgs = {
  assets: Array<Scalars["ID"]>;
  categoryName?: InputMaybe<Scalars["String"]>;
  companyID: Scalars["ID"];
  group: AssetGroup;
};

export type MutationAssetsAffectationArgs = {
  assets: Array<Scalars["ID"]>;
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type MutationAssetsUpdateOwnersArgs = {
  assetID: Scalars["ID"];
  companyID: Scalars["ID"];
  values: Array<AssetOwnerInput>;
};

export type MutationAssignCustomersToCompanyArgs = {
  companyID: Scalars["ID"];
  customersID: Array<Scalars["ID"]>;
  managerID: Scalars["ID"];
  parentCompanyID: Scalars["ID"];
};

export type MutationAssignHoldingsToBusinessArgs = {
  businessID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  holdingIds: Array<Scalars["ID"]>;
};

export type MutationAssignManagerToCustomerArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  managerID: Scalars["ID"];
};

export type MutationAuthenticationFirebaseArgs = {
  token: Scalars["String"];
};

export type MutationAutomaticContractCompareArgs = {
  input: CompareContract;
};

export type MutationAvailableTemplateUpdateArgs = {
  IDs: Array<Scalars["ID"]>;
  companyID: Scalars["ID"];
};

export type MutationBudgetCreationArgs = {
  budgetID?: InputMaybe<Scalars["ID"]>;
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: BudgetCreationInput;
};

export type MutationBudgetItemDeletionArgs = {
  budgetID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type MutationBusinessCreateArgs = {
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  input: Scalars["HoldingCompanyInfo"];
};

export type MutationBusinessDeletionArgs = {
  IDs: Array<Scalars["ID"]>;
  companyID: Scalars["ID"];
};

export type MutationBusinessUpdateArgs = {
  activities?: InputMaybe<Scalars["CompanyActivitiesSchema"]>;
  bankAccounts?: InputMaybe<Scalars["CompanyFinancialSchema"]>;
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  information?: InputMaybe<Scalars["HoldingCompanyInfo"]>;
  managers?: InputMaybe<Scalars["HoldingManagerSchema"]>;
  nbManagers?: InputMaybe<Scalars["NbHoldingManagerSchema"]>;
  tag?: InputMaybe<Scalars["String"]>;
};

export type MutationCampaignContractModificationArgs = {
  companyID: Scalars["ID"];
  contractID: Scalars["ID"];
  update?: InputMaybe<CampaignContractModification>;
};

export type MutationCampaignCreationArgs = {
  companyID: Scalars["ID"];
  input: CampaignCreation;
};

export type MutationCampaignModificationArgs = {
  campaignID: Scalars["ID"];
  companyID: Scalars["ID"];
  update?: InputMaybe<CampaignModification>;
};

export type MutationChangeConnectionCredentialsArgs = {
  connectionID: Scalars["ID"];
  credentials: Scalars["ConnectionMetadata"];
};

export type MutationCompanyCreationArgs = {
  input: CompanyCreation;
};

export type MutationCompanyDeletionArgs = {
  companyID: Scalars["ID"];
};

export type MutationCompanyUpdateArgs = {
  companyID: Scalars["ID"];
  generalInput?: InputMaybe<Scalars["CompanyGeneralForm"]>;
  intermediationInput?: InputMaybe<Scalars["CompanyIntermediationForm"]>;
  legalInput?: InputMaybe<Scalars["CompanyLegalForm"]>;
};

export type MutationCompanyUploadArgs = {
  companyID: Scalars["ID"];
  files: Array<UploadRequest>;
};

export type MutationCompletedTaskArgs = {
  taskId: Scalars["ID"];
};

export type MutationConformityObjectivesUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["ConformityObjectives"];
};

export type MutationConvertDocumentToPdfArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  fileUrl: Scalars["String"];
};

export type MutationCreateCustomerFromBusinessArgs = {
  addToCustomerReference?: InputMaybe<Scalars["Boolean"]>;
  businessID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type MutationCreateFilesFromGedDocumentsArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  gedDocumentsID: Array<Scalars["String"]>;
};

export type MutationCreateFilesFromTemplateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  templates: Array<FileFromTemplateInput>;
};

export type MutationCreateManagerArgs = {
  input?: InputMaybe<ManagerCreation>;
  token: Scalars["String"];
};

export type MutationCreateNoteArgs = {
  companyID: Scalars["ID"];
  content: Scalars["String"];
  customerID: Scalars["ID"];
};

export type MutationCreateRelationFromExistingCustomerArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  existingCustomerID: Scalars["ID"];
};

export type MutationCreateTaskArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: TaskInput;
};

export type MutationCreateTaskCategoryArgs = {
  companyID: Scalars["ID"];
  input: TaskCategoryInput;
};

export type MutationCreateUserFromRelationArgs = {
  addToCustomerReference: Scalars["Boolean"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationCustomerAssetInvestmentUpdateArgs = {
  assetID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  update: Array<InvestmentValues>;
};

export type MutationCustomerCreationArgs = {
  companyID: Scalars["ID"];
  input: CustomerCreation;
};

export type MutationCustomerCreationMultipleArgs = {
  companyID: Scalars["ID"];
  file: Scalars["String"];
  invite: Scalars["Boolean"];
};

export type MutationCustomerDeletionArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type MutationCustomerDetailsUpdateArgs = {
  companyID: Scalars["ID"];
  input: CustomerDetailsUpdateInput;
};

export type MutationCustomerFiscalityArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: Scalars["FiscalityInformations"];
  year: Scalars["Int"];
};

export type MutationCustomerInformationsDetailArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: Scalars["DetailsInformations"];
};

export type MutationCustomerInformationsGeneralArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: Scalars["GeneralInformations"];
};

export type MutationCustomerInvestmentCreationArgs = {
  assetID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: CustomerInvestmentCreation;
};

export type MutationCustomerReferenceCreationArgs = {
  addCustomerSheet?: InputMaybe<Scalars["Boolean"]>;
  companyID: Scalars["ID"];
  input: Array<CustomerCreation>;
};

export type MutationCustomerReferencesAccessUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  values: Array<ReferenceAccessValue>;
};

export type MutationCustomerRelationCreateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["CustomerRelationForm"];
};

export type MutationCustomerRelationDeleteArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationCustomerRelationUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
  input: Scalars["CustomerRelationForm"];
};

export type MutationCustomerRelationsArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: Scalars["CustomerRelationForm"];
};

export type MutationCustomerUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  update: CustomerUpdate;
};

export type MutationCustomerUploadArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  files: Array<UploadRequest>;
};

export type MutationCustomerWalletAddActivityYearHistoryArgs = {
  assetID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: ActivityYearHistoryCreationInput;
};

export type MutationCustomerWalletAddTransactionArgs = {
  assetID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: TransactionCreationInput;
};

export type MutationCustomerWalletInvestmentSriUpdateArgs = {
  id: Scalars["ID"];
  riskIndicator: Scalars["Int"];
};

export type MutationCustomerWalletTransactionDeletionArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  transactionID: Scalars["ID"];
};

export type MutationCustomerWalletTransactionUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: TransactionCreationInput;
  transactionID: Scalars["ID"];
};

export type MutationCustomerWalletUpdateActivityYearHistoryArgs = {
  assetID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: ActivityYearHistoryCreationInput;
};

export type MutationDeleteConnectionArgs = {
  connectionID: Scalars["ID"];
};

export type MutationDeleteFavoriteSearchQueryArgs = {
  id: Scalars["ID"];
};

export type MutationDeleteNoteArgs = {
  noteId: Scalars["ID"];
};

export type MutationDocumentAddArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: DocumentAdd;
};

export type MutationDocumentCategoryCreationArgs = {
  companyID: Scalars["ID"];
  customerVisibility?: Scalars["Boolean"];
  name: Scalars["String"];
};

export type MutationDocumentCategoryDeletionArgs = {
  companyID: Scalars["ID"];
  key: Scalars["String"];
};

export type MutationDocumentCategoryUpdateArgs = {
  companyID: Scalars["ID"];
  customerVisibility: Scalars["Boolean"];
  key: Scalars["String"];
  updatedName: Scalars["String"];
};

export type MutationDocumentCustomTemplateCreationArgs = {
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
};

export type MutationDocumentDeletionArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  documentID: Array<Scalars["ID"]>;
};

export type MutationDocumentNotificationArgs = {
  documentIdList: Array<Scalars["String"]>;
  sendBy: DocumentSendBy;
};

export type MutationDocumentTemplateCreationArgs = {
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
};

export type MutationDocumentTemplateDeletionArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationDocumentTemplateDeletionMultipleArgs = {
  companyID: Scalars["ID"];
  ids: Array<Scalars["ID"]>;
};

export type MutationDocumentTemplateUpdateArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: DocumentTemplateUpdate;
};

export type MutationDocumentUpdateArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  update?: InputMaybe<DocumentUpdate>;
};

export type MutationEnvelopeAffectationArgs = {
  campaignID: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  envelopeID: Scalars["ID"];
};

export type MutationEnvelopeCreationArgs = {
  addParagraphs?: InputMaybe<Scalars["Boolean"]>;
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: EnvelopeCreation;
  notificationRequests?: InputMaybe<Array<NotificationRequest>>;
  projectID?: InputMaybe<Scalars["ID"]>;
};

export type MutationEnvelopeDeletionArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  envelopeID: Scalars["ID"];
};

export type MutationEnvelopeUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input?: InputMaybe<EnvelopeAccess>;
};

export type MutationExportAssetsArgs = {
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
  filters?: InputMaybe<AssetFilters>;
  group: AssetGroup;
};

export type MutationExportCustomerListArgs = {
  companyID: Scalars["ID"];
  input?: InputMaybe<CustomersInput>;
};

export type MutationExportCustomersParentCompanyArgs = {
  id: Scalars["ID"];
};

export type MutationExportNotesArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type MutationExportSearchResultArgs = {
  companyID: Scalars["ID"];
  hasInvestQuery?: InputMaybe<Scalars["Boolean"]>;
  id: Scalars["ID"];
};

export type MutationExportTasksArgs = {
  companyID: Scalars["ID"];
  customerID?: InputMaybe<Scalars["ID"]>;
};

export type MutationExternalInvestorProfileFormArgs = {
  customerID: Scalars["ID"];
  input: Scalars["PublicFormSubmit"];
};

export type MutationFileDetetionArgs = {
  storageID: Scalars["String"];
};

export type MutationFormFillingArgs = {
  input: Scalars["PublicFormSubmit"];
  isSyncing?: InputMaybe<Scalars["Boolean"]>;
  token: Scalars["String"];
};

export type MutationGenerateAdequacyArgs = {
  customerID: Scalars["ID"];
  projectID: Scalars["ID"];
};

export type MutationHoldingCreationArgs = {
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  input: Scalars["HoldingForm"];
  name: Scalars["String"];
};

export type MutationHoldingDeletionArgs = {
  IDs: Array<Scalars["ID"]>;
  companyID: Scalars["ID"];
};

export type MutationHoldingUpdateArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: Scalars["HoldingForm"];
  name: Scalars["String"];
};

export type MutationInstrumentSriUpdateArgs = {
  id: Scalars["ID"];
  riskIndicator: Scalars["Int"];
};

export type MutationInstrumentUpdateArgs = {
  code: Scalars["ID"];
  companyID: Scalars["ID"];
  input: InstrumentsDataInput;
};

export type MutationIntegrationAccessConfigurationArgs = {
  access: Array<IntegrationAccess>;
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
  settings?: InputMaybe<Scalars["InstalledIntegrationSettings"]>;
};

export type MutationIntegrationDeletionArgs = {
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
};

export type MutationIntegrationInstallationArgs = {
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
  settings?: InputMaybe<Scalars["InstalledIntegrationSettings"]>;
};

export type MutationInvestmentDeletionArgs = {
  asset: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  invesmentID: Scalars["ID"];
};

export type MutationInvestorProfileFormUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["InvestorProfileForm"];
};

export type MutationInvestorProfileUpdateArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["InvestorProfile"];
};

export type MutationInviteCustomerArgs = {
  companyID: Scalars["ID"];
  input: CustomerInviteCreation;
};

export type MutationInviteManagerArgs = {
  company: CompanyCreation;
  input: ManagerCreation;
};

export type MutationLinkContractToCompanyArgs = {
  companyId: Scalars["ID"];
  contractId: Scalars["ID"];
};

export type MutationManagerCreationArgs = {
  claims?: InputMaybe<Array<ManagerClaims>>;
  companyID: Scalars["ID"];
  input: ManagerCreation;
};

export type MutationManagerDeletionArgs = {
  companyID: Scalars["ID"];
  managerID: Array<Scalars["ID"]>;
};

export type MutationManagerInviteAcceptArgs = {
  id: Scalars["ID"];
};

export type MutationManagerInviteRejectArgs = {
  id: Scalars["ID"];
};

export type MutationManagerUpdateArgs = {
  claims?: InputMaybe<Array<ManagerClaims>>;
  companyID: Scalars["ID"];
  input: ManagerDataInput;
  managerID: Scalars["ID"];
};

export type MutationNotificationReadArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationNotifyDocumentStatusArgs = {
  documentID: Scalars["ID"];
  requests: Array<NotificationRequest>;
};

export type MutationNotifyEnvelopeStatusArgs = {
  envelopeID: Scalars["ID"];
  requests: Array<NotificationRequest>;
};

export type MutationParentCompanyAvailableTemplateUpdateArgs = {
  IDs: Array<Scalars["ID"]>;
  companyID: Scalars["ID"];
};

export type MutationParentCompanyDocumentCustomTemplateCreationArgs = {
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
};

export type MutationParentCompanyDocumentTemplateCreationArgs = {
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
};

export type MutationParentCompanyDocumentTemplateDeletionArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationParentCompanyDocumentTemplateDeletionMultipleArgs = {
  companyID: Scalars["ID"];
  ids: Array<Scalars["ID"]>;
};

export type MutationParentCompanyDocumentTemplateUpdateArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: DocumentTemplateUpdate;
};

export type MutationParentCompanyIntegrationDeletionArgs = {
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
};

export type MutationParentCompanyIntegrationInstallationArgs = {
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
  settings?: InputMaybe<Scalars["InstalledIntegrationSettings"]>;
};

export type MutationParentCompanyManagerUpdateArgs = {
  claims?: InputMaybe<Array<ManagerClaims>>;
  companyID: Scalars["ID"];
  input: ManagerDataInput;
  managerID: Scalars["ID"];
};

export type MutationParentCompanyUpdateArgs = {
  companyID: Scalars["ID"];
  generalInput?: InputMaybe<Scalars["CompanyGeneralForm"]>;
  intermediationInput?: InputMaybe<Scalars["CompanyIntermediationForm"]>;
  legalInput?: InputMaybe<Scalars["CompanyLegalForm"]>;
};

export type MutationParentCompanyUploadArgs = {
  companyID: Scalars["ID"];
  files: Array<UploadRequest>;
};

export type MutationParentSynchronizeMigratorArgs = {
  companyID: Scalars["ID"];
  metadata: Scalars["MigrationMetadata"];
  migratorID: Scalars["ID"];
};

export type MutationProfileUpdateArgs = {
  input: ProfileUpdate;
};

export type MutationProjectCreationArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  metadata: Scalars["ProjectMetadata"];
  name: Scalars["String"];
  type: ProjectType;
};

export type MutationProjectDeletionArgs = {
  id: Scalars["ID"];
};

export type MutationProjectUpdateArgs = {
  id: Scalars["ID"];
  metadata?: InputMaybe<Scalars["ProjectMetadata"]>;
};

export type MutationProjectValidationArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationReportingCreationArgs = {
  assetsList?: InputMaybe<Array<Scalars["String"]>>;
  companyID: Scalars["ID"];
  contains?: InputMaybe<Array<Scalars["String"]>>;
  customerID: Scalars["ID"];
  documentTypes: Array<Scalars["String"]>;
  period?: InputMaybe<Scalars["Int"]>;
};

export type MutationRequestFormFillingArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  form: Form;
};

export type MutationSaveFavoriteSearchQueryArgs = {
  schema: Scalars["CustomerSearchSchema"];
};

export type MutationSendToSignArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  form: Form;
};

export type MutationSetInstrumentFavoriteArgs = {
  code: Scalars["ID"];
  companyID: Scalars["ID"];
  isFavorite: Scalars["Boolean"];
};

export type MutationSwitchAssetManagementArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
  management: WealthFilter;
};

export type MutationSynchronizeAssetUnderManagementArgs = {
  companyID: Scalars["ID"];
};

export type MutationSynchronizeConnectorArgs = {
  companyID: Scalars["ID"];
  connectorID: Scalars["ID"];
  metadata: Scalars["ConnectionMetadata"];
};

export type MutationSynchronizeMigratorArgs = {
  companyID: Scalars["ID"];
  metadata: Scalars["MigrationMetadata"];
  migratorID: Scalars["ID"];
};

export type MutationSynchronizePowensConnectorArgs = {
  companyID: Scalars["ID"];
  connectorID: Scalars["ID"];
};

export type MutationTeamCreationArgs = {
  companyID: Scalars["ID"];
  input: TeamValues;
};

export type MutationTeamDeletionArgs = {
  companyID: Scalars["ID"];
  name: Scalars["String"];
};

export type MutationTeamMemberAddArgs = {
  companyID: Scalars["ID"];
  teamName: Scalars["String"];
  values?: InputMaybe<Array<TeamMember>>;
};

export type MutationTeamMemberRemoveArgs = {
  companyID: Scalars["ID"];
  teamName: Scalars["String"];
  values?: InputMaybe<Array<Scalars["ID"]>>;
};

export type MutationTeamUpdateArgs = {
  companyID: Scalars["ID"];
  input: TeamValues;
  name: Scalars["String"];
};

export type MutationUnlinkContractFromCompanyArgs = {
  companyId: Scalars["ID"];
  contractId: Scalars["ID"];
};

export type MutationUnlinkFromCustomerReferenceArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type MutationUpdateCustomerManagerArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  managerID?: InputMaybe<Scalars["ID"]>;
  providerCode?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateFavoriteContractMetadataArgs = {
  companyID: Scalars["ID"];
  contractID: Scalars["ID"];
  input: Scalars["FavoriteContractMetadata"];
};

export type MutationUpdateLcbArgs = {
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  input: Scalars["LCBForm"];
};

export type MutationUpdateManagerProviderCodeArgs = {
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
  providerCode?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateNoteArgs = {
  content: Scalars["String"];
  noteId: Scalars["ID"];
};

export type MutationUpdateTaskArgs = {
  companyID: Scalars["ID"];
  input: TaskInput;
  taskId: Scalars["ID"];
};

export type MutationValidateConnectionOtpArgs = {
  connectionID: Scalars["ID"];
  otp: Scalars["String"];
};

export type Note = {
  __typename?: "Note";
  content: Scalars["String"];
  created: Scalars["DateTime"];
  id: Scalars["ID"];
  updated: Scalars["DateTime"];
};

export type Notification = {
  __typename?: "Notification";
  company: Company;
  created: Scalars["DateTime"];
  data?: Maybe<Scalars["NotificationData"]>;
  id: Scalars["ID"];
  read?: Maybe<Scalars["DateTime"]>;
  type: NotificationType;
  updated: Scalars["DateTime"];
};

export type NotificationByType = {
  __typename?: "NotificationByType";
  count: Scalars["Int"];
  notifications?: Maybe<Array<Notification>>;
  read: Scalars["Int"];
  type: NotificationType;
};

export type NotificationFilter = {
  skip?: InputMaybe<Scalars["Int"]>;
  take?: InputMaybe<Scalars["Int"]>;
  type?: InputMaybe<NotificationType>;
};

export type NotificationRequest = {
  delayUntil?: InputMaybe<Scalars["DateTime"]>;
  transport: NotificationTransport;
};

export enum NotificationTransport {
  Mail = "mail",
  Push = "push",
}

export enum NotificationType {
  AggregationBlocked = "aggregation_blocked",
  AggregationCgp = "aggregation_cgp",
  AggregationClient = "aggregation_client",
  Arbitrage = "arbitrage",
  AutomaticReminder = "automatic_reminder",
  Campaign = "campaign",
  CustomerResponse = "customer_response",
  DocumentExpiration = "document_expiration",
  DocumentSend = "document_send",
  DocumentSignature = "document_signature",
  EnvelopeReminder = "envelope_reminder",
  FundMovement = "fund_movement",
  InformationFill = "information_fill",
  InvestProfileUpdate = "invest_profile_update",
  NewProject = "new_project",
  OtherAggregation = "other_aggregation",
  OtherProject = "other_project",
  OtherRegulation = "other_regulation",
  Redemption = "redemption",
  RegulationKitUpdate = "regulation_kit_update",
  ReportingSend = "reporting_send",
  Subscription = "subscription",
  TaskReminder = "task_reminder",
}

export type ObjectStored = {
  __typename?: "ObjectStored";
  name: Scalars["String"];
  url: Scalars["String"];
};

export type Pagination = {
  page?: InputMaybe<Scalars["Int"]>;
  size?: InputMaybe<Scalars["Int"]>;
};

export type ParentCompany = {
  __typename?: "ParentCompany";
  admins?: Maybe<Array<Manager>>;
  companies?: Maybe<Array<Company>>;
  customer?: Maybe<ParentCompanyCustomer>;
  customers: ParentCompanyCustomerConnection;
  general?: Maybe<Scalars["CompanyGeneralForm"]>;
  id: Scalars["ID"];
  intermediation?: Maybe<Scalars["CompanyIntermediationForm"]>;
  liquidity: Scalars["Amount"];
  logo?: Maybe<Scalars["URL"]>;
  managers?: Maybe<Array<ParentCompanyManager>>;
  mostOccuringAssetType?: Maybe<AssetStats>;
  name: Scalars["String"];
  notifications?: Maybe<Array<Notification>>;
  performance?: Maybe<Performance>;
  stats: ParentCompanyStats;
  tasks?: Maybe<TasksCompany>;
  wealth: Scalars["Amount"];
};

export type ParentCompanyCustomerArgs = {
  id: Scalars["ID"];
};

export type ParentCompanyCustomersArgs = {
  input?: InputMaybe<ParentCompanyCustomersInput>;
};

export type ParentCompanyLiquidityArgs = {
  computing?: InputMaybe<WealthFilter>;
};

export type ParentCompanyNotificationsArgs = {
  filter?: InputMaybe<NotificationFilter>;
};

export type ParentCompanyPerformanceArgs = {
  computing?: InputMaybe<WealthFilter>;
  end?: InputMaybe<Scalars["DateTime"]>;
  start?: InputMaybe<Scalars["DateTime"]>;
};

export type ParentCompanyTasksArgs = {
  filter?: InputMaybe<CompanyTaskFilter>;
};

export type ParentCompanyWealthArgs = {
  computing?: InputMaybe<WealthFilter>;
};

export type ParentCompanyCustomer = {
  __typename?: "ParentCompanyCustomer";
  assets?: Maybe<Array<CustomerAsset>>;
  company?: Maybe<Company>;
  connectors?: Maybe<Array<Connector>>;
  customer: Customer;
  manager?: Maybe<Manager>;
  wealth: Scalars["Amount"];
};

export type ParentCompanyCustomerWealthArgs = {
  computing?: InputMaybe<WealthFilter>;
};

export type ParentCompanyCustomerConnection = {
  __typename?: "ParentCompanyCustomerConnection";
  edges: Array<ParentCompanyCustomerNode>;
  totalCount: Scalars["Int"];
};

export type ParentCompanyCustomerNode = {
  __typename?: "ParentCompanyCustomerNode";
  node: ParentCompanyCustomer;
};

export type ParentCompanyCustomersInput = {
  page?: InputMaybe<Scalars["Int"]>;
  search?: InputMaybe<Scalars["String"]>;
  status?: InputMaybe<Scalars["String"]>;
  take?: InputMaybe<Scalars["Int"]>;
};

export type ParentCompanyManager = {
  __typename?: "ParentCompanyManager";
  company: Company;
  manager: Manager;
};

export type ParentCompanyManagerData = {
  __typename?: "ParentCompanyManagerData";
  claims?: Maybe<Array<ManagerClaims>>;
  email: Scalars["String"];
  name: Scalars["String"];
};

export type ParentCompanyStats = {
  __typename?: "ParentCompanyStats";
  customersCount: Scalars["Int"];
};

export type PendingJob = {
  __typename?: "PendingJob";
  delayedUntil?: Maybe<Scalars["DateTime"]>;
  id: Scalars["String"];
};

export type PerfCalendaire = {
  __typename?: "PerfCalendaire";
  value: Scalars["String"];
  year: Scalars["String"];
};

export type Performance = {
  __typename?: "Performance";
  evolution?: Maybe<Scalars["Float"]>;
  gain?: Maybe<Scalars["Amount"]>;
};

export type PerformanceInstrument = {
  __typename?: "PerformanceInstrument";
  amount: Scalars["Float"];
  percentage: Scalars["Float"];
};

export enum PoolType {
  None = "NONE",
  Standard = "STANDARD",
  Standing = "STANDING",
}

export type ProductGovernance = {
  __typename?: "ProductGovernance";
  contractName: Scalars["String"];
  contractType: Scalars["String"];
  fundPerf: Scalars["String"];
  id: Scalars["ID"];
  insurer: Scalars["String"];
};

export type ProductGovernancePaginated = {
  __typename?: "ProductGovernancePaginated";
  list: Array<ProductGovernance>;
  totalCount: Scalars["Int"];
  totalPages: Scalars["Int"];
};

export type ProfileUpdate = {
  advisorRole?: InputMaybe<Scalars["String"]>;
  email?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  newsletterSubscriber?: InputMaybe<Scalars["Boolean"]>;
  phone?: InputMaybe<Scalars["String"]>;
};

export type Project = {
  __typename?: "Project";
  archived?: Maybe<Scalars["DateTime"]>;
  created: Scalars["DateTime"];
  customer: Customer;
  id: Scalars["ID"];
  metadata: Scalars["ProjectMetadata"];
  name?: Maybe<Scalars["String"]>;
  type: ProjectType;
  validated?: Maybe<Scalars["DateTime"]>;
};

export type ProjectFile = {
  __typename?: "ProjectFile";
  extension: Scalars["String"];
  name: Scalars["String"];
  projectID: Scalars["ID"];
  url: Scalars["String"];
};

export enum ProjectType {
  /** The project is a CIF arbitrage. */
  ArbitrageCif = "arbitrage_cif",
  /** The project is a Life Insurance arbitrage. */
  ArbitrageLifeInsurance = "arbitrage_life_insurance",
  /** The project is a CIF complementary. */
  ComplementaryCif = "complementary_cif",
  /** The project is a Life Insurance complementary. */
  ComplementaryLifeInsurance = "complementary_life_insurance",
  /** The project is a redemption. */
  Redemption = "redemption",
  /** The project is a CIF subscription. */
  SubscriptionCif = "subscription_cif",
  /** The project is a Life Insurance subscription. */
  SubscriptionLifeInsurance = "subscription_life_insurance",
}

export type ProviderStatistics = {
  __typename?: "ProviderStatistics";
  key: Scalars["Key"];
  logo: Scalars["String"];
  name: Scalars["String"];
  total: Scalars["Float"];
};

export type Query = {
  __typename?: "Query";
  SCPIList: Array<Scpi>;
  accountingAssets?: Maybe<Array<Maybe<AssetGroup>>>;
  accountingProviderStatistics?: Maybe<Array<ProviderStatistics>>;
  accountingTransactionList?: Maybe<AccountingTransactionConnection>;
  /**
   *   This query is used for the contract number selector in the add task form
   * it will resolve the distinct list of account number
   */
  assetsAccountNumbers?: Maybe<Array<CustomerAssetAccountNumber>>;
  authenticated?: Maybe<Authentication>;
  availableIntegrations?: Maybe<Array<Scalars["IntegrationKey"]>>;
  budgetList?: Maybe<Array<Budget>>;
  businessList?: Maybe<Array<Customer>>;
  /** List all available campaigns for a company. */
  campaignList?: Maybe<Array<Campaign>>;
  companiesManagedAsset?: Maybe<Array<CustomerAsset>>;
  company?: Maybe<Company>;
  companyConformityCategories?: Maybe<Array<DocumentCategory>>;
  companyList?: Maybe<Array<Maybe<Company>>>;
  companyManagersStats?: Maybe<Array<ManagerStats>>;
  companyTaskCountByCategories?: Maybe<Array<TaskCountByCategory>>;
  companyTaskCountByManagers?: Maybe<Array<TaskCountByManager>>;
  companyTaskCountByStatus?: Maybe<Array<TaskCountByStatus>>;
  companyTaskSearch?: Maybe<CompanyTaskSearch>;
  companyWealth?: Maybe<Array<CompanyWealth>>;
  conformityObjectives: Scalars["ConformityObjectives"];
  conformityStatus: ConformityStatus;
  /** Resolve the connections for the client */
  connectionList?: Maybe<Array<Connection>>;
  /** Check if the company has invalid credentials for a connection */
  connectionsHasInvalidCreds?: Maybe<Scalars["Boolean"]>;
  /** Resolve a single connector */
  connector?: Maybe<Connector>;
  /** Resolve the connectors available */
  connectorList?: Maybe<Array<Connector>>;
  contractFilters: ContractAvailableFiltersValues;
  contractListing?: Maybe<ContractPaginated>;
  customer?: Maybe<Customer>;
  customerAsset?: Maybe<CustomerAsset>;
  customerAssets?: Maybe<Array<CustomerAsset>>;
  customerDetails?: Maybe<CustomerDetails>;
  customerInvitePendingList?: Maybe<Array<ManagerInvite>>;
  /** List all manager that have an indirect reference to the customer (the manager has access to the reference).). */
  customerReferenceAccessList?: Maybe<Array<ReferenceAccess>>;
  customerRelation?: Maybe<CustomerRelation>;
  customerWallet?: Maybe<CustomerWallet>;
  customerWalletActivitiesByYear?: Maybe<Array<ActivityByYear>>;
  customerWalletActivitiesGraph?: Maybe<Array<Activity>>;
  customerWalletTransactions?: Maybe<TransactionPaginated>;
  customerWealth?: Maybe<Array<CustomerWealth>>;
  customersCompliance: Array<CompanyCompliance>;
  customersSearchFilters?: Maybe<CustomersSearchFilters>;
  document?: Maybe<Document>;
  documentCategory?: Maybe<DocumentCategoryV2>;
  /** Company scoped available document categories. */
  documentCategoryList?: Maybe<Array<DocumentCategoryV2>>;
  documentCustomerList: DocumentConnection;
  documentList?: Maybe<Array<Document>>;
  /** Provide all template existing on the wealthcome platform */
  documentTemplateList?: Maybe<Array<DocumentTemplate>>;
  envelope?: Maybe<Envelope>;
  envelopeList: Array<Envelope>;
  existingFormData?: Maybe<Scalars["PublicFormSubmit"]>;
  externalInvestorProfileForm?: Maybe<Scalars["PublicFormSubmit"]>;
  favoriteSearchQueries?: Maybe<Array<FavoriteSearchQuery>>;
  fetchSingleTask?: Maybe<Task>;
  getSearchResult?: Maybe<CustomerSearchResult>;
  getUsersInCustomerReference?: Maybe<Array<Customer>>;
  globalCompliance?: Maybe<CompanyGlobalCompliance>;
  globalLiquidity?: Maybe<Scalars["Amount"]>;
  globalPerformance?: Maybe<Performance>;
  holdingList?: Maybe<Array<Holding>>;
  instrumentDetails: InstrumentDataWithMornigstar;
  instrumentFavoriteFilters: InstrumentFavoriteAvailableFiltersValues;
  instrumentFavorites?: Maybe<InstrumentListingWithFavoritesOutput>;
  instrumentFilters: InstrumentAvailableFiltersValues;
  instrumentIsFavorite: Scalars["Boolean"];
  instrumentListing?: Maybe<InstrumentPaginated>;
  instrumentListingWithFavorites?: Maybe<InstrumentListingWithFavoritesOutput>;
  /** Resolve an integration. */
  integrationDetails?: Maybe<InstalledIntegration>;
  /** List installed integration for a company. */
  integrationInstalledList?: Maybe<Array<InstalledIntegration>>;
  investorEnvironmentalStats?: Maybe<InvestorEnvironmentalStats>;
  investorProfileForm?: Maybe<Scalars["InvestorProfileForm"]>;
  investorProfileStats?: Maybe<InvestorProfileStats>;
  lcb?: Maybe<Scalars["LCBForm"]>;
  listCompanyTask?: Maybe<TasksCompany>;
  listCompanyTaskByType?: Maybe<TaskByGroup>;
  listCustomerTask?: Maybe<Array<Task>>;
  listNote?: Maybe<Array<Note>>;
  managerData?: Maybe<ManagerData>;
  managerInvitePendingList?: Maybe<Array<ManagerInvite>>;
  /** Resolve the migrations for the client */
  migrationList?: Maybe<Array<Migration>>;
  /** Resolve a single migrator */
  migrator?: Maybe<Migrator>;
  /** Resolve the migratos available */
  migratorList?: Maybe<Array<Migrator>>;
  /** Resolve the most occuring asset type for a company. */
  mostOccuringAssetType?: Maybe<AssetStats>;
  /** Resolve the notifications for the client. */
  notificationList?: Maybe<Array<Notification>>;
  notificationListByType?: Maybe<Array<NotificationByType>>;
  parentCompany: ParentCompany;
  /** Check if the company has invalid credentials for a connection */
  parentCompanyConnectionsHasInvalidCreds?: Maybe<Scalars["Boolean"]>;
  parentCompanyDocumentTemplateList?: Maybe<Array<DocumentTemplate>>;
  parentCompanyInfos: Company;
  /** List installed integration for a parent company. */
  parentCompanyIntegrationInstalledList?: Maybe<Array<InstalledIntegration>>;
  parentCompanyManagerData?: Maybe<ParentCompanyManagerData>;
  productGovernanceList?: Maybe<ProductGovernancePaginated>;
  project: Project;
  projectCompanyList?: Maybe<Array<Project>>;
  projectList?: Maybe<Array<Project>>;
  projectProductTypes?: Maybe<Array<Scalars["String"]>>;
  publicCustomerWealth?: Maybe<Array<CustomerWealth>>;
  retrieveOtherOwner?: Maybe<Customer>;
  retrieveRealEstate?: Maybe<RealEstate>;
  /** Search campaigns, for a company, first by name then by provider. */
  searchCampaign?: Maybe<Array<Campaign>>;
  searchCustomer?: Maybe<Array<Customer>>;
  /** Search customers, for a company, first by name then by email. */
  searchCustomers?: Maybe<CustomerSearchResult>;
  searchInstrument?: Maybe<Array<Instrument>>;
  searchInvestmentsByInstrumentCodeInAssets: InstrumentsCustomerDetails;
  taskCategoryList?: Maybe<Array<TaskCategory>>;
  /** Resolve the team informations. */
  team?: Maybe<Team>;
  /** Resolve the list of teams inside a company */
  teamsList?: Maybe<Array<Team>>;
  templateVariables: Array<TemplateVariable>;
};

export type QueryScpiListArgs = {
  name: Scalars["String"];
};

export type QueryAccountingAssetsArgs = {
  companyID: Scalars["ID"];
  filters: AccountingAnalyticsFilters;
};

export type QueryAccountingProviderStatisticsArgs = {
  companyID: Scalars["ID"];
  filters: AccountingAnalyticsFilters;
};

export type QueryAccountingTransactionListArgs = {
  companyID: Scalars["ID"];
  filters: AccountingAnalyticsFilters;
  pagination: Pagination;
};

export type QueryAssetsAccountNumbersArgs = {
  companyID: Scalars["ID"];
  customerID?: InputMaybe<Scalars["ID"]>;
};

export type QueryAvailableIntegrationsArgs = {
  companyID: Scalars["ID"];
};

export type QueryBudgetListArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryBusinessListArgs = {
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
};

export type QueryCampaignListArgs = {
  companyID: Scalars["ID"];
  limit?: InputMaybe<Scalars["Int"]>;
};

export type QueryCompaniesManagedAssetArgs = {
  companyID: Scalars["ID"];
  end?: InputMaybe<Scalars["DateTime"]>;
  ignoring?: InputMaybe<Array<AssetGroup>>;
  limit?: InputMaybe<Scalars["Int"]>;
  options: AssetPerformanceOrder;
  start?: InputMaybe<Scalars["DateTime"]>;
};

export type QueryCompanyArgs = {
  id: Scalars["ID"];
};

export type QueryCompanyConformityCategoriesArgs = {
  companyID: Scalars["ID"];
};

export type QueryCompanyManagersStatsArgs = {
  companyID: Scalars["ID"];
};

export type QueryCompanyTaskCountByCategoriesArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
};

export type QueryCompanyTaskCountByManagersArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
};

export type QueryCompanyTaskCountByStatusArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
};

export type QueryCompanyTaskSearchArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
};

export type QueryCompanyWealthArgs = {
  computing?: InputMaybe<WealthFilter>;
  id: Scalars["ID"];
};

export type QueryConformityObjectivesArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryConformityStatusArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryConnectionListArgs = {
  companyID: Scalars["ID"];
};

export type QueryConnectionsHasInvalidCredsArgs = {
  companyID: Scalars["ID"];
};

export type QueryConnectorArgs = {
  connectorID: Scalars["ID"];
};

export type QueryContractListingArgs = {
  companyID: Scalars["ID"];
  filters: ContractFilters;
  pagination: Pagination;
  sortBy?: InputMaybe<ContractSortBy>;
};

export type QueryCustomerArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type QueryCustomerAssetArgs = {
  id: Scalars["ID"];
};

export type QueryCustomerAssetsArgs = {
  companyID: Scalars["ID"];
  groups?: InputMaybe<Array<AssetGroup>>;
  id: Scalars["ID"];
};

export type QueryCustomerDetailsArgs = {
  companyID: Scalars["ID"];
};

export type QueryCustomerInvitePendingListArgs = {
  companyID: Scalars["ID"];
};

export type QueryCustomerReferenceAccessListArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryCustomerRelationArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryCustomerWalletArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type QueryCustomerWalletActivitiesByYearArgs = {
  assetId: Scalars["ID"];
};

export type QueryCustomerWalletActivitiesGraphArgs = {
  assetId: Scalars["ID"];
  from?: InputMaybe<Scalars["DateTime"]>;
};

export type QueryCustomerWalletTransactionsArgs = {
  assetId: Scalars["ID"];
  dateRange?: InputMaybe<DateRange>;
  pagination?: InputMaybe<Pagination>;
  search?: InputMaybe<Scalars["String"]>;
};

export type QueryCustomerWealthArgs = {
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
  groups?: InputMaybe<Array<AssetGroup>>;
  id: Scalars["ID"];
};

export type QueryCustomersComplianceArgs = {
  company: Scalars["ID"];
};

export type QueryCustomersSearchFiltersArgs = {
  companyID: Scalars["ID"];
  underManagement?: InputMaybe<Scalars["Boolean"]>;
};

export type QueryDocumentArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
};

export type QueryDocumentCategoryArgs = {
  categoryKey: Scalars["String"];
  companyID: Scalars["ID"];
};

export type QueryDocumentCategoryListArgs = {
  companyID: Scalars["ID"];
};

export type QueryDocumentCustomerListArgs = {
  company: Scalars["String"];
  documentCategory?: InputMaybe<Scalars["String"]>;
  input?: InputMaybe<DocumentCustomer>;
};

export type QueryDocumentListArgs = {
  categories?: InputMaybe<Array<Scalars["String"]>>;
  companyID: Scalars["ID"];
  contractID?: InputMaybe<Scalars["ID"]>;
  customerID: Scalars["ID"];
  withoutEnvelope?: InputMaybe<Scalars["Boolean"]>;
};

export type QueryDocumentTemplateListArgs = {
  available?: InputMaybe<Scalars["Boolean"]>;
  companyID: Scalars["ID"];
};

export type QueryEnvelopeArgs = {
  id: Scalars["ID"];
};

export type QueryEnvelopeListArgs = {
  categories?: InputMaybe<Array<Scalars["String"]>>;
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryExistingFormDataArgs = {
  token: Scalars["String"];
};

export type QueryExternalInvestorProfileFormArgs = {
  customerID: Scalars["ID"];
};

export type QueryFetchSingleTaskArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type QueryGetSearchResultArgs = {
  companyID: Scalars["ID"];
  id: Scalars["ID"];
};

export type QueryGetUsersInCustomerReferenceArgs = {
  companyId: Scalars["ID"];
  customerId: Scalars["ID"];
};

export type QueryGlobalComplianceArgs = {
  companyID: Scalars["ID"];
};

export type QueryGlobalLiquidityArgs = {
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
};

export type QueryGlobalPerformanceArgs = {
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
  end?: InputMaybe<Scalars["DateTime"]>;
  start?: InputMaybe<Scalars["DateTime"]>;
};

export type QueryHoldingListArgs = {
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
};

export type QueryInstrumentDetailsArgs = {
  id: Scalars["ID"];
};

export type QueryInstrumentFavoritesArgs = {
  filters: FavoriteInstrumentsFilters;
  pagination: Pagination;
};

export type QueryInstrumentIsFavoriteArgs = {
  code: Scalars["ID"];
  companyID: Scalars["ID"];
};

export type QueryInstrumentListingArgs = {
  filters: InstrumentFilters;
  pagination: Pagination;
};

export type QueryInstrumentListingWithFavoritesArgs = {
  filters: FavoriteInstrumentsFilters;
  pagination: Pagination;
};

export type QueryIntegrationDetailsArgs = {
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
};

export type QueryIntegrationInstalledListArgs = {
  companyID: Scalars["ID"];
};

export type QueryInvestorEnvironmentalStatsArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryInvestorProfileFormArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryInvestorProfileStatsArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryLcbArgs = {
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  id: Scalars["ID"];
};

export type QueryListCompanyTaskArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
};

export type QueryListCompanyTaskByTypeArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
};

export type QueryListCustomerTaskArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryListNoteArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryManagerDataArgs = {
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
};

export type QueryMigrationListArgs = {
  companyID: Scalars["ID"];
};

export type QueryMigratorArgs = {
  migratorID: Scalars["ID"];
};

export type QueryMostOccuringAssetTypeArgs = {
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
};

export type QueryNotificationListArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<NotificationFilter>;
};

export type QueryNotificationListByTypeArgs = {
  companyID: Scalars["ID"];
  filter?: InputMaybe<NotificationFilter>;
};

export type QueryParentCompanyArgs = {
  id: Scalars["ID"];
};

export type QueryParentCompanyConnectionsHasInvalidCredsArgs = {
  companyID: Scalars["ID"];
};

export type QueryParentCompanyDocumentTemplateListArgs = {
  available?: InputMaybe<Scalars["Boolean"]>;
  companyID: Scalars["ID"];
};

export type QueryParentCompanyInfosArgs = {
  id: Scalars["ID"];
};

export type QueryParentCompanyIntegrationInstalledListArgs = {
  companyID: Scalars["ID"];
};

export type QueryParentCompanyManagerDataArgs = {
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
};

export type QueryProductGovernanceListArgs = {
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  pagination: Pagination;
};

export type QueryProjectArgs = {
  id: Scalars["ID"];
};

export type QueryProjectCompanyListArgs = {
  companyID: Scalars["ID"];
  limit?: InputMaybe<Scalars["Int"]>;
  productType?: InputMaybe<Scalars["String"]>;
  range: TimeRange;
  type?: InputMaybe<ProjectType>;
  validated?: InputMaybe<Scalars["Boolean"]>;
};

export type QueryProjectListArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  productType?: InputMaybe<Scalars["String"]>;
  range: TimeRange;
  type?: InputMaybe<ProjectType>;
};

export type QueryProjectProductTypesArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
};

export type QueryPublicCustomerWealthArgs = {
  computing?: InputMaybe<WealthFilter>;
  groups?: InputMaybe<Array<AssetGroup>>;
  token: Scalars["String"];
};

export type QueryRetrieveOtherOwnerArgs = {
  assetId: Scalars["ID"];
  currentOwnerId: Scalars["ID"];
};

export type QueryRetrieveRealEstateArgs = {
  assetID: Scalars["ID"];
};

export type QuerySearchCampaignArgs = {
  companyID: Scalars["ID"];
  limit?: Scalars["Int"];
  text?: InputMaybe<Scalars["String"]>;
};

export type QuerySearchCustomerArgs = {
  companyID: Scalars["ID"];
  limit?: InputMaybe<Scalars["Int"]>;
  suggestionsTokens?: InputMaybe<Array<Scalars["String"]>>;
  text?: InputMaybe<Scalars["String"]>;
};

export type QuerySearchCustomersArgs = {
  companyID: Scalars["ID"];
  schema: Scalars["CustomerSearchSchema"];
};

export type QuerySearchInstrumentArgs = {
  group: AssetGroup;
  limit?: Scalars["Int"];
  name: Scalars["String"];
};

export type QuerySearchInvestmentsByInstrumentCodeInAssetsArgs = {
  code: Scalars["ID"];
  companyID: Scalars["ID"];
  limit?: InputMaybe<Scalars["Int"]>;
  page?: InputMaybe<Scalars["Int"]>;
};

export type QueryTaskCategoryListArgs = {
  companyID: Scalars["ID"];
};

export type QueryTeamArgs = {
  companyID: Scalars["ID"];
  name: Scalars["String"];
};

export type QueryTeamsListArgs = {
  companyID: Scalars["ID"];
};

export type QueryTemplateVariablesArgs = {
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  projectID?: InputMaybe<Scalars["ID"]>;
};

export type Range = {
  max?: InputMaybe<Scalars["Int"]>;
  min?: InputMaybe<Scalars["Int"]>;
};

export type RealEstate = {
  __typename?: "RealEstate";
  activation?: Maybe<Scalars["String"]>;
  address?: Maybe<Scalars["String"]>;
  amenityProximity?: Maybe<RealEstateAmenitiesProximity>;
  apiKeyId?: Maybe<Scalars["Int"]>;
  area?: Maybe<Scalars["Float"]>;
  areaBalcony?: Maybe<Scalars["Float"]>;
  areaLand?: Maybe<Scalars["Float"]>;
  areaTerrace?: Maybe<Scalars["Float"]>;
  assetId: Scalars["String"];
  bathrooms?: Maybe<Scalars["Float"]>;
  bedrooms?: Maybe<Scalars["Int"]>;
  buildingFloors?: Maybe<Scalars["Float"]>;
  buildingStanding?: Maybe<BuildingStanding>;
  buyingDate: Scalars["DateTime"];
  city?: Maybe<Scalars["String"]>;
  condition?: Maybe<AppartmentCondition>;
  condominiumCondition?: Maybe<CondominiumCondition>;
  deactivation?: Maybe<Scalars["String"]>;
  evalId?: Maybe<Scalars["Int"]>;
  extAddressId?: Maybe<Scalars["String"]>;
  floor?: Maybe<Scalars["Float"]>;
  floors?: Maybe<Scalars["Float"]>;
  garden?: Maybe<GardenType>;
  id: Scalars["ID"];
  lastSeen?: Maybe<Scalars["String"]>;
  lat?: Maybe<Scalars["Float"]>;
  lon?: Maybe<Scalars["Float"]>;
  metadata?: Maybe<Scalars["String"]>;
  name?: Maybe<Scalars["String"]>;
  orientation?: Maybe<Direction>;
  ownership: Scalars["Float"];
  parkingPlots?: Maybe<Scalars["Float"]>;
  pool?: Maybe<PoolType>;
  postalCode?: Maybe<Scalars["String"]>;
  price: Scalars["Amount"];
  rooms?: Maybe<Scalars["Int"]>;
  route?: Maybe<Scalars["String"]>;
  source?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  typeId?: Maybe<AppartmentType>;
  userId: Scalars["String"];
  vista?: Maybe<RealEstateView>;
};

export enum RealEstateAmenitiesProximity {
  Close = "CLOSE",
  Distant = "DISTANT",
  Standard = "STANDARD",
  VeryClose = "VERY_CLOSE",
  VeryDistant = "VERY_DISTANT",
}

export enum RealEstateView {
  OpenView = "OPEN_VIEW",
  Outstanding = "OUTSTANDING",
  VisAVis = "VIS_A_VIS",
}

export type ReferenceAccess = {
  __typename?: "ReferenceAccess";
  /** The customer Link" */
  customer: Customer;
  /** The manager Link" */
  manager: Manager;
  /** The primary access */
  primary: Scalars["Boolean"];
};

export type ReferenceAccessValue = {
  managerID: Scalars["ID"];
  primary?: Scalars["Boolean"];
};

export type Report = {
  __typename?: "Report";
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  name: Scalars["String"];
  type: Scalars["String"];
  url: Scalars["URL"];
};

export type Scpi = {
  __typename?: "SCPI";
  capitalization: Scalars["String"];
  dividend?: Maybe<Scalars["String"]>;
  gestion_fees: Scalars["String"];
  name: Scalars["String"];
  state: Scalars["String"];
  subscription_fees: Scalars["String"];
  subscription_price?: Maybe<Scalars["String"]>;
  type: Scalars["String"];
  withdrawal_price: Scalars["String"];
};

export enum SortDirection {
  Asc = "ASC",
  Desc = "DESC",
}

export type StatusData = {
  __typename?: "StatusData";
  date?: Maybe<Scalars["DateTime"]>;
  documentId?: Maybe<Scalars["ID"]>;
  expirationDate?: Maybe<Scalars["DateTime"]>;
  info?: Maybe<Scalars["String"]>;
  status: StatusType;
};

export enum StatusType {
  Alert = "ALERT",
  InProgress = "IN_PROGRESS",
  Validated = "VALIDATED",
}

export type StorageQuota = {
  __typename?: "StorageQuota";
  available: Scalars["Float"];
  used: Scalars["Float"];
};

export type Synchronization = {
  __typename?: "Synchronization";
  created: Scalars["DateTime"];
  id: Scalars["ID"];
  state: ConnectionState;
  type: SynchronizationType;
  updated: Scalars["DateTime"];
};

export enum SynchronizationType {
  Cron = "CRON",
  Manual = "MANUAL",
}

export type Task = TaskData & {
  __typename?: "Task";
  assigned_manager?: Maybe<Manager>;
  category?: Maybe<Scalars["String"]>;
  company: Company;
  completed?: Maybe<Scalars["DateTime"]>;
  content?: Maybe<Scalars["String"]>;
  contractNumber?: Maybe<Scalars["String"]>;
  created: Scalars["DateTime"];
  customer?: Maybe<Customer>;
  entityRelatedId?: Maybe<Scalars["String"]>;
  entityRelatedType?: Maybe<EntityRelatedType>;
  id: Scalars["ID"];
  manager?: Maybe<Manager>;
  schedule: Scalars["DateTime"];
  title?: Maybe<Scalars["String"]>;
  updated: Scalars["DateTime"];
};

export type TaskByGroup = {
  __typename?: "TaskByGroup";
  categories?: Maybe<Array<TaskByType>>;
  managers?: Maybe<Array<TaskByType>>;
};

export type TaskByType = {
  __typename?: "TaskByType";
  count: Scalars["Int"];
  tasks?: Maybe<Array<Task>>;
  type: Scalars["String"];
};

export type TaskCategory = {
  __typename?: "TaskCategory";
  created: Scalars["DateTime"];
  default?: Maybe<Scalars["Boolean"]>;
  key: Scalars["String"];
  name: Scalars["String"];
  updated: Scalars["DateTime"];
};

export type TaskCategoryInput = {
  name?: InputMaybe<Scalars["String"]>;
};

export type TaskCountByCategory = {
  __typename?: "TaskCountByCategory";
  category: Scalars["String"];
  count: Scalars["Int"];
};

export type TaskCountByManager = {
  __typename?: "TaskCountByManager";
  count: Scalars["Int"];
  id: Scalars["String"];
  name: Scalars["String"];
};

export type TaskCountByStatus = {
  __typename?: "TaskCountByStatus";
  count: Scalars["Int"];
  status: CompanyTaskFilterStatus;
};

export type TaskData = {
  category?: Maybe<Scalars["String"]>;
  completed?: Maybe<Scalars["DateTime"]>;
  content?: Maybe<Scalars["String"]>;
  contractNumber?: Maybe<Scalars["String"]>;
  created: Scalars["DateTime"];
  entityRelatedId?: Maybe<Scalars["String"]>;
  entityRelatedType?: Maybe<EntityRelatedType>;
  id: Scalars["ID"];
  schedule: Scalars["DateTime"];
  title?: Maybe<Scalars["String"]>;
  updated: Scalars["DateTime"];
};

export type TaskInput = {
  category?: InputMaybe<Scalars["String"]>;
  content?: InputMaybe<Scalars["String"]>;
  contractNumber?: InputMaybe<Scalars["String"]>;
  customer?: InputMaybe<Scalars["String"]>;
  manager?: InputMaybe<Scalars["String"]>;
  schedule: Scalars["DateTime"];
  title: Scalars["String"];
};

export type TaskSearchResult = TaskData & {
  __typename?: "TaskSearchResult";
  category?: Maybe<Scalars["String"]>;
  completed?: Maybe<Scalars["DateTime"]>;
  content?: Maybe<Scalars["String"]>;
  contractNumber?: Maybe<Scalars["String"]>;
  created: Scalars["DateTime"];
  customerId?: Maybe<Scalars["String"]>;
  customerName?: Maybe<Scalars["String"]>;
  entityRelatedId?: Maybe<Scalars["String"]>;
  entityRelatedType?: Maybe<EntityRelatedType>;
  id: Scalars["ID"];
  managerId?: Maybe<Scalars["String"]>;
  managerName?: Maybe<Scalars["String"]>;
  schedule: Scalars["DateTime"];
  title?: Maybe<Scalars["String"]>;
  updated: Scalars["DateTime"];
};

export type TasksCompany = {
  __typename?: "TasksCompany";
  edges: Array<Task>;
  lateCount: Scalars["Int"];
};

/** A team of manager. */
export type Team = {
  __typename?: "Team";
  /** The creation date of the team. */
  created: Scalars["DateTime"];
  /** Description of the team. */
  description?: Maybe<Scalars["String"]>;
  /**
   * List of all the leader manager of the team.
   * - note: There list of managed client and contract will be visible by the team leaders.
   */
  leaderList: Array<Manager>;
  /** The name of the team. */
  name: Scalars["String"];
  /** Team statistics */
  statistics: TeamStatistics;
  /**
   * List of all the subordinate manager of the team.
   * - note: There list of managed client and contract will be visible by the team leaders.
   */
  subordinateList: Array<Manager>;
};

/** Field and values needed to add/remove a manager to a team. */
export type TeamMember = {
  /** The manager role inside the team. */
  leader?: Scalars["Boolean"];
  /** The manager ID to add/remove to a team. */
  managerID: Scalars["ID"];
};

/** Resolve the statistics of a team. */
export type TeamStatistics = {
  __typename?: "TeamStatistics";
  /** Count of contract managed by the team subordinate */
  contracts?: Maybe<Scalars["Int"]>;
  /** Count of all customers managed by the team */
  customers?: Maybe<Scalars["Int"]>;
  /** Count of leaders of the team */
  leaders?: Maybe<Scalars["Int"]>;
  /** Total count of members (leaders and subordinate) */
  members?: Maybe<Scalars["Int"]>;
  /** Count of subordinate of the team */
  subordinate?: Maybe<Scalars["Int"]>;
};

/** Field and values needed to create a team. */
export type TeamValues = {
  description?: InputMaybe<Scalars["String"]>;
  name: Scalars["String"];
};

export type TemplateVariable = {
  __typename?: "TemplateVariable";
  key: Scalars["String"];
  value: Scalars["String"];
};

export type TimeRange = {
  from?: InputMaybe<Scalars["DateTime"]>;
  to?: InputMaybe<Scalars["DateTime"]>;
};

export type Transaction = {
  __typename?: "Transaction";
  comment?: Maybe<Scalars["String"]>;
  date?: Maybe<Scalars["DateTime"]>;
  dateBO?: Maybe<Scalars["DateTime"]>;
  id: Scalars["ID"];
  instrument?: Maybe<Scalars["String"]>;
  manager?: Maybe<Scalars["String"]>;
  managerBO?: Maybe<Scalars["ID"]>;
  metadata?: Maybe<Scalars["TransactionMetadata"]>;
  name?: Maybe<Scalars["String"]>;
  statusBO?: Maybe<Scalars["String"]>;
  statusValidation?: Maybe<Scalars["String"]>;
  typeOperation?: Maybe<Scalars["String"]>;
  value?: Maybe<Scalars["Float"]>;
};

export type TransactionCreationInput = {
  comment?: InputMaybe<Scalars["String"]>;
  date?: InputMaybe<Scalars["DateTime"]>;
  dateBO?: InputMaybe<Scalars["DateTime"]>;
  fee?: InputMaybe<Scalars["Float"]>;
  manager?: InputMaybe<Scalars["ID"]>;
  managerBO?: InputMaybe<Scalars["ID"]>;
  name?: InputMaybe<Scalars["String"]>;
  statusBO?: InputMaybe<Scalars["String"]>;
  statusValidation?: InputMaybe<Scalars["String"]>;
  typeOperation?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["Float"]>;
};

export type TransactionPaginated = {
  __typename?: "TransactionPaginated";
  totalCount: Scalars["Int"];
  totalPages: Scalars["Int"];
  transactions?: Maybe<Array<Transaction>>;
};

export enum Treatement {
  Unvalid = "UNVALID",
  Valid = "VALID",
  Waiting = "WAITING",
}

export type Upload = {
  __typename?: "Upload";
  expiration: Scalars["DateTime"];
  files: Array<ObjectStored>;
};

export type UploadRequest = {
  MIME: Scalars["String"];
  name: Scalars["String"];
};

export enum WealthFilter {
  Customers = "customers",
  UnderManagements = "under_managements",
}

export type InstrumentListingWithFavoritesOutput = {
  __typename?: "instrumentListingWithFavoritesOutput";
  instruments: Array<InvestmentInstrumentWithFavorites>;
  totalCount: Scalars["Int"];
  totalPages: Scalars["Int"];
};

export type AuthenticatedQueryVariables = Exact<{ [key: string]: never }>;

export type AuthenticatedQuery = {
  __typename?: "Query";
  authenticated?: {
    __typename?: "Authentication";
    id: string;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
      phone?: string | null;
      disabledFeatures?: any | null;
      companyList?: Array<{
        __typename?: "Company";
        id: string;
        name: string;
        logo?: any | null;
        parentCompanyId?: string | null;
        isParentCompany: boolean;
      } | null> | null;
      parentCompany?: {
        __typename?: "ParentCompany";
        id: string;
        name: string;
        logo?: any | null;
      } | null;
    } | null;
  } | null;
};

export type ManagerClaimsQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ManagerClaimsQuery = {
  __typename?: "Query";
  authenticated?: {
    __typename?: "Authentication";
    manager?: {
      __typename?: "Manager";
      claims?: Array<ManagerClaims> | null;
    } | null;
  } | null;
};

export type ParentCompanyDocumentTemplateListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  available: Scalars["Boolean"];
}>;

export type ParentCompanyDocumentTemplateListQuery = {
  __typename?: "Query";
  parentCompanyDocumentTemplateList?: Array<{
    __typename?: "DocumentTemplate";
    id: string;
    name: string;
    category: string;
    creator: DocumentTemplateCreator;
    status: DocumentTemplateStatus;
    url: string;
    extension: string;
    productType?: string | null;
    properties?: {
      __typename?: "DocumentTemplateProperties";
      type?: string | null;
    } | null;
  }> | null;
  favorites?: Array<{ __typename?: "DocumentTemplate"; id: string }> | null;
};

export type DocumentTemplateListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  available: Scalars["Boolean"];
}>;

export type DocumentTemplateListQuery = {
  __typename?: "Query";
  documentTemplateList?: Array<{
    __typename?: "DocumentTemplate";
    id: string;
    name: string;
    category: string;
    creator: DocumentTemplateCreator;
    status: DocumentTemplateStatus;
    url: string;
    extension: string;
    productType?: string | null;
    properties?: {
      __typename?: "DocumentTemplateProperties";
      type?: string | null;
    } | null;
  }> | null;
  favorites?: Array<{ __typename?: "DocumentTemplate"; id: string }> | null;
};

export type ParentCompanyAvailableTemplateUpdateMutationVariables = Exact<{
  IDs: Array<Scalars["ID"]> | Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type ParentCompanyAvailableTemplateUpdateMutation = {
  __typename?: "Mutation";
  parentCompanyAvailableTemplateUpdate?: Array<{
    __typename?: "DocumentTemplate";
    id: string;
  }> | null;
};

export type AvailableTemplateUpdateMutationVariables = Exact<{
  IDs: Array<Scalars["ID"]> | Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type AvailableTemplateUpdateMutation = {
  __typename?: "Mutation";
  availableTemplateUpdate?: Array<{
    __typename?: "DocumentTemplate";
    id: string;
  }> | null;
};

export type ParentCompanyDocumentTemplateCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
}>;

export type ParentCompanyDocumentTemplateCreationMutation = {
  __typename?: "Mutation";
  parentCompanyDocumentTemplateCreation?: {
    __typename?: "DocumentTemplate";
    id: string;
    name: string;
    url: string;
    description?: string | null;
  } | null;
};

export type DocumentTemplateCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
}>;

export type DocumentTemplateCreationMutation = {
  __typename?: "Mutation";
  documentTemplateCreation?: {
    __typename?: "DocumentTemplate";
    id: string;
    name: string;
    url: string;
    description?: string | null;
  } | null;
};

export type ParentDocumentCustomTemplateCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
}>;

export type ParentDocumentCustomTemplateCreationMutation = {
  __typename?: "Mutation";
  parentCompanyDocumentCustomTemplateCreation?: {
    __typename?: "DocumentTemplate";
    id: string;
    name: string;
    url: string;
    description?: string | null;
  } | null;
};

export type DocumentCustomTemplateCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: DocumentTemplateCreation;
}>;

export type DocumentCustomTemplateCreationMutation = {
  __typename?: "Mutation";
  documentCustomTemplateCreation?: {
    __typename?: "DocumentTemplate";
    id: string;
    name: string;
    url: string;
    description?: string | null;
  } | null;
};

export type ParentCompanyDocumentTemplateUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: DocumentTemplateUpdate;
}>;

export type ParentCompanyDocumentTemplateUpdateMutation = {
  __typename?: "Mutation";
  parentCompanyDocumentTemplateUpdate?: {
    __typename?: "DocumentTemplate";
    id: string;
  } | null;
};

export type DocumentTemplateUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: DocumentTemplateUpdate;
}>;

export type DocumentTemplateUpdateMutation = {
  __typename?: "Mutation";
  documentTemplateUpdate?: {
    __typename?: "DocumentTemplate";
    id: string;
  } | null;
};

export type ParentCompanyDocumentTemplateDeleteMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type ParentCompanyDocumentTemplateDeleteMutation = {
  __typename?: "Mutation";
  parentCompanyDocumentTemplateDeletion?: boolean | null;
};

export type DocumentTemplateDeleteMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type DocumentTemplateDeleteMutation = {
  __typename?: "Mutation";
  documentTemplateDeletion?: boolean | null;
};

export type MutateParentCompanyDocumentTemplateDeletionMultipleMutationVariables =
  Exact<{
    companyID: Scalars["ID"];
    ids: Array<Scalars["ID"]> | Scalars["ID"];
  }>;

export type MutateParentCompanyDocumentTemplateDeletionMultipleMutation = {
  __typename?: "Mutation";
  parentCompanyDocumentTemplateDeletionMultiple?: boolean | null;
};

export type MutateDocumentTemplateDeletionMultipleMutationVariables = Exact<{
  companyID: Scalars["ID"];
  ids: Array<Scalars["ID"]> | Scalars["ID"];
}>;

export type MutateDocumentTemplateDeletionMultipleMutation = {
  __typename?: "Mutation";
  documentTemplateDeletionMultiple?: boolean | null;
};

export type AvailableIntegrationsListQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type AvailableIntegrationsListQuery = {
  __typename?: "Query";
  list?: Array<any> | null;
};

export type ParentCompanyInstalledIntegrationsListQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ParentCompanyInstalledIntegrationsListQuery = {
  __typename?: "Query";
  list?: Array<{
    __typename?: "InstalledIntegration";
    key: any;
    added: any;
    state: IntegrationState;
    access: Array<IntegrationAccess>;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
    } | null;
    configuration?: {
      __typename?: "InstalledIntegrationConfiguration";
      url?: any | null;
    } | null;
  }> | null;
};

export type InstalledIntegrationsListQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type InstalledIntegrationsListQuery = {
  __typename?: "Query";
  list?: Array<{
    __typename?: "InstalledIntegration";
    key: any;
    added: any;
    state: IntegrationState;
    access: Array<IntegrationAccess>;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
    } | null;
    configuration?: {
      __typename?: "InstalledIntegrationConfiguration";
      url?: any | null;
    } | null;
  }> | null;
};

export type IntegrationDetailsQueryVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
}>;

export type IntegrationDetailsQuery = {
  __typename?: "Query";
  integration?: {
    __typename?: "InstalledIntegration";
    key: any;
    added: any;
    state: IntegrationState;
    access: Array<IntegrationAccess>;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
    } | null;
    configuration?: {
      __typename?: "InstalledIntegrationConfiguration";
      url?: any | null;
    } | null;
  } | null;
};

export type ParentCompanyIntegrationInstallationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
}>;

export type ParentCompanyIntegrationInstallationMutation = {
  __typename?: "Mutation";
  installed?: {
    __typename?: "InstalledIntegration";
    key: any;
    state: IntegrationState;
  } | null;
};

export type IntegrationInstallationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
}>;

export type IntegrationInstallationMutation = {
  __typename?: "Mutation";
  installed?: {
    __typename?: "InstalledIntegration";
    key: any;
    state: IntegrationState;
  } | null;
};

export type ParentCompanyIntegrationDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
}>;

export type ParentCompanyIntegrationDeletionMutation = {
  __typename?: "Mutation";
  uninstalled?: {
    __typename?: "InstalledIntegration";
    key: any;
    state: IntegrationState;
  } | null;
};

export type IntegrationDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
}>;

export type IntegrationDeletionMutation = {
  __typename?: "Mutation";
  uninstalled?: {
    __typename?: "InstalledIntegration";
    key: any;
    state: IntegrationState;
  } | null;
};

export type IntegrationAccessConfigurationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["IntegrationKey"];
  access: Array<IntegrationAccess> | IntegrationAccess;
}>;

export type IntegrationAccessConfigurationMutation = {
  __typename?: "Mutation";
  configured?: {
    __typename?: "InstalledIntegration";
    key: any;
    state: IntegrationState;
    access: Array<IntegrationAccess>;
  } | null;
};

export type MigratorQueryVariables = Exact<{
  migratorID: Scalars["ID"];
}>;

export type MigratorQuery = {
  __typename?: "Query";
  migrator?: {
    __typename?: "Migrator";
    key: any;
    name: string;
    logo: any;
  } | null;
};

export type MigratorListQueryVariables = Exact<{ [key: string]: never }>;

export type MigratorListQuery = {
  __typename?: "Query";
  migratorList?: Array<{
    __typename?: "Migrator";
    key: any;
    name: string;
    logo: any;
  }> | null;
};

export type ParentSynchronizeMigratorMutationVariables = Exact<{
  migratorID: Scalars["ID"];
  companyID: Scalars["ID"];
  metadata: Scalars["MigrationMetadata"];
}>;

export type ParentSynchronizeMigratorMutation = {
  __typename?: "Mutation";
  parentSynchronizeMigrator?: {
    __typename?: "Migration";
    id: string;
    state: MigrationState;
  } | null;
};

export type SynchronizeMigratorMutationVariables = Exact<{
  migratorID: Scalars["ID"];
  companyID: Scalars["ID"];
  metadata: Scalars["MigrationMetadata"];
}>;

export type SynchronizeMigratorMutation = {
  __typename?: "Mutation";
  synchronizeMigrator?: {
    __typename?: "Migration";
    id: string;
    state: MigrationState;
  } | null;
};

export type CompanyTeamListQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CompanyTeamListQuery = {
  __typename?: "Query";
  list?: Array<{
    __typename?: "Team";
    name: string;
    description?: string | null;
    statistics: {
      __typename?: "TeamStatistics";
      subordinate?: number | null;
      contracts?: number | null;
    };
  }> | null;
};

export type CompanyManagersListQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type CompanyManagersListQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    list?: Array<{
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
    }> | null;
  } | null;
};

export type CompanyTeamDetailsQueryVariables = Exact<{
  companyID: Scalars["ID"];
  name: Scalars["String"];
}>;

export type CompanyTeamDetailsQuery = {
  __typename?: "Query";
  team?: {
    __typename?: "Team";
    name: string;
    created: any;
    description?: string | null;
    statistics: {
      __typename?: "TeamStatistics";
      customers?: number | null;
      contracts?: number | null;
    };
    leaderList: Array<{
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
    }>;
    subordinateList: Array<{
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
    }>;
  } | null;
};

export type TeamCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: TeamValues;
}>;

export type TeamCreationMutation = {
  __typename?: "Mutation";
  created?: { __typename?: "Team"; name: string } | null;
};

export type TeamUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  name: Scalars["String"];
  input: TeamValues;
}>;

export type TeamUpdateMutation = {
  __typename?: "Mutation";
  updated?: { __typename?: "Team"; name: string } | null;
};

export type TeamDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  name: Scalars["String"];
}>;

export type TeamDeletionMutation = {
  __typename?: "Mutation";
  deleted?: { __typename?: "Team"; name: string } | null;
};

export type TeamMemberAddMutationVariables = Exact<{
  companyID: Scalars["ID"];
  teamName: Scalars["String"];
  values?: InputMaybe<Array<TeamMember> | TeamMember>;
}>;

export type TeamMemberAddMutation = {
  __typename?: "Mutation";
  added?: { __typename?: "Team"; name: string } | null;
};

export type TeamMemberRemoveMutationVariables = Exact<{
  companyID: Scalars["ID"];
  teamName: Scalars["String"];
  values?: InputMaybe<Array<Scalars["ID"]> | Scalars["ID"]>;
}>;

export type TeamMemberRemoveMutation = {
  __typename?: "Mutation";
  removed?: { __typename?: "Team"; name: string } | null;
};

export type InstrumentListingQueryVariables = Exact<{
  filters: InstrumentFilters;
  pagination: Pagination;
}>;

export type InstrumentListingQuery = {
  __typename?: "Query";
  instrumentListing?: {
    __typename?: "InstrumentPaginated";
    totalCount: number;
    totalPages: number;
    instruments: Array<{
      __typename?: "InvestmentInstrument";
      code: string;
      label: string;
      valuation?: any | null;
      category?: string | null;
      subcategory?: string | null;
      managementCompany?: string | null;
      riskIndicator?: number | null;
      dic?: string | null;
      prospectus?: string | null;
    }>;
  } | null;
};

export type InstrumentFiltersQueryVariables = Exact<{
  group?: InputMaybe<AssetGroup>;
}>;

export type InstrumentFiltersQuery = {
  __typename?: "Query";
  instrumentFilters: {
    __typename?: "InstrumentAvailableFiltersValues";
    categories?: Array<string> | null;
    subcategories?: Array<string> | null;
    riskIndicators?: Array<number> | null;
    managementCompanies?: Array<string> | null;
  };
};

export type InstrumentSriUpdateMutationVariables = Exact<{
  id: Scalars["ID"];
  riskIndicator: Scalars["Int"];
}>;

export type InstrumentSriUpdateMutation = {
  __typename?: "Mutation";
  instrumentSriUpdate?: {
    __typename?: "InvestmentInstrument";
    code: string;
  } | null;
};

export type UpdateCustomerAccessMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  update: CustomerUpdate;
  inviteCreation: CustomerInviteCreation;
  sendInvite: Scalars["Boolean"];
}>;

export type UpdateCustomerAccessMutation = {
  __typename?: "Mutation";
  customerUpdate?: {
    __typename?: "Customer";
    plan?: CustomerPlan | null;
    id: string;
  } | null;
  invite?: {
    __typename?: "CustomerInvite";
    id: string;
    code: string;
    email: string;
  } | null;
};

export type ReportingCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  documentTypes: Array<Scalars["String"]> | Scalars["String"];
  period: Scalars["Int"];
  contains?: InputMaybe<Array<Scalars["String"]> | Scalars["String"]>;
  assetsList?: InputMaybe<Array<Scalars["String"]> | Scalars["String"]>;
}>;

export type ReportingCreationMutation = {
  __typename?: "Mutation";
  reportingCreation?: Array<{
    __typename?: "Report";
    type: string;
    name: string;
    url: any;
  } | null> | null;
};

export type ReportingCustomerWealthAssetsQueryVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
  groups?: InputMaybe<Array<AssetGroup> | AssetGroup>;
}>;

export type ReportingCustomerWealthAssetsQuery = {
  __typename?: "Query";
  customerWealth?: Array<{
    __typename?: "CustomerWealth";
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      metadata?: any | null;
    }> | null;
  }> | null;
};

export type ManagerQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ManagerQuery = {
  __typename?: "Query";
  authenticated?: {
    __typename?: "Authentication";
    id: string;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
      phone?: string | null;
      claims?: Array<ManagerClaims> | null;
      companyList?: Array<{
        __typename?: "Company";
        id: string;
        name: string;
        logo?: any | null;
      } | null> | null;
    } | null;
  } | null;
};

export type ManagerInvitePendingListQueryVariables = Exact<{
  [key: string]: never;
}>;

export type ManagerInvitePendingListQuery = {
  __typename?: "Query";
  managerInvitePendingList?: Array<{
    __typename?: "ManagerInvite";
    id: string;
    created: any;
    company?: { __typename?: "Company"; id: string; name: string } | null;
  }> | null;
};

export type ProfileUpdateMutationVariables = Exact<{
  input: ProfileUpdate;
}>;

export type ProfileUpdateMutation = {
  __typename?: "Mutation";
  profileUpdate?: { __typename?: "Manager"; id: string } | null;
};

export type ManagerInviteAcceptMutationVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ManagerInviteAcceptMutation = {
  __typename?: "Mutation";
  managerInviteAccept?: { __typename?: "ManagerInvite"; id: string } | null;
};

export type ManagerInviteRejectMutationVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ManagerInviteRejectMutation = {
  __typename?: "Mutation";
  managerInviteReject?: { __typename?: "ManagerInvite"; id: string } | null;
};

export type LayoutQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type LayoutQuery = {
  __typename?: "Query";
  authenticated?: {
    __typename?: "Authentication";
    manager?: {
      __typename?: "Manager";
      claims?: Array<ManagerClaims> | null;
    } | null;
  } | null;
  categories?: Array<{
    __typename?: "DocumentCategory";
    key: string;
    name: string;
    customerVisibility: boolean;
  }> | null;
};

export type WealthAndPerformanceQueryVariables = Exact<{
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
}>;

export type WealthAndPerformanceQuery = {
  __typename?: "Query";
  company?: { __typename?: "Company"; wealth: any } | null;
};

export type LayoutSubWealthQueryVariables = Exact<{
  company: Scalars["ID"];
}>;

export type LayoutSubWealthQuery = {
  __typename?: "Query";
  customersAssetsTypes?: Array<{
    __typename?: "CompanyWealth";
    name: AssetGroup;
  }> | null;
  underManagementsAssetsTypes?: Array<{
    __typename?: "CompanyWealth";
    name: AssetGroup;
  }> | null;
};

export type LayoutCustomerQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
}>;

export type LayoutCustomerQuery = {
  __typename?: "Query";
  authenticated?: {
    __typename?: "Authentication";
    manager?: {
      __typename?: "Manager";
      claims?: Array<ManagerClaims> | null;
    } | null;
  } | null;
  customer?: {
    __typename?: "Customer";
    id: string;
    firstName?: string | null;
    lastName?: string | null;
    name: string;
    email?: string | null;
    plan?: CustomerPlan | null;
    hasB2CAccount?: boolean | null;
    valuation: any;
    pendingInvitations?: Array<{
      __typename?: "CustomerInvite";
      id: string;
      code: string;
      created: any;
      email: string;
      status: InviteStatus;
      updated: any;
    }> | null;
    informations?: {
      __typename?: "CustomerInformations";
      details?: any | null;
      general?: any | null;
    } | null;
  } | null;
};

export type CompanyQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type CompanyQuery = {
  __typename?: "Query";
  connectionList?: Array<{
    __typename?: "Connection";
    state: ConnectionState;
  }> | null;
};

export type LogoutMutationVariables = Exact<{ [key: string]: never }>;

export type LogoutMutation = {
  __typename?: "Mutation";
  logoutAuthentication?: { __typename?: "Authentication"; id: string } | null;
};

export type InviteCustomerMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: CustomerInviteCreation;
}>;

export type InviteCustomerMutation = {
  __typename?: "Mutation";
  inviteCustomer?: {
    __typename?: "CustomerInvite";
    id: string;
    email: string;
  } | null;
};

export type CreateCustomerMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: CustomerCreation;
}>;

export type CreateCustomerMutation = {
  __typename?: "Mutation";
  customer?: { __typename?: "Customer"; id: string; name: string } | null;
};

export type CreateCustomerReferenceMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: Array<CustomerCreation> | CustomerCreation;
  addCustomerSheet?: InputMaybe<Scalars["Boolean"]>;
}>;

export type CreateCustomerReferenceMutation = {
  __typename?: "Mutation";
  customer?: { __typename?: "Customer"; id: string; name: string } | null;
};

export type CompanyCreationMutationVariables = Exact<{
  input: CompanyCreation;
}>;

export type CompanyCreationMutation = {
  __typename?: "Mutation";
  companyCreation?: { __typename?: "Company"; id: string; name: string } | null;
};

export type ParentCompanyUploadMutationVariables = Exact<{
  companyID: Scalars["ID"];
  files: Array<UploadRequest> | UploadRequest;
}>;

export type ParentCompanyUploadMutation = {
  __typename?: "Mutation";
  parentCompanyUpload?: {
    __typename?: "Upload";
    expiration: any;
    files: Array<{ __typename?: "ObjectStored"; url: string; name: string }>;
  } | null;
};

export type CompanyUploadMutationVariables = Exact<{
  companyID: Scalars["ID"];
  files: Array<UploadRequest> | UploadRequest;
}>;

export type CompanyUploadMutation = {
  __typename?: "Mutation";
  companyUpload?: {
    __typename?: "Upload";
    expiration: any;
    files: Array<{ __typename?: "ObjectStored"; url: string; name: string }>;
  } | null;
};

export type CustomerCreationMultipleMutationVariables = Exact<{
  companyID: Scalars["ID"];
  file: Scalars["String"];
  invite: Scalars["Boolean"];
}>;

export type CustomerCreationMultipleMutation = {
  __typename?: "Mutation";
  customerCreationMultiple?: {
    __typename?: "PendingJob";
    id: string;
    delayedUntil?: any | null;
  } | null;
};

export type NewCustomersQueryVariables = Exact<{
  companyID: Scalars["ID"];
  input?: InputMaybe<CustomersInput>;
}>;

export type NewCustomersQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    id: string;
    customerList: {
      __typename?: "CustomerConnection";
      totalCount: number;
      edges: Array<{
        __typename?: "CustomerEdge";
        node: {
          __typename?: "Customer";
          id: string;
          name: string;
          email?: string | null;
          phoneNumber?: string | null;
          underManagement: any;
          informations?: {
            __typename?: "CustomerInformations";
            details?: any | null;
            general?: any | null;
          } | null;
        };
      }>;
    };
  } | null;
};

export type NewCustomersCountQueryVariables = Exact<{
  companyID: Scalars["ID"];
  input?: InputMaybe<CustomersInput>;
}>;

export type NewCustomersCountQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    id: string;
    customerList: { __typename?: "CustomerConnection"; totalCount: number };
  } | null;
};

export type AssetsQueryVariables = Exact<{
  company: Scalars["ID"];
  filters?: InputMaybe<AssetFilters>;
  computing?: InputMaybe<WealthFilter>;
  group?: InputMaybe<AssetGroup>;
}>;

export type AssetsQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    list: {
      __typename?: "AssetConnection";
      totalCount: number;
      edges: Array<{
        __typename?: "AssetEdge";
        node: {
          __typename?: "CustomerAsset";
          id: string;
          name: string;
          group: AssetGroup;
          categoryName?: string | null;
          valuation?: any | null;
          accountNumber?: string | null;
          openDate?: any | null;
          metadata?: any | null;
          customer?: { __typename?: "Customer"; name: string } | null;
        };
      }>;
    };
  } | null;
};

export type AssetsNumberQueryVariables = Exact<{
  company: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
  group?: InputMaybe<AssetGroup>;
  filters?: InputMaybe<AssetFilters>;
}>;

export type AssetsNumberQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    list: { __typename?: "AssetConnection"; totalCount: number };
  } | null;
};

export type NewTransactionsQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filters: AccountingAnalyticsFilters;
  pagination: Pagination;
}>;

export type NewTransactionsQuery = {
  __typename?: "Query";
  list?: {
    __typename?: "AccountingTransactionConnection";
    totalCount: number;
    edges: Array<{
      __typename?: "AccountingTransactionEdge";
      node: {
        __typename?: "AccountingTransaction";
        id: string;
        date: any;
        amount: number;
        name: string;
        entityName: string;
        assetName: string;
      };
    }>;
  } | null;
};

export type ProviderStatisticsQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filters: AccountingAnalyticsFilters;
}>;

export type ProviderStatisticsQuery = {
  __typename?: "Query";
  list?: Array<{
    __typename?: "ProviderStatistics";
    name: string;
    key: any;
    logo: string;
    total: number;
  }> | null;
};

export type AccountingManagersListQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type AccountingManagersListQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    list?: Array<{
      __typename?: "Manager";
      id: string;
      name?: string | null;
    }> | null;
  } | null;
};

export type AssetListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filters: AccountingAnalyticsFilters;
}>;

export type AssetListQuery = {
  __typename?: "Query";
  accountingAssets?: Array<AssetGroup | null> | null;
};

export type ConnectorQueryVariables = Exact<{
  connectorID: Scalars["ID"];
}>;

export type ConnectorQuery = {
  __typename?: "Query";
  connector?: {
    __typename?: "Connector";
    name: string;
    logo: any;
    labels: any;
  } | null;
};

export type ConnectorListQueryVariables = Exact<{ [key: string]: never }>;

export type ConnectorListQuery = {
  __typename?: "Query";
  connectorList?: Array<{
    __typename?: "Connector";
    key: any;
    name: string;
    logo: any;
    provider: ConnectorProvider;
  }> | null;
};

export type SynchronizePowensConnectorMutationVariables = Exact<{
  connectorID: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type SynchronizePowensConnectorMutation = {
  __typename?: "Mutation";
  synchronizePowensConnector?: any | null;
};

export type SynchronizeConnectorMutationVariables = Exact<{
  connectorID: Scalars["ID"];
  companyID: Scalars["ID"];
  metadata: Scalars["ConnectionMetadata"];
}>;

export type SynchronizeConnectorMutation = {
  __typename?: "Mutation";
  synchronizeConnector?: {
    __typename?: "ConnectionResponse";
    connection: {
      __typename?: "Connection";
      id: string;
      state: ConnectionState;
    };
    synchronization: { __typename?: "Synchronization"; id: string };
  } | null;
};

export type ChangeConnectionCredentialsMutationVariables = Exact<{
  connectionID: Scalars["ID"];
  credentials: Scalars["ConnectionMetadata"];
}>;

export type ChangeConnectionCredentialsMutation = {
  __typename?: "Mutation";
  changeConnectionCredentials?: {
    __typename?: "ConnectionResponse";
    connection: {
      __typename?: "Connection";
      id: string;
      state: ConnectionState;
    };
    synchronization: { __typename?: "Synchronization"; id: string };
  } | null;
};

export type ValidateConnectionOtpMutationVariables = Exact<{
  connectionID: Scalars["ID"];
  otp: Scalars["String"];
}>;

export type ValidateConnectionOtpMutation = {
  __typename?: "Mutation";
  validateConnectionOTP?: {
    __typename?: "Connection";
    id: string;
    state: ConnectionState;
  } | null;
};

export type GlobalAddWealthMutationVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type GlobalAddWealthMutation = {
  __typename?: "Mutation";
  url?: string | null;
};

export type CampaignsQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CampaignsQuery = {
  __typename?: "Query";
  campaignList?: Array<{
    __typename?: "Campaign";
    id: string;
    name: string;
    assetGroup: AssetGroup;
    provider?: string | null;
    customersCount: number;
    totalInvestment: any;
    contractList?: Array<{
      __typename?: "CampaignContract";
      id: string;
      investment: any;
      status: CampaignContractStatus;
      customer: { __typename?: "Customer"; id: string; name: string };
    }> | null;
  }> | null;
};

export type CampaignsDocumentListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  contractID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type CampaignsDocumentListQuery = {
  __typename?: "Query";
  documentList?: Array<{
    __typename?: "Document";
    id: string;
    name: string;
    expiration?: any | null;
    treatement?: Treatement | null;
  }> | null;
};

export type CampaignCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: CampaignCreation;
}>;

export type CampaignCreationMutation = {
  __typename?: "Mutation";
  campaignCreation?: {
    __typename?: "Campaign";
    id: string;
    name: string;
  } | null;
};

export type CampaignModificationMutationVariables = Exact<{
  campaignID: Scalars["ID"];
  companyID: Scalars["ID"];
  update?: InputMaybe<CampaignModification>;
}>;

export type CampaignModificationMutation = {
  __typename?: "Mutation";
  campaignModification?: {
    __typename?: "Campaign";
    id: string;
    name: string;
  } | null;
};

export type CampaignContractModificationMutationVariables = Exact<{
  contractID: Scalars["ID"];
  companyID: Scalars["ID"];
  update?: InputMaybe<CampaignContractModification>;
}>;

export type CampaignContractModificationMutation = {
  __typename?: "Mutation";
  campaignContractModification?: {
    __typename?: "CampaignContract";
    id: string;
  } | null;
};

export type DocumentCustomerListQueryVariables = Exact<{
  company: Scalars["String"];
  documentCategory?: InputMaybe<Scalars["String"]>;
  input?: InputMaybe<DocumentCustomer>;
}>;

export type DocumentCustomerListQuery = {
  __typename?: "Query";
  documentCustomerList: {
    __typename?: "DocumentConnection";
    totalCount: number;
    category: { __typename?: "DocumentCategory"; key: string; name: string };
    edges: Array<{
      __typename?: "DocumentEdge";
      node: {
        __typename?: "Document";
        id: string;
        name: string;
        expiration?: any | null;
        signature?: {
          __typename?: "DocumentSignatureInformation";
          signed?: any | null;
          validated?: any | null;
          digital: boolean;
          customer?: DocumentSignatureState | null;
          manager?: DocumentSignatureState | null;
          signatories?: Array<DocumentSignatory> | null;
        } | null;
        customer: { __typename?: "Customer"; id: string; name: string };
      };
    }>;
  };
};

export type DocumentNotificationMutationVariables = Exact<{
  documentID: Scalars["ID"];
  requests: Array<NotificationRequest> | NotificationRequest;
}>;

export type DocumentNotificationMutation = {
  __typename?: "Mutation";
  notifyDocumentStatus?: Array<{
    __typename?: "PendingJob";
    id: string;
  } | null> | null;
};

export type CompanyComplianceQueryVariables = Exact<{
  company: Scalars["ID"];
}>;

export type CompanyComplianceQuery = {
  __typename?: "Query";
  customersCompliance: Array<{
    __typename?: "CompanyCompliance";
    category: { __typename?: "DocumentCategory"; key: string; name: string };
    levels: {
      __typename?: "Compliance";
      valid: number;
      unvalid: number;
      waiting: number;
    };
  }>;
  globalCompliance?: {
    __typename?: "CompanyGlobalCompliance";
    valid: number;
    unvalid: number;
    waiting: number;
  } | null;
};

export type BudgetQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type BudgetQuery = {
  __typename?: "Query";
  budgetList?: Array<{
    __typename?: "Budget";
    id: string;
    name: string;
    type: string;
    amount: any;
    libelle?: string | null;
  }> | null;
  customer?: {
    __typename?: "Customer";
    availableLiquidity?: any | null;
  } | null;
};

export type BudgetCreationMutationVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  input: BudgetCreationInput;
  budgetID?: InputMaybe<Scalars["ID"]>;
}>;

export type BudgetCreationMutation = {
  __typename?: "Mutation";
  created?: {
    __typename?: "Budget";
    libelle?: string | null;
    name: string;
    type: string;
  } | null;
};

export type BudgetItemDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  budgetID: Scalars["ID"];
}>;

export type BudgetItemDeletionMutation = {
  __typename?: "Mutation";
  budgetItemDeletion: boolean;
};

export type UpdateLcbMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  input: Scalars["LCBForm"];
}>;

export type UpdateLcbMutation = {
  __typename?: "Mutation";
  updateLCB?: LCBForm | null;
};

export type CustomerLcbQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type CustomerLcbQuery = {
  __typename?: "Query";
  customer?: {
    __typename?: "Customer";
    informations?: {
      __typename?: "CustomerInformations";
      lcbLab?: LCBForm | null;
    } | null;
  } | null;
};

export type CustomerConformityObjectivesQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type CustomerConformityObjectivesQuery = {
  __typename?: "Query";
  customer?: {
    __typename?: "Customer";
    conformityObjectives?: any | null;
  } | null;
};

export type EnvelopDocumentTemplateListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  available: Scalars["Boolean"];
}>;

export type EnvelopDocumentTemplateListQuery = {
  __typename?: "Query";
  documentTemplateList?: Array<{
    __typename?: "DocumentTemplate";
    id: string;
    name: string;
    category: string;
    creator: DocumentTemplateCreator;
    productType?: string | null;
  }> | null;
};

export type CustomerConformityQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  officialCategories?: InputMaybe<Array<Scalars["String"]> | Scalars["String"]>;
  legalCategories?: InputMaybe<Array<Scalars["String"]> | Scalars["String"]>;
  arbitraryCategories?: InputMaybe<
    Array<Scalars["String"]> | Scalars["String"]
  >;
}>;

export type CustomerConformityQuery = {
  __typename?: "Query";
  officialList?: Array<{
    __typename?: "Document";
    id: string;
    name: string;
    treatement?: Treatement | null;
    expiration?: any | null;
    category: { __typename?: "DocumentCategory"; key: string; name: string };
  }> | null;
  legalList?: Array<{
    __typename?: "Document";
    id: string;
    name: string;
    treatement?: Treatement | null;
    expiration?: any | null;
    category: { __typename?: "DocumentCategory"; key: string; name: string };
  }> | null;
  envelopeList: Array<{
    __typename?: "Envelope";
    id: string;
    name: string;
    access: EnvelopeAccess;
    expiration?: any | null;
    conformity?: Treatement | null;
    documentList: Array<{
      __typename?: "Document";
      id: string;
      name: string;
      treatement?: Treatement | null;
      expiration?: any | null;
      category: { __typename?: "DocumentCategory"; key: string; name: string };
    }>;
  }>;
};

export type ConformityDocumentQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type ConformityDocumentQuery = {
  __typename?: "Query";
  document?: {
    __typename?: "Document";
    url?: string | null;
    name: string;
  } | null;
};

export type SearchCampaignQueryVariables = Exact<{
  companyID: Scalars["ID"];
  text?: InputMaybe<Scalars["String"]>;
}>;

export type SearchCampaignQuery = {
  __typename?: "Query";
  searchCampaign?: Array<{
    __typename?: "Campaign";
    id: string;
    name: string;
    assetGroup: AssetGroup;
  }> | null;
};

export type InvestorProfileQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type InvestorProfileQuery = {
  __typename?: "Query";
  investorProfileForm?: any | null;
  customer?: {
    __typename?: "Customer";
    investorProfile?: any | null;
    informations?: {
      __typename?: "CustomerInformations";
      details?: any | null;
      general?: any | null;
    } | null;
  } | null;
  budgetList?: Array<{
    __typename?: "Budget";
    id: string;
    name: string;
    type: string;
    amount: any;
    libelle?: string | null;
  }> | null;
};

export type InvestorProfileStatsQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type InvestorProfileStatsQuery = {
  __typename?: "Query";
  investorProfileForm?: any | null;
  investorProfileStats?: {
    __typename?: "InvestorProfileStats";
    knowledge: number;
    riskProfile: number;
    nonFinancialSensitivity: number;
  } | null;
  investorEnvironmentalStats?: {
    __typename?: "InvestorEnvironmentalStats";
    activities: number;
    negativeImpacts: number;
    socialObjectives: number;
  } | null;
};

export type TemplateVariablesQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  projectID?: InputMaybe<Scalars["ID"]>;
}>;

export type TemplateVariablesQuery = {
  __typename?: "Query";
  templateVariables: Array<{
    __typename?: "TemplateVariable";
    key: string;
    value: string;
  }>;
};

export type CreateFilesFromTemplateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  templates: Array<FileFromTemplateInput> | FileFromTemplateInput;
}>;

export type CreateFilesFromTemplateMutation = {
  __typename?: "Mutation";
  createFilesFromTemplate?: Array<{
    __typename?: "FileFromTemplate";
    id: string;
    url: any;
    name?: string | null;
    category: string;
    extension: string;
  } | null> | null;
};

export type CreateFilesFromGedMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  gedDocumentsID: Array<Scalars["String"]> | Scalars["String"];
}>;

export type CreateFilesFromGedMutation = {
  __typename?: "Mutation";
  createFilesFromGedDocuments?: Array<{
    __typename?: "FileFromGed";
    url: any;
    name?: string | null;
    category: string;
    extension: string;
  } | null> | null;
};

export type CustomerConformityObjectivesUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["ConformityObjectives"];
}>;

export type CustomerConformityObjectivesUpdateMutation = {
  __typename?: "Mutation";
  conformityObjectivesUpdate: any;
};

export type CustomerUploadCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  files: Array<UploadRequest> | UploadRequest;
}>;

export type CustomerUploadCreationMutation = {
  __typename?: "Mutation";
  customerUpload?: {
    __typename?: "Upload";
    expiration: any;
    files: Array<{ __typename?: "ObjectStored"; url: string; name: string }>;
  } | null;
};

export type EnvelopeCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: EnvelopeCreation;
  notificationRequests?: InputMaybe<
    Array<NotificationRequest> | NotificationRequest
  >;
  addParagraphs?: InputMaybe<Scalars["Boolean"]>;
}>;

export type EnvelopeCreationMutation = {
  __typename?: "Mutation";
  envelopeCreation?: {
    __typename?: "Envelope";
    id: string;
    name: string;
  } | null;
};

export type EnvelopeAffectationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  envelopeID: Scalars["ID"];
  campaignID: Scalars["ID"];
}>;

export type EnvelopeAffectationMutation = {
  __typename?: "Mutation";
  envelopeAffectation?: {
    __typename?: "Envelope";
    id: string;
    name: string;
  } | null;
};

export type NotifyDocumentStatusMutationVariables = Exact<{
  documentID: Scalars["ID"];
  requests: Array<NotificationRequest> | NotificationRequest;
}>;

export type NotifyDocumentStatusMutation = {
  __typename?: "Mutation";
  notifyDocumentStatus?: Array<{
    __typename?: "PendingJob";
    id: string;
  } | null> | null;
};

export type InvestorProfileUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["InvestorProfile"];
}>;

export type InvestorProfileUpdateMutation = {
  __typename?: "Mutation";
  investorProfileUpdate?: any | null;
};

export type DocumentDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  documentID: Array<Scalars["ID"]> | Scalars["ID"];
}>;

export type DocumentDeletionMutation = {
  __typename?: "Mutation";
  documentDeletion: boolean;
};

export type DocumentUpdateMutationVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
  update?: InputMaybe<DocumentUpdate>;
}>;

export type DocumentUpdateMutation = {
  __typename?: "Mutation";
  documentUpdate?: { __typename?: "Document"; id: string } | null;
};

export type InvestorProfileFormUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["InvestorProfileForm"];
}>;

export type InvestorProfileFormUpdateMutation = {
  __typename?: "Mutation";
  investorProfileFormUpdate?: any | null;
};

export type RequestFormFillingMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  form: Form;
}>;

export type RequestFormFillingMutation = {
  __typename?: "Mutation";
  requestFormFilling?: { __typename?: "PendingJob"; id: string } | null;
};

export type SendToSignMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  form: Form;
}>;

export type SendToSignMutation = {
  __typename?: "Mutation";
  sendToSign?: { __typename?: "PendingJob"; id: string } | null;
};

export type ConvertDocumentToPdfMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  fileUrl: Scalars["String"];
}>;

export type ConvertDocumentToPdfMutation = {
  __typename?: "Mutation";
  convertDocumentToPdf: any;
};

export type EnvelopeUrlQueryVariables = Exact<{
  id: Scalars["ID"];
  companyURL: Scalars["Boolean"];
  customerID: Scalars["ID"];
}>;

export type EnvelopeUrlQuery = {
  __typename?: "Query";
  envelope?: {
    __typename?: "Envelope";
    companyURL?: any | null;
    customerURL?: any | null;
  } | null;
};

export type EnvelopeListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type EnvelopeListQuery = {
  __typename?: "Query";
  envelopeList: Array<{
    __typename?: "Envelope";
    name: string;
    id: string;
    created: any;
    treatement?: Treatement | null;
    documents: Array<{
      __typename?: "Document";
      id: string;
      created: any;
      name: string;
      url?: string | null;
      expiration?: any | null;
      extension: string;
      notes?: string | null;
      treatement?: Treatement | null;
      category: { __typename?: "DocumentCategory"; key: string; name: string };
      signature?: {
        __typename?: "DocumentSignatureInformation";
        digital: boolean;
        signatories?: Array<DocumentSignatory> | null;
      } | null;
    }>;
  }>;
};

export type EnvelopeDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  envelopeID: Scalars["ID"];
}>;

export type EnvelopeDeletionMutation = {
  __typename?: "Mutation";
  envelopeDeletion?: { __typename?: "Envelope"; id: string } | null;
};

export type EnvelopeUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: EnvelopeAccess;
}>;

export type EnvelopeUpdateMutation = {
  __typename?: "Mutation";
  envelopeUpdate?: { __typename?: "Envelope"; id: string } | null;
};

export type EnvelopeListOnlyQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type EnvelopeListOnlyQuery = {
  __typename?: "Query";
  envelopeList: Array<{
    __typename?: "Envelope";
    name: string;
    id: string;
    created: any;
    treatement?: Treatement | null;
  }>;
};

export type EnvelopeCategoryDocumentsListQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type EnvelopeCategoryDocumentsListQuery = {
  __typename?: "Query";
  envelope?: {
    __typename?: "Envelope";
    documentList: Array<{
      __typename?: "Document";
      id: string;
      name: string;
      created: any;
      treatement?: Treatement | null;
    }>;
  } | null;
};

export type DocumentCategoryCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  name: Scalars["String"];
  customerVisibility: Scalars["Boolean"];
}>;

export type DocumentCategoryCreationMutation = {
  __typename?: "Mutation";
  documentCategoryCreation?: {
    __typename?: "DocumentCategoryV2";
    name: string;
  } | null;
};

export type GedDocumentCategoryListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type GedDocumentCategoryListQuery = {
  __typename?: "Query";
  documentCategoryList?: Array<{
    __typename?: "DocumentCategoryV2";
    key: string;
    name: string;
    documents?: Array<{
      __typename?: "Document";
      id: string;
      name: string;
      envelope?: { __typename?: "Envelope"; name: string } | null;
    }> | null;
  }> | null;
};

export type DocumentAddMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: DocumentAdd;
}>;

export type DocumentAddMutation = {
  __typename?: "Mutation";
  documentAdd?: { __typename?: "Document"; id: string } | null;
};

export type DocumentCategoryUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["String"];
  updatedName: Scalars["String"];
  customerVisibility: Scalars["Boolean"];
}>;

export type DocumentCategoryUpdateMutation = {
  __typename?: "Mutation";
  documentCategoryUpdate?: {
    __typename?: "DocumentCategoryV2";
    name: string;
  } | null;
};

export type DocumentCategoryDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  key: Scalars["String"];
}>;

export type DocumentCategoryDeletionMutation = {
  __typename?: "Mutation";
  documentCategoryDeletion?: {
    __typename?: "DocumentCategoryV2";
    name: string;
  } | null;
};

export type DocumentListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  categories?: InputMaybe<Array<Scalars["String"]> | Scalars["String"]>;
}>;

export type DocumentListQuery = {
  __typename?: "Query";
  documentList?: Array<{
    __typename?: "Document";
    name: string;
    created: any;
  }> | null;
};

export type DocumentCategoryListOnlyQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type DocumentCategoryListOnlyQuery = {
  __typename?: "Query";
  documentCategoryList?: Array<{
    __typename?: "DocumentCategoryV2";
    key: string;
    name: string;
    customerVisibility: boolean;
  }> | null;
};

export type CategoryDocumentsListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  categoryKey: Scalars["String"];
}>;

export type CategoryDocumentsListQuery = {
  __typename?: "Query";
  documentCategory?: {
    __typename?: "DocumentCategoryV2";
    documents?: Array<{
      __typename?: "Document";
      id: string;
      name: string;
      created: any;
      treatement?: Treatement | null;
    }> | null;
  } | null;
};

export type DocumentInfoQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type DocumentInfoQuery = {
  __typename?: "Query";
  document?: {
    __typename?: "Document";
    id: string;
    created: any;
    name: string;
    expiration?: any | null;
    treatement?: Treatement | null;
    notes?: string | null;
    extension: string;
    category: { __typename?: "DocumentCategory"; key: string; name: string };
    signature?: {
      __typename?: "DocumentSignatureInformation";
      signed?: any | null;
      validated?: any | null;
      digital: boolean;
      customer?: DocumentSignatureState | null;
      manager?: DocumentSignatureState | null;
      signatories?: Array<DocumentSignatory> | null;
    } | null;
    envelope?: { __typename?: "Envelope"; id: string; name: string } | null;
  } | null;
};

export type DocumentUrlQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type DocumentUrlQuery = {
  __typename?: "Query";
  document?: { __typename?: "Document"; url?: string | null } | null;
};

export type CustomersQueryVariables = Exact<{
  companyID: Scalars["ID"];
  input?: InputMaybe<CustomersInput>;
}>;

export type CustomersQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    id: string;
    customerList: {
      __typename?: "CustomerConnection";
      totalCount: number;
      edges: Array<{
        __typename?: "CustomerEdge";
        node: {
          __typename?: "Customer";
          id: string;
          name: string;
          lastName?: string | null;
          firstName?: string | null;
          email?: string | null;
          type?: CustomerType | null;
          plan?: CustomerPlan | null;
          phoneNumber?: string | null;
          hasB2CAccount?: boolean | null;
          wealth: any;
          conformity: Treatement;
          informations?: {
            __typename?: "CustomerInformations";
            details?: any | null;
            general?: any | null;
          } | null;
          manager?: { __typename?: "Manager"; name?: string | null } | null;
        };
      }>;
    };
  } | null;
};

export type CustomerDetailsQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CustomerDetailsQuery = {
  __typename?: "Query";
  company?: { __typename?: "Company"; wealth: any } | null;
  customerDetails?: {
    __typename?: "CustomerDetails";
    count: number;
    managedWealth: any;
    averageWealth: any;
  } | null;
};

export type ExportCustomerListMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: CustomersInput;
}>;

export type ExportCustomerListMutation = {
  __typename?: "Mutation";
  url?: string | null;
};

export type CustomerDetailsUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: CustomerDetailsUpdateInput;
}>;

export type CustomerDetailsUpdateMutation = {
  __typename?: "Mutation";
  customerDetailsUpdate?: {
    __typename?: "CustomerDetails";
    count: number;
  } | null;
};

export type CustomerDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type CustomerDeletionMutation = {
  __typename?: "Mutation";
  customerDeletion: boolean;
};

export type CustomerManagerQueryVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type CustomerManagerQuery = {
  __typename?: "Query";
  customer?: {
    __typename?: "Customer";
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
      phone?: string | null;
      providerCode?: string | null;
    } | null;
  } | null;
};

export type CustomerFiscalityQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  year: Scalars["Int"];
}>;

export type CustomerFiscalityQuery = {
  __typename?: "Query";
  customer?: { __typename?: "Customer"; fiscality?: any | null } | null;
};

export type UpdateFiscalityMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["FiscalityInformations"];
  year: Scalars["Int"];
}>;

export type UpdateFiscalityMutation = {
  __typename?: "Mutation";
  customerFiscality?: any | null;
};

export type ListNoteQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type ListNoteQuery = {
  __typename?: "Query";
  listNote?: Array<{
    __typename?: "Note";
    id: string;
    content: string;
    created: any;
    updated: any;
  }> | null;
};

export type ExportNotesMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type ExportNotesMutation = {
  __typename?: "Mutation";
  url?: string | null;
};

export type DeleteNoteMutationVariables = Exact<{
  noteId: Scalars["ID"];
}>;

export type DeleteNoteMutation = {
  __typename?: "Mutation";
  deleteNote?: {
    __typename?: "Note";
    id: string;
    content: string;
    created: any;
    updated: any;
  } | null;
};

export type CreateNoteMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  content: Scalars["String"];
}>;

export type CreateNoteMutation = {
  __typename?: "Mutation";
  createNote?: {
    __typename?: "Note";
    id: string;
    content: string;
    created: any;
    updated: any;
  } | null;
};

export type UpdateNoteMutationVariables = Exact<{
  noteId: Scalars["ID"];
  content: Scalars["String"];
}>;

export type UpdateNoteMutation = {
  __typename?: "Mutation";
  updateNote?: {
    __typename?: "Note";
    id: string;
    content: string;
    created: any;
    updated: any;
  } | null;
};

export type ConformityStatusQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type ConformityStatusQuery = {
  __typename?: "Query";
  conformityStatus: {
    __typename?: "ConformityStatus";
    conformityId?: string | null;
    engagementLetter?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
      documentId?: string | null;
    } | null;
    officialDocuments?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    informationCollections?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    investorProfile?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
      documentId?: string | null;
    } | null;
    LCB?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    DER?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
      documentId?: string | null;
    } | null;
    objectivesHeritage?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
      documentId?: string | null;
    } | null;
  };
};

export type AddDocumentToConformityMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  conformityID?: InputMaybe<Scalars["ID"]>;
  input: DocumentToConformityInput;
}>;

export type AddDocumentToConformityMutation = {
  __typename?: "Mutation";
  addDocumentToConformity?: {
    __typename?: "ConformityStatus";
    conformityId?: string | null;
    engagementLetter?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    officialDocuments?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    informationCollections?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    investorProfile?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    LCB?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
    DER?: {
      __typename?: "StatusData";
      date?: any | null;
      status: StatusType;
      info?: string | null;
    } | null;
  } | null;
};

export type ListCustomerTaskQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type ListCustomerTaskQuery = {
  __typename?: "Query";
  listCustomerTask?: Array<{
    __typename?: "Task";
    id: string;
    title?: string | null;
    category?: string | null;
    contractNumber?: string | null;
    content?: string | null;
    updated: any;
    schedule: any;
    created: any;
    completed?: any | null;
    entityRelatedId?: string | null;
    entityRelatedType?: EntityRelatedType | null;
    customer?: { __typename?: "Customer"; id: string; name: string } | null;
    company: { __typename?: "Company"; id: string; name: string };
    assigned_manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
    } | null;
  }> | null;
};

export type ListCompanyTaskByTypeQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
}>;

export type ListCompanyTaskByTypeQuery = {
  __typename?: "Query";
  listCompanyTaskByType?: {
    __typename?: "TaskByGroup";
    categories?: Array<{
      __typename?: "TaskByType";
      type: string;
      count: number;
      tasks?: Array<{
        __typename?: "Task";
        id: string;
        title?: string | null;
        category?: string | null;
        contractNumber?: string | null;
        content?: string | null;
        updated: any;
        schedule: any;
        created: any;
        completed?: any | null;
        customer?: { __typename?: "Customer"; id: string; name: string } | null;
        company: { __typename?: "Company"; id: string; name: string };
        assigned_manager?: {
          __typename?: "Manager";
          id: string;
          name?: string | null;
        } | null;
      }> | null;
    }> | null;
    managers?: Array<{
      __typename?: "TaskByType";
      type: string;
      count: number;
      tasks?: Array<{
        __typename?: "Task";
        id: string;
        title?: string | null;
        category?: string | null;
        contractNumber?: string | null;
        content?: string | null;
        updated: any;
        schedule: any;
        created: any;
        completed?: any | null;
        customer?: { __typename?: "Customer"; id: string; name: string } | null;
        company: { __typename?: "Company"; id: string; name: string };
        assigned_manager?: {
          __typename?: "Manager";
          id: string;
          name?: string | null;
        } | null;
      }> | null;
    }> | null;
  } | null;
};

export type TaskQueryVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type TaskQuery = {
  __typename?: "Query";
  fetchSingleTask?: {
    __typename?: "Task";
    id: string;
    title?: string | null;
    category?: string | null;
    contractNumber?: string | null;
    content?: string | null;
    updated: any;
    schedule: any;
    created: any;
    completed?: any | null;
    customer?: { __typename?: "Customer"; id: string; name: string } | null;
    company: { __typename?: "Company"; id: string; name: string };
    assigned_manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
    } | null;
  } | null;
};

export type CompanyTaskSearchQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
}>;

export type CompanyTaskSearchQuery = {
  __typename?: "Query";
  companyTaskSearch?: {
    __typename?: "CompanyTaskSearch";
    count: number;
    tasks?: Array<{
      __typename?: "TaskSearchResult";
      id: string;
      title?: string | null;
      category?: string | null;
      contractNumber?: string | null;
      content?: string | null;
      updated: any;
      schedule: any;
      created: any;
      completed?: any | null;
      managerName?: string | null;
      customerName?: string | null;
      customerId?: string | null;
    }> | null;
  } | null;
};

export type CompanyTaskCountByStatusQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
}>;

export type CompanyTaskCountByStatusQuery = {
  __typename?: "Query";
  companyTaskCountByStatus?: Array<{
    __typename?: "TaskCountByStatus";
    status: CompanyTaskFilterStatus;
    count: number;
  }> | null;
};

export type CompanyTaskCountByCategoriesQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
}>;

export type CompanyTaskCountByCategoriesQuery = {
  __typename?: "Query";
  companyTaskCountByCategories?: Array<{
    __typename?: "TaskCountByCategory";
    category: string;
    count: number;
  }> | null;
};

export type CompanyTaskCountByManagersQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filter?: InputMaybe<CompanyTaskFilter>;
}>;

export type CompanyTaskCountByManagersQuery = {
  __typename?: "Query";
  companyTaskCountByManagers?: Array<{
    __typename?: "TaskCountByManager";
    id: string;
    name: string;
    count: number;
  }> | null;
};

export type TaskCategoryListQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type TaskCategoryListQuery = {
  __typename?: "Query";
  taskCategoryList?: Array<{
    __typename?: "TaskCategory";
    key: string;
    name: string;
    default?: boolean | null;
  }> | null;
};

export type CreateTaskCategoryMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: TaskCategoryInput;
}>;

export type CreateTaskCategoryMutation = {
  __typename?: "Mutation";
  createTaskCategory?: {
    __typename?: "TaskCategory";
    key: string;
    name: string;
    default?: boolean | null;
  } | null;
};

export type AssetsAccountNumbersQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type AssetsAccountNumbersQuery = {
  __typename?: "Query";
  accountNumbers?: Array<{
    __typename?: "CustomerAssetAccountNumber";
    value: string;
    label: string;
  }> | null;
};

export type CustomersListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  input?: InputMaybe<CustomersInput>;
}>;

export type CustomersListQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    id: string;
    customerList: {
      __typename?: "CustomerConnection";
      totalCount: number;
      edges: Array<{
        __typename?: "CustomerEdge";
        node: {
          __typename?: "Customer";
          id: string;
          name: string;
          lastName?: string | null;
          firstName?: string | null;
        };
      }>;
    };
  } | null;
};

export type ExportTasksMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID?: InputMaybe<Scalars["ID"]>;
}>;

export type ExportTasksMutation = {
  __typename?: "Mutation";
  url?: string | null;
};

export type CompletedTaskMutationVariables = Exact<{
  taskId: Scalars["ID"];
}>;

export type CompletedTaskMutation = {
  __typename?: "Mutation";
  completedTask?: {
    __typename?: "Task";
    id: string;
    content?: string | null;
    updated: any;
    schedule: any;
    created: any;
    completed?: any | null;
  } | null;
};

export type CreateTaskMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: TaskInput;
}>;

export type CreateTaskMutation = {
  __typename?: "Mutation";
  createTask?: {
    __typename?: "Task";
    id: string;
    title?: string | null;
    category?: string | null;
    contractNumber?: string | null;
    content?: string | null;
    updated: any;
    schedule: any;
    created: any;
    completed?: any | null;
  } | null;
};

export type UpdateTaskMutationVariables = Exact<{
  taskId: Scalars["ID"];
  companyID: Scalars["ID"];
  input: TaskInput;
}>;

export type UpdateTaskMutation = {
  __typename?: "Mutation";
  updateTask?: {
    __typename?: "Task";
    id: string;
    title?: string | null;
    category?: string | null;
    contractNumber?: string | null;
    content?: string | null;
    created: any;
    updated: any;
  } | null;
};

export type CustomerWidgetWealthQueryVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
  financialIgnoredGroup?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  passiveIgnoredGroup?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  nonFinancialIgnoredGroup?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  othersIgnoredGroup?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  totalIgnoredGroup?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  start?: InputMaybe<Scalars["DateTime"]>;
  end?: InputMaybe<Scalars["DateTime"]>;
}>;

export type CustomerWidgetWealthQuery = {
  __typename?: "Query";
  customer?: {
    __typename?: "Customer";
    totalWealth: any;
    financialWealth: any;
    nonFinancialWealth: any;
    othersWealth: any;
    passiveWealth: any;
    underManagement: any;
    financialPerformance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
    nonFinancialPerformance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
    underManagementPerformance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
  } | null;
};

export type CustomerInformationsQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type CustomerInformationsQuery = {
  __typename?: "Query";
  customer?: {
    __typename?: "Customer";
    name: string;
    email?: string | null;
    phoneNumber?: string | null;
    plan?: CustomerPlan | null;
    type?: CustomerType | null;
    tag?: string | null;
    hasB2CAccount?: boolean | null;
    informations?: {
      __typename?: "CustomerInformations";
      details?: any | null;
      general?: any | null;
    } | null;
    pendingInvitations?: Array<{
      __typename?: "CustomerInvite";
      id: string;
      code: string;
      created: any;
      email: string;
    }> | null;
  } | null;
};

export type CustomerInformationsFullFieldsQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type CustomerInformationsFullFieldsQuery = {
  __typename?: "Query";
  investorProfileForm?: any | null;
  customer?: {
    __typename?: "Customer";
    name: string;
    firstName?: string | null;
    lastName?: string | null;
    email?: string | null;
    phoneNumber?: string | null;
    plan?: CustomerPlan | null;
    type?: CustomerType | null;
    tag?: string | null;
    investorProfile?: any | null;
    hasB2CAccount?: boolean | null;
    informations?: {
      __typename?: "CustomerInformations";
      details?: any | null;
      general?: any | null;
      lcbLab?: LCBForm | null;
    } | null;
    pendingInvitations?: Array<{
      __typename?: "CustomerInvite";
      id: string;
      code: string;
      created: any;
      email: string;
    }> | null;
  } | null;
};

export type HoldingQueriesQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
}>;

export type HoldingQueriesQuery = {
  __typename?: "Query";
  holdingList?: Array<{
    __typename?: "Holding";
    id: string;
    name: string;
    form: any;
    companies: Array<{
      __typename?: "BusinessStats";
      id: string;
      name: string;
      ownerName: string;
      created?: any | null;
    }>;
  }> | null;
  businessList?: Array<{
    __typename?: "Customer";
    id: string;
    name: string;
    informations?: {
      __typename?: "CustomerInformations";
      general?: any | null;
    } | null;
  }> | null;
};

export type HoldingListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
}>;

export type HoldingListQuery = {
  __typename?: "Query";
  holdingList?: Array<{
    __typename?: "Holding";
    id: string;
    name: string;
    form: any;
    companies: Array<{
      __typename?: "BusinessStats";
      id: string;
      name: string;
      ownerName: string;
      created?: any | null;
    }>;
  }> | null;
};

export type BusinessListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
}>;

export type BusinessListQuery = {
  __typename?: "Query";
  businessList?: Array<{
    __typename?: "Customer";
    id: string;
    name: string;
    informations?: {
      __typename?: "CustomerInformations";
      general?: any | null;
    } | null;
  }> | null;
};

export type UpdateCustomerInformationsGeneralMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["GeneralInformations"];
}>;

export type UpdateCustomerInformationsGeneralMutation = {
  __typename?: "Mutation";
  customerInformationsGeneral?: any | null;
};

export type CustomerReferencesAccessUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  values: Array<ReferenceAccessValue> | ReferenceAccessValue;
}>;

export type CustomerReferencesAccessUpdateMutation = {
  __typename?: "Mutation";
  customerReferencesAccessUpdate?: Array<{
    __typename?: "ReferenceAccess";
    primary: boolean;
    manager: { __typename?: "Manager"; id: string; name?: string | null };
    customer: {
      __typename?: "Customer";
      id: string;
      name: string;
      email?: string | null;
    };
  }> | null;
};

export type UpdateCustomerInformationsDetailMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["DetailsInformations"];
}>;

export type UpdateCustomerInformationsDetailMutation = {
  __typename?: "Mutation";
  customerInformationsDetail?: any | null;
};

export type HoldingCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  name: Scalars["String"];
  input: Scalars["HoldingForm"];
}>;

export type HoldingCreationMutation = {
  __typename?: "Mutation";
  holdingCreation?: { __typename?: "Holding"; id: string } | null;
};

export type HoldingUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  name: Scalars["String"];
  input: Scalars["HoldingForm"];
}>;

export type HoldingUpdateMutation = {
  __typename?: "Mutation";
  holdingUpdate?: { __typename?: "Holding"; id: string } | null;
};

export type HoldingDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  IDs: Array<Scalars["ID"]> | Scalars["ID"];
}>;

export type HoldingDeletionMutation = {
  __typename?: "Mutation";
  holdingDeletion?: Array<{ __typename?: "Holding"; name: string }> | null;
};

export type AssignHoldingsToBusinessMutationVariables = Exact<{
  companyID: Scalars["ID"];
  businessID: Scalars["ID"];
  customerId: Scalars["ID"];
  holdingIds: Array<Scalars["ID"]> | Scalars["ID"];
}>;

export type AssignHoldingsToBusinessMutation = {
  __typename?: "Mutation";
  assignHoldingsToBusiness?: Array<{
    __typename?: "Holding";
    id: string;
    name: string;
  }> | null;
};

export type BusinessCreateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerId: Scalars["ID"];
  input: Scalars["HoldingCompanyInfo"];
}>;

export type BusinessCreateMutation = {
  __typename?: "Mutation";
  businessCreate?: { __typename?: "Holding"; id: string } | null;
};

export type BusinessUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  information?: InputMaybe<Scalars["HoldingCompanyInfo"]>;
  managers?: InputMaybe<Scalars["HoldingManagerSchema"]>;
  nbManagers?: InputMaybe<Scalars["NbHoldingManagerSchema"]>;
  bankAccounts?: InputMaybe<Scalars["CompanyFinancialSchema"]>;
  activities?: InputMaybe<Scalars["CompanyActivitiesSchema"]>;
  tag?: InputMaybe<Scalars["String"]>;
}>;

export type BusinessUpdateMutation = {
  __typename?: "Mutation";
  businessUpdate?: { __typename?: "Holding"; id: string } | null;
};

export type BusinessDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  IDs: Array<Scalars["ID"]> | Scalars["ID"];
}>;

export type BusinessDeletionMutation = {
  __typename?: "Mutation";
  businessDeletion?: Array<{ __typename?: "Customer"; id: string }> | null;
};

export type CreateCustomerFromBusinessMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  businessID: Scalars["ID"];
  addToCustomerReference?: InputMaybe<Scalars["Boolean"]>;
}>;

export type CreateCustomerFromBusinessMutation = {
  __typename?: "Mutation";
  createCustomerFromBusiness?: string | null;
};

export type CustomerRelationQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type CustomerRelationQuery = {
  __typename?: "Query";
  customerRelation?: {
    __typename?: "CustomerRelation";
    list: Array<CustomerRelationForm>;
  } | null;
};

export type CustomerRelationCreateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["CustomerRelationForm"];
}>;

export type CustomerRelationCreateMutation = {
  __typename?: "Mutation";
  customerRelationCreate?: CustomerRelationForm | null;
};

export type CustomerRelationUpdateMutationVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  input: Scalars["CustomerRelationForm"];
}>;

export type CustomerRelationUpdateMutation = {
  __typename?: "Mutation";
  customerRelationUpdate?: CustomerRelationForm | null;
};

export type CreateUserFromRelationMutationVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  addToCustomerReference: Scalars["Boolean"];
}>;

export type CreateUserFromRelationMutation = {
  __typename?: "Mutation";
  createUserFromRelation?: string | null;
};

export type CreateRelationFromExistingCustomerMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  existingCustomerID: Scalars["ID"];
}>;

export type CreateRelationFromExistingCustomerMutation = {
  __typename?: "Mutation";
  createRelationFromExistingCustomer?: {
    __typename?: "Customer";
    id: string;
    firstName?: string | null;
    lastName?: string | null;
    email?: string | null;
    informations?: {
      __typename?: "CustomerInformations";
      details?: any | null;
      general?: any | null;
    } | null;
  } | null;
};

export type UnlinkFromCustomerReferenceMutationVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type UnlinkFromCustomerReferenceMutation = {
  __typename?: "Mutation";
  unlinkFromCustomerReference?: string | null;
};

export type CustomerRelationDeleteMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type CustomerRelationDeleteMutation = {
  __typename?: "Mutation";
  customerRelationDelete?: CustomerRelationForm | null;
};

export type CustomerRelationsMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  input: Scalars["CustomerRelationForm"];
}>;

export type CustomerRelationsMutation = {
  __typename?: "Mutation";
  customerRelations?: CustomerRelationForm | null;
};

export type CustomerManagerUpdateMutationVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  providerCode?: InputMaybe<Scalars["String"]>;
  managerID?: InputMaybe<Scalars["ID"]>;
}>;

export type CustomerManagerUpdateMutation = {
  __typename?: "Mutation";
  updateCustomerManager?: { __typename?: "Customer"; id: string } | null;
};

export type ContractListQueryVariables = Exact<{
  filters: ContractFilters;
  pagination: Pagination;
  companyID: Scalars["ID"];
}>;

export type ContractListQuery = {
  __typename?: "Query";
  contractListing?: {
    __typename?: "ContractPaginated";
    totalCount: number;
    totalPages: number;
    contracts: Array<{
      __typename?: "Contract";
      id: string;
      isSelected?: boolean | null;
      name: string;
      type: string;
      insuranceCompany?: string | null;
      intermediary?: string | null;
      performance?: number | null;
      accountUnits: number;
      managed?: boolean | null;
      metadata?: any | null;
      managedModes: Array<any | null>;
      fundsOrigin?: string | null;
      minTransferAmount?: number | null;
      maxTransferFees?: number | null;
      arbitrageFees?: string | null;
      yearlyFees?: number | null;
    }>;
  } | null;
};

export type ContractFiltersQueryVariables = Exact<{ [key: string]: never }>;

export type ContractFiltersQuery = {
  __typename?: "Query";
  contractFilters: {
    __typename?: "ContractAvailableFiltersValues";
    insuranceCompanies?: Array<string | null> | null;
    types?: Array<string | null> | null;
    managedModes?: Array<string | null> | null;
    fundsOrigins?: Array<string | null> | null;
  };
};

export type AutomaticContractCompareMutationVariables = Exact<{
  input: CompareContract;
}>;

export type AutomaticContractCompareMutation = {
  __typename?: "Mutation";
  automaticContractCompare?: {
    __typename?: "Contract";
    id: string;
    name: string;
    type: string;
    insuranceCompany?: string | null;
    intermediary?: string | null;
    performance?: number | null;
    accountUnits: number;
    managed?: boolean | null;
    managedModes: Array<any | null>;
    fundsOrigin?: string | null;
    minTransferAmount?: number | null;
    maxTransferFees?: number | null;
    arbitrageFees?: string | null;
    yearlyFees?: number | null;
  } | null;
};

export type LinkContractToCompanyMutationVariables = Exact<{
  contractId: Scalars["ID"];
  companyId: Scalars["ID"];
}>;

export type LinkContractToCompanyMutation = {
  __typename?: "Mutation";
  linkContractToCompany?: {
    __typename?: "Contract";
    id: string;
    name: string;
    type: string;
    insuranceCompany?: string | null;
    intermediary?: string | null;
    performance?: number | null;
    accountUnits: number;
    managed?: boolean | null;
    managedModes: Array<any | null>;
    fundsOrigin?: string | null;
    minTransferAmount?: number | null;
    maxTransferFees?: number | null;
    arbitrageFees?: string | null;
    yearlyFees?: number | null;
  } | null;
};

export type UnlinkContractFromCompanyMutationVariables = Exact<{
  contractId: Scalars["ID"];
  companyId: Scalars["ID"];
}>;

export type UnlinkContractFromCompanyMutation = {
  __typename?: "Mutation";
  unlinkContractFromCompany?: {
    __typename?: "Contract";
    id: string;
    name: string;
    type: string;
    insuranceCompany?: string | null;
    intermediary?: string | null;
    performance?: number | null;
    accountUnits: number;
    managed?: boolean | null;
    managedModes: Array<any | null>;
    fundsOrigin?: string | null;
    minTransferAmount?: number | null;
    maxTransferFees?: number | null;
    arbitrageFees?: string | null;
    yearlyFees?: number | null;
  } | null;
};

export type UpdateFavoriteContractMetadataMutationVariables = Exact<{
  contractID: Scalars["ID"];
  companyID: Scalars["ID"];
  input: Scalars["FavoriteContractMetadata"];
}>;

export type UpdateFavoriteContractMetadataMutation = {
  __typename?: "Mutation";
  updateFavoriteContractMetadata?: any | null;
};

export type InstrumentsListQueryVariables = Exact<{
  filters: FavoriteInstrumentsFilters;
  pagination: Pagination;
}>;

export type InstrumentsListQuery = {
  __typename?: "Query";
  instrumentListingWithFavorites?: {
    __typename?: "instrumentListingWithFavoritesOutput";
    totalCount: number;
    totalPages: number;
    instruments: Array<{
      __typename?: "InvestmentInstrumentWithFavorites";
      code: string;
      category?: string | null;
      label: string;
      managementCompany?: string | null;
      isFavorite?: boolean | null;
      valuation?: number | null;
    }>;
  } | null;
};

export type FavoriteInstrumentsListQueryVariables = Exact<{
  filters: FavoriteInstrumentsFilters;
  pagination: Pagination;
}>;

export type FavoriteInstrumentsListQuery = {
  __typename?: "Query";
  instrumentFavorites?: {
    __typename?: "instrumentListingWithFavoritesOutput";
    totalCount: number;
    totalPages: number;
    instruments: Array<{
      __typename?: "InvestmentInstrumentWithFavorites";
      code: string;
      category?: string | null;
      label: string;
      managementCompany?: string | null;
      isFavorite?: boolean | null;
      valuation?: number | null;
    }>;
  } | null;
};

export type InstrumentFiltersQueryQueryVariables = Exact<{
  [key: string]: never;
}>;

export type InstrumentFiltersQueryQuery = {
  __typename?: "Query";
  instrumentFavoriteFilters: {
    __typename?: "InstrumentFavoriteAvailableFiltersValues";
    categories?: Array<string> | null;
    managementCompanies?: Array<string> | null;
  };
};

export type SetInstrumentFavoriteMutationVariables = Exact<{
  code: Scalars["ID"];
  isFavorite: Scalars["Boolean"];
  companyID: Scalars["ID"];
}>;

export type SetInstrumentFavoriteMutation = {
  __typename?: "Mutation";
  setInstrumentFavorite?: {
    __typename?: "InstrumentFavorites";
    code: string;
  } | null;
};

export type ProjectQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ProjectQuery = {
  __typename?: "Query";
  project: {
    __typename?: "Project";
    id: string;
    created: any;
    validated?: any | null;
    archived?: any | null;
    name?: string | null;
    type: ProjectType;
    metadata: any;
  };
};

export type ProjectListQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  range: TimeRange;
  type?: InputMaybe<ProjectType>;
  productType?: InputMaybe<Scalars["String"]>;
}>;

export type ProjectListQuery = {
  __typename?: "Query";
  projectList?: Array<{
    __typename?: "Project";
    id: string;
    created: any;
    validated?: any | null;
    archived?: any | null;
    name?: string | null;
    type: ProjectType;
    metadata: any;
  }> | null;
};

export type ProjectDeletionMutationVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ProjectDeletionMutation = {
  __typename?: "Mutation";
  projectDeletion?: { __typename?: "Project"; id: string } | null;
};

export type ProjectValidationMutationVariables = Exact<{
  id: Scalars["ID"];
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
}>;

export type ProjectValidationMutation = {
  __typename?: "Mutation";
  projectValidation?: { __typename?: "Project"; id: string } | null;
};

export type ProjectCreationMutationVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  type: ProjectType;
  name: Scalars["String"];
  metadata: Scalars["ProjectMetadata"];
}>;

export type ProjectCreationMutation = {
  __typename?: "Mutation";
  projectCreation?: { __typename?: "Project"; id: string } | null;
};

export type ProjectUpdateMutationVariables = Exact<{
  id: Scalars["ID"];
  metadata: Scalars["ProjectMetadata"];
}>;

export type ProjectUpdateMutation = {
  __typename?: "Mutation";
  projectUpdate?: { __typename?: "Project"; id: string } | null;
};

export type ProjectProductTypesQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type ProjectProductTypesQuery = {
  __typename?: "Query";
  projectProductTypes?: Array<string> | null;
};

export type GenerateAdequacyMutationVariables = Exact<{
  projectID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type GenerateAdequacyMutation = {
  __typename?: "Mutation";
  generateAdequacy?: {
    __typename?: "AdequacyFile";
    name: string;
    url: any;
    extension: string;
  } | null;
};

export type SearchCustomersQueryVariables = Exact<{
  companyID: Scalars["ID"];
  schema: Scalars["CustomerSearchSchema"];
}>;

export type SearchCustomersQuery = {
  __typename?: "Query";
  searchCustomers?: { __typename?: "CustomerSearchResult"; id: string } | null;
};

export type CustomersSearchFiltersQueryVariables = Exact<{
  companyID: Scalars["ID"];
  underManagement?: InputMaybe<Scalars["Boolean"]>;
}>;

export type CustomersSearchFiltersQuery = {
  __typename?: "Query";
  customersSearchFilters?: {
    __typename?: "CustomersSearchFilters";
    insuranceCompany?: Array<string> | null;
    category?: Array<string> | null;
    group?: Array<string> | null;
    investmentType?: Array<string> | null;
    investmentManagementCompany?: Array<string> | null;
    tags?: Array<string> | null;
  } | null;
};

export type SearchCustomersResultQueryVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type SearchCustomersResultQuery = {
  __typename?: "Query";
  getSearchResult?: {
    __typename?: "CustomerSearchResult";
    id: string;
    schema: any;
    result: Array<
      | {
          __typename: "Customer";
          id: string;
          name: string;
          wealth: any;
          underManagementWealth: any;
          informations?: {
            __typename?: "CustomerInformations";
            details?: any | null;
            general?: any | null;
          } | null;
        }
      | {
          __typename: "CustomerAsset";
          id: string;
          mixedData?: any | null;
          accountNumber?: string | null;
          openDate?: any | null;
          group: AssetGroup;
          name: string;
          valuation?: any | null;
          investmentCode?: string | null;
          investmentLabel?: string | null;
          investmentValuation?: any | null;
          investmentPerformance?: any | null;
          customer?: {
            __typename?: "Customer";
            id: string;
            name: string;
          } | null;
          performance?: {
            __typename?: "Performance";
            gain?: any | null;
            evolution?: number | null;
          } | null;
        }
    >;
  } | null;
};

export type ExportSearchResultMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
  hasInvestQuery?: InputMaybe<Scalars["Boolean"]>;
}>;

export type ExportSearchResultMutation = {
  __typename?: "Mutation";
  url?: string | null;
};

export type GetFavoriteSearchesQueryVariables = Exact<{ [key: string]: never }>;

export type GetFavoriteSearchesQuery = {
  __typename?: "Query";
  favoriteSearchQueries?: Array<{
    __typename?: "FavoriteSearchQuery";
    id: string;
    schema: any;
  }> | null;
};

export type SaveFavoriteSearchMutationVariables = Exact<{
  schema: Scalars["CustomerSearchSchema"];
}>;

export type SaveFavoriteSearchMutation = {
  __typename?: "Mutation";
  saveFavoriteSearchQuery?: {
    __typename?: "FavoriteSearchQuery";
    id: string;
  } | null;
};

export type DeleteFavoriteSearchMutationVariables = Exact<{
  id: Scalars["ID"];
}>;

export type DeleteFavoriteSearchMutation = {
  __typename?: "Mutation";
  deleteFavoriteSearchQuery?: {
    __typename?: "FavoriteSearchQuery";
    id: string;
  } | null;
};

export type CustomerWalletActivitiesGraphQueryVariables = Exact<{
  assetId: Scalars["ID"];
  from?: InputMaybe<Scalars["DateTime"]>;
}>;

export type CustomerWalletActivitiesGraphQuery = {
  __typename?: "Query";
  customerWalletActivitiesGraph?: Array<{
    __typename?: "Activity";
    id: string;
    value: number;
    start?: any | null;
  }> | null;
};

export type CustomerWalletActivitiesByYearQueryVariables = Exact<{
  assetId: Scalars["ID"];
}>;

export type CustomerWalletActivitiesByYearQuery = {
  __typename?: "Query";
  customerWalletActivitiesByYear?: Array<{
    __typename?: "ActivityByYear";
    year: number;
    startValue: string;
    endValue?: string | null;
    performance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
  }> | null;
};

export type CustomerWalletAddActivityYearHistoryMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  assetID: Scalars["ID"];
  input: ActivityYearHistoryCreationInput;
}>;

export type CustomerWalletAddActivityYearHistoryMutation = {
  __typename?: "Mutation";
  customerWalletAddActivityYearHistory?: {
    __typename?: "ActivityByYear";
    year: number;
  } | null;
};

export type CustomerWalletUpdateActivityYearHistoryMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  assetID: Scalars["ID"];
  input: ActivityYearHistoryCreationInput;
}>;

export type CustomerWalletUpdateActivityYearHistoryMutation = {
  __typename?: "Mutation";
  customerWalletUpdateActivityYearHistory?: {
    __typename?: "ActivityByYear";
    year: number;
  } | null;
};

export type ScpiListQueryVariables = Exact<{
  name: Scalars["String"];
}>;

export type ScpiListQuery = {
  __typename?: "Query";
  SCPIList: Array<{
    __typename?: "SCPI";
    name: string;
    subscription_price?: string | null;
  }>;
};

export type AssetCreationMutationVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  name: Scalars["String"];
  group: AssetGroup;
  values: Scalars["CustomerAssetCreationValues"];
  investments?: InputMaybe<Array<InvestmentValues> | InvestmentValues>;
}>;

export type AssetCreationMutation = {
  __typename?: "Mutation";
  created?: { __typename?: "CustomerAsset"; id: string; name: string } | null;
};

export type AssetUpdateMutationVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  assetID: Scalars["ID"];
  name: Scalars["String"];
  group: AssetGroup;
  values: Scalars["CustomerAssetCreationValues"];
  investments?: InputMaybe<Array<InvestmentValues> | InvestmentValues>;
}>;

export type AssetUpdateMutation = {
  __typename?: "Mutation";
  updated?: { __typename?: "CustomerAsset"; id: string; name: string } | null;
};

export type AssetUpdateDatesAndStatusMutationVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  assetID: Scalars["ID"];
  openDate: Scalars["DateTime"];
  closeDate?: InputMaybe<Scalars["DateTime"]>;
  status: Scalars["String"];
}>;

export type AssetUpdateDatesAndStatusMutation = {
  __typename?: "Mutation";
  updated?: { __typename?: "CustomerAsset"; id: string; name: string } | null;
};

export type AssetUpdateGroupMutationVariables = Exact<{
  companyID: Scalars["ID"];
  assets: Array<Scalars["ID"]> | Scalars["ID"];
  group: AssetGroup;
  categoryName?: InputMaybe<Scalars["String"]>;
}>;

export type AssetUpdateGroupMutation = {
  __typename?: "Mutation";
  updated?: Array<{
    __typename?: "CustomerAsset";
    id: string;
    name: string;
    group: AssetGroup;
    categoryName?: string | null;
  }> | null;
};

export type CustomerAssetInvestmentUpdateMutationVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  assetID: Scalars["ID"];
  update: Array<InvestmentValues> | InvestmentValues;
}>;

export type CustomerAssetInvestmentUpdateMutation = {
  __typename?: "Mutation";
  customerAssetInvestmentUpdate?: Array<{
    __typename?: "CustomerInvestment";
    id: string;
  }> | null;
};

export type SearchInstrumentQueryVariables = Exact<{
  name: Scalars["String"];
  group: AssetGroup;
}>;

export type SearchInstrumentQuery = {
  __typename?: "Query";
  searchInstrument?: Array<{
    __typename?: "Instrument";
    name: string;
    code: string;
    price: any;
  }> | null;
};

export type CustomerInvestmentCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  assetID: Scalars["ID"];
  input: CustomerInvestmentCreation;
}>;

export type CustomerInvestmentCreationMutation = {
  __typename?: "Mutation";
  customerInvestmentCreation?: {
    __typename?: "CustomerAssetInvestment";
    name: string;
  } | null;
};

export type AssetDetailQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type AssetDetailQuery = {
  __typename?: "Query";
  asset?: {
    __typename?: "CustomerAsset";
    id: string;
    name: string;
    group: AssetGroup;
    activity?: any | null;
    underManagement: boolean;
    categoryName?: string | null;
    accountNumber?: string | null;
    isManual: boolean;
    metadata?: any | null;
    openDate?: any | null;
    owners?: Array<{
      __typename?: "AssetOwner";
      ownership?: number | null;
      entity?: { __typename?: "Customer"; id: string } | null;
    }> | null;
    performance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
    investmentList?: Array<{
      __typename?: "CustomerAssetInvestment";
      logo?: string | null;
      code?: string | null;
      name: string;
      category?: string | null;
      managementCompany?: string | null;
      unitPrice?: number | null;
      unitValue?: number | null;
      created?: any | null;
      quantity?: number | null;
      valuation?: any | null;
      riskIndicator?: number | null;
      performance?: {
        __typename?: "Performance";
        gain?: any | null;
        evolution?: number | null;
      } | null;
    }> | null;
  } | null;
};

export type RetrieveOtherOwnerQueryVariables = Exact<{
  assetId: Scalars["ID"];
  currentOwnerId: Scalars["ID"];
}>;

export type RetrieveOtherOwnerQuery = {
  __typename?: "Query";
  otherOwner?: {
    __typename?: "Customer";
    id: string;
    name: string;
    firstName?: string | null;
    lastName?: string | null;
  } | null;
};

export type GetUsersInCustomerReferenceQueryVariables = Exact<{
  companyId: Scalars["ID"];
  customerId: Scalars["ID"];
}>;

export type GetUsersInCustomerReferenceQuery = {
  __typename?: "Query";
  users?: Array<{
    __typename?: "Customer";
    id: string;
    name: string;
    firstName?: string | null;
    lastName?: string | null;
    type?: CustomerType | null;
  }> | null;
};

export type AssetDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  assetID: Scalars["ID"];
}>;

export type AssetDeletionMutation = {
  __typename?: "Mutation";
  assetDeletion?: { __typename?: "CustomerAsset"; id: string } | null;
};

export type InstrumentDetailQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type InstrumentDetailQuery = {
  __typename?: "Query";
  instrumentDetails: {
    __typename?: "InstrumentDataWithMornigstar";
    code?: string | null;
    label?: string | null;
    category?: string | null;
    managementCompany?: string | null;
    subcategory?: string | null;
    riskIndicator?: number | null;
    dic?: string | null;
    prospectus?: string | null;
    location?: string | null;
    closePrice?: number | null;
    closePriceDate?: any | null;
    currency?: string | null;
    sfdr?: number | null;
    pea?: boolean | null;
    peaPme?: boolean | null;
    esg?: boolean | null;
    indiceReference?: string | null;
    minimumInvestissement?: string | null;
    frequenceValorisation?: string | null;
    nombreParts?: string | null;
    fraisPriips?: string | null;
    fraisCourants?: string | null;
    fraisGestion?: string | null;
    fraisSouscription?: string | null;
    fraisRachat?: string | null;
    perfCalendaire?: Array<{
      __typename?: "PerfCalendaire";
      year: string;
      value: string;
    }> | null;
  };
};

export type SearchInvestmentsByInstrumentCodeInAssetsQueryVariables = Exact<{
  companyID: Scalars["ID"];
  code: Scalars["ID"];
  page?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
}>;

export type SearchInvestmentsByInstrumentCodeInAssetsQuery = {
  __typename?: "Query";
  searchInvestmentsByInstrumentCodeInAssets: {
    __typename?: "InstrumentsCustomerDetails";
    totalCount: number;
    edges?: Array<{
      __typename?: "InstrumentCustomerDetail";
      assetId: string;
      assetName: string;
      assetGroup: string;
      customerId: string;
      customerName: string;
      amount: number;
      detentions?: number | null;
      performance: {
        __typename?: "PerformanceInstrument";
        amount: number;
        percentage: number;
      };
    }> | null;
  };
};

export type InstrumentIsFavoriteQueryVariables = Exact<{
  companyID: Scalars["ID"];
  code: Scalars["ID"];
}>;

export type InstrumentIsFavoriteQuery = {
  __typename?: "Query";
  instrumentIsFavorite: boolean;
};

export type InstrumentUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  code: Scalars["ID"];
  input: InstrumentsDataInput;
}>;

export type InstrumentUpdateMutation = {
  __typename?: "Mutation";
  instrumentUpdate?: {
    __typename?: "InvestmentInstrument";
    code: string;
  } | null;
};

export type CustomerWalletTransactionsQueryVariables = Exact<{
  assetId: Scalars["ID"];
  pagination: Pagination;
  search?: InputMaybe<Scalars["String"]>;
  dateRange?: InputMaybe<DateRange>;
}>;

export type CustomerWalletTransactionsQuery = {
  __typename?: "Query";
  customerWalletTransactions?: {
    __typename?: "TransactionPaginated";
    totalCount: number;
    totalPages: number;
    transactions?: Array<{
      __typename?: "Transaction";
      id: string;
      name?: string | null;
      date?: any | null;
      dateBO?: any | null;
      value?: number | null;
      comment?: string | null;
      typeOperation?: string | null;
      manager?: string | null;
      metadata?: any | null;
      statusBO?: string | null;
      statusValidation?: string | null;
      managerBO?: string | null;
    }> | null;
  } | null;
};

export type CreateTransactionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  assetID: Scalars["ID"];
  input: TransactionCreationInput;
}>;

export type CreateTransactionMutation = {
  __typename?: "Mutation";
  customerWalletAddTransaction?: {
    __typename?: "Transaction";
    id: string;
  } | null;
};

export type TransactionUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  transactionID: Scalars["ID"];
  input: TransactionCreationInput;
}>;

export type TransactionUpdateMutation = {
  __typename?: "Mutation";
  customerWalletTransactionUpdate?: {
    __typename?: "Transaction";
    id: string;
  } | null;
};

export type TransactionDeleteMutationVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  transactionID: Scalars["ID"];
}>;

export type TransactionDeleteMutation = {
  __typename?: "Mutation";
  customerWalletTransactionDeletion?: boolean | null;
};

export type RelatedEntitiesQueryVariables = Exact<{
  companyID: Scalars["ID"];
  assetID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type RelatedEntitiesQuery = {
  __typename?: "Query";
  referenceEntities?: Array<{
    __typename?: "Customer";
    id: string;
    name: string;
  }> | null;
  asset?: {
    __typename?: "CustomerAsset";
    owners?: Array<{
      __typename?: "AssetOwner";
      ownership?: number | null;
      mode?: string | null;
      entity?: { __typename?: "Customer"; id: string; name: string } | null;
    }> | null;
  } | null;
};

export type UpdateAssetOwnershipMutationVariables = Exact<{
  companyID: Scalars["ID"];
  assetID: Scalars["ID"];
  values: Array<AssetOwnerInput> | AssetOwnerInput;
}>;

export type UpdateAssetOwnershipMutation = {
  __typename?: "Mutation";
  updated?: {
    __typename?: "CustomerAsset";
    id: string;
    owners?: Array<{
      __typename?: "AssetOwner";
      ownership?: number | null;
      mode?: string | null;
      entity?: { __typename?: "Customer"; id: string } | null;
    }> | null;
  } | null;
};

export type CustomerWealthQueryVariables = Exact<{
  id: Scalars["ID"];
  company: Scalars["ID"];
  financialTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  passiveTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  nonFinancialTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  benefitsTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  repartitionTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  othersTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  computing?: InputMaybe<WealthFilter>;
}>;

export type CustomerWealthQuery = {
  __typename?: "Query";
  financialWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      valuation?: any | null;
      underManagement: boolean;
      isManual: boolean;
      sri?: number | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  nonfinancialWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      valuation?: any | null;
      underManagement: boolean;
      isManual: boolean;
      sri?: number | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  othersWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      valuation?: any | null;
      underManagement: boolean;
      isManual: boolean;
      sri?: number | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  passiveWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      underManagement: boolean;
      isManual: boolean;
      valuation?: any | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  benefitsWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      underManagement: boolean;
      isManual: boolean;
      valuation?: any | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  repartition?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
  }> | null;
};

export type WealthUnderManagmentQueryVariables = Exact<{
  company: Scalars["ID"];
  computing?: InputMaybe<WealthFilter>;
}>;

export type WealthUnderManagmentQuery = {
  __typename?: "Query";
  assetsTypes?: Array<{
    __typename?: "CompanyWealth";
    name: AssetGroup;
    amount: any;
    assetsUnderManagement?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      valuation?: any | null;
      customer?: { __typename?: "Customer"; id: string; name: string } | null;
    }> | null;
  }> | null;
};

export type CustomerWalletQueryVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type CustomerWalletQuery = {
  __typename?: "Query";
  customerWallet?: {
    __typename?: "CustomerWallet";
    id: string;
    accountNumber?: string | null;
    group: AssetGroup;
    insuranceCompany?: string | null;
    name: string;
    openDate?: any | null;
    transfersAmount?: any | null;
    withdrawalAmount?: any | null;
    valuation?: any | null;
    risk?: number | null;
    metadata?: any | null;
    mixedData?: any | null;
    sri?: number | null;
    irr?: number | null;
    initialValuation?: any | null;
    investments?: Array<{
      __typename?: "CustomerInvestment";
      id: string;
      code?: string | null;
      label?: string | null;
      quantity?: number | null;
      unitPrice?: number | null;
      unitValue?: number | null;
      dateValue?: any | null;
      valuation?: any | null;
      dateValuation?: any | null;
      instrument?: string | null;
      riskIndicator?: number | null;
      buyingDate?: any | null;
      category?: string | null;
      investmentInstrument?: {
        __typename?: "InvestmentInstrument";
        dic?: string | null;
        prospectus?: string | null;
        metadata?: any | null;
      } | null;
    }> | null;
  } | null;
};

export type UnderManagementAssetGroupsQueryVariables = Exact<{
  customerID: Scalars["ID"];
  companyID: Scalars["ID"];
  groups?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  computing?: InputMaybe<WealthFilter>;
}>;

export type UnderManagementAssetGroupsQuery = {
  __typename?: "Query";
  customerWealth?: Array<{
    __typename?: "CustomerWealth";
    group: AssetGroup;
    valuation: any;
    assets?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      activity?: any | null;
      accountNumber?: string | null;
      openDate?: any | null;
      categoryName?: string | null;
      transfersAmount?: any | null;
      withdrawalAmount?: any | null;
      metadata?: any | null;
      sri?: number | null;
      valuation?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        mode?: string | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
};

export type CustomerAssetsQueryVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
  groups?: InputMaybe<Array<AssetGroup> | AssetGroup>;
}>;

export type CustomerAssetsQuery = {
  __typename?: "Query";
  customerAssets?: Array<{
    __typename?: "CustomerAsset";
    id: string;
    name: string;
    group: AssetGroup;
  }> | null;
};

export type CustomerWalletInvestmentSriUpdateMutationVariables = Exact<{
  id: Scalars["ID"];
  riskIndicator: Scalars["Int"];
}>;

export type CustomerWalletInvestmentSriUpdateMutation = {
  __typename?: "Mutation";
  customerWalletInvestmentSriUpdate?: {
    __typename?: "CustomerInvestment";
    id: string;
  } | null;
};

export type GlobalWealthQueryVariables = Exact<{
  company: Scalars["ID"];
  start?: InputMaybe<Scalars["DateTime"]>;
  end?: InputMaybe<Scalars["DateTime"]>;
  options: AssetPerformanceOrder;
  computing?: InputMaybe<WealthFilter>;
  ignoring?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  campaignLimit?: InputMaybe<Scalars["Int"]>;
}>;

export type GlobalWealthQuery = {
  __typename?: "Query";
  liquidity?: any | null;
  companyWealth?: Array<{
    __typename?: "CompanyWealth";
    name: AssetGroup;
    amount: any;
    performance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
  }> | null;
  assets?: Array<{
    __typename?: "CustomerAsset";
    id: string;
    name: string;
    group: AssetGroup;
    isManual: boolean;
    amount?: any | null;
    performance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
  }> | null;
  mostOccuring?: {
    __typename?: "AssetStats";
    group: AssetGroup;
    count: number;
  } | null;
  company?: {
    __typename?: "Company";
    wealth: any;
    metadata?: any | null;
  } | null;
  details?: { __typename?: "CustomerDetails"; managedWealth: any } | null;
  campaigns?: Array<{ __typename?: "Campaign"; name: string }> | null;
};

export type AssetManagementSwitchMutationVariables = Exact<{
  id: Scalars["ID"];
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
  domain: WealthFilter;
}>;

export type AssetManagementSwitchMutation = {
  __typename?: "Mutation";
  asset?: {
    __typename?: "CustomerAsset";
    id: string;
    name: string;
    underManagement: boolean;
    isManual: boolean;
  } | null;
};

export type CustomerSearchQueryVariables = Exact<{
  companyID: Scalars["ID"];
  text?: InputMaybe<Scalars["String"]>;
  suggestionsTokens?: InputMaybe<Array<Scalars["String"]> | Scalars["String"]>;
}>;

export type CustomerSearchQuery = {
  __typename?: "Query";
  searchCustomer?: Array<{
    __typename?: "Customer";
    id: string;
    name: string;
    email?: string | null;
  }> | null;
};

export type AssetAffectationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  selectedCustomerID: Scalars["ID"];
  assets: Array<Scalars["ID"]> | Scalars["ID"];
}>;

export type AssetAffectationMutation = {
  __typename?: "Mutation";
  assetsAffectation?: Array<{
    __typename?: "CustomerAsset";
    id: string;
  }> | null;
};

export type AssetTypeWealthQueryVariables = Exact<{
  id: Scalars["ID"];
  filters?: InputMaybe<AssetFilters>;
  group: AssetGroup;
  computing?: InputMaybe<WealthFilter>;
}>;

export type AssetTypeWealthQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    id: string;
    assets: {
      __typename?: "AssetConnection";
      totalCount: number;
      edges: Array<{
        __typename?: "AssetEdge";
        node: {
          __typename?: "CustomerAsset";
          id: string;
          name: string;
          valuation?: any | null;
          accountNumber?: string | null;
          sri?: number | null;
          customer?: {
            __typename?: "Customer";
            id: string;
            name: string;
          } | null;
        };
      }>;
    };
  } | null;
};

export type ExportAssetsMutationVariables = Exact<{
  companyID: Scalars["ID"];
  group: AssetGroup;
  filters?: InputMaybe<AssetFilters>;
  computing?: InputMaybe<WealthFilter>;
}>;

export type ExportAssetsMutation = {
  __typename?: "Mutation";
  url?: string | null;
};

export type SubWealthQueryVariables = Exact<{
  company: Scalars["ID"];
  start?: InputMaybe<Scalars["DateTime"]>;
  end?: InputMaybe<Scalars["DateTime"]>;
  limit: Scalars["Int"];
  computing?: InputMaybe<WealthFilter>;
}>;

export type SubWealthQuery = {
  __typename?: "Query";
  assetsTypes?: Array<{
    __typename?: "CompanyWealth";
    name: AssetGroup;
    amount: any;
    performance?: {
      __typename?: "Performance";
      gain?: any | null;
      evolution?: number | null;
    } | null;
    assetsUnderManagement?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      valuation?: any | null;
      customer?: { __typename?: "Customer"; id: string; name: string } | null;
    }> | null;
  }> | null;
};

export type HomeQueryVariables = Exact<{
  companyID: Scalars["ID"];
  input?: InputMaybe<CustomersInput>;
  campaignLimit?: InputMaybe<Scalars["Int"]>;
  projectRange: TimeRange;
  taskFilter?: InputMaybe<CompanyTaskFilter>;
  projectValidated?: InputMaybe<Scalars["Boolean"]>;
  projectLimit?: InputMaybe<Scalars["Int"]>;
}>;

export type HomeQuery = {
  __typename?: "Query";
  liquidity?: any | null;
  listCompanyTask?: {
    __typename?: "TasksCompany";
    lateCount: number;
    edges: Array<{
      __typename?: "Task";
      id: string;
      title?: string | null;
      category?: string | null;
      content?: string | null;
      updated: any;
      schedule: any;
      created: any;
      completed?: any | null;
      entityRelatedId?: string | null;
      entityRelatedType?: EntityRelatedType | null;
      customer?: { __typename?: "Customer"; id: string; name: string } | null;
      company: { __typename?: "Company"; id: string; name: string };
      assigned_manager?: {
        __typename?: "Manager";
        id: string;
        name?: string | null;
      } | null;
    }>;
  } | null;
  projectCompanyList?: Array<{
    __typename?: "Project";
    id: string;
    created: any;
    validated?: any | null;
    archived?: any | null;
    name?: string | null;
    type: ProjectType;
    metadata: any;
    customer: { __typename?: "Customer"; id: string; name: string };
  }> | null;
  company?: {
    __typename?: "Company";
    id: string;
    customerList: {
      __typename?: "CustomerConnection";
      totalCount: number;
      edges: Array<{
        __typename?: "CustomerEdge";
        node: {
          __typename?: "Customer";
          id: string;
          name: string;
          firstName?: string | null;
          lastName?: string | null;
          email?: string | null;
          type?: CustomerType | null;
          wealth: any;
          underManagement: any;
        };
      }>;
    };
  } | null;
  customersCompliance: Array<{
    __typename?: "CompanyCompliance";
    category: { __typename?: "DocumentCategory"; key: string; name: string };
    levels: {
      __typename?: "Compliance";
      valid: number;
      unvalid: number;
      waiting: number;
    };
  }>;
  campaigns?: Array<{ __typename?: "Campaign"; name: string }> | null;
  mostOccuringAssetType?: {
    __typename?: "AssetStats";
    group: AssetGroup;
    count: number;
  } | null;
};

export type NotificationListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filter?: InputMaybe<NotificationFilter>;
}>;

export type NotificationListQuery = {
  __typename?: "Query";
  notificationList?: Array<{
    __typename?: "Notification";
    id: string;
    type: NotificationType;
    data?: NotificationData | null;
    updated: any;
    company: { __typename?: "Company"; id: string; name: string };
  }> | null;
};

export type NotificationListByTypeQueryVariables = Exact<{
  companyID: Scalars["ID"];
  filter?: InputMaybe<NotificationFilter>;
}>;

export type NotificationListByTypeQuery = {
  __typename?: "Query";
  notificationListByType?: Array<{
    __typename?: "NotificationByType";
    type: NotificationType;
    count: number;
    read: number;
    notifications?: Array<{
      __typename?: "Notification";
      id: string;
      type: NotificationType;
      data?: NotificationData | null;
      read?: any | null;
      created: any;
    }> | null;
  }> | null;
};

export type NotificationReadMutationVariables = Exact<{
  companyID: Scalars["ID"];
  id: Scalars["ID"];
}>;

export type NotificationReadMutation = {
  __typename?: "Mutation";
  notificationRead?: { __typename?: "Notification"; id: string } | null;
};

export type GetAggregationListQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type GetAggregationListQuery = {
  __typename?: "Query";
  connectionList?: Array<{
    __typename?: "Connection";
    id: string;
    state: ConnectionState;
    updated: any;
    identifier?: string | null;
    manager: { __typename?: "Manager"; id: string; name?: string | null };
    connector: {
      __typename?: "Connector";
      key: any;
      name: string;
      logo: any;
      provider: ConnectorProvider;
    };
  }> | null;
};

export type ParentConnectionsHasInvalidCredsQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ParentConnectionsHasInvalidCredsQuery = {
  __typename?: "Query";
  parentCompanyConnectionsHasInvalidCreds?: boolean | null;
};

export type ConnectionsHasInvalidCredsQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ConnectionsHasInvalidCredsQuery = {
  __typename?: "Query";
  connectionsHasInvalidCreds?: boolean | null;
};

export type DeleteConnectionMutationVariables = Exact<{
  connectionID: Scalars["ID"];
}>;

export type DeleteConnectionMutation = {
  __typename?: "Mutation";
  deleteConnection?: boolean | null;
};

export type ParentCompanyManagerDataQueryVariables = Exact<{
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
}>;

export type ParentCompanyManagerDataQuery = {
  __typename?: "Query";
  parentCompanyManagerData?: {
    __typename?: "ParentCompanyManagerData";
    name: string;
    email: string;
    claims?: Array<ManagerClaims> | null;
  } | null;
};

export type ManagerDataQueryVariables = Exact<{
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
}>;

export type ManagerDataQuery = {
  __typename?: "Query";
  managerData?: {
    __typename?: "ManagerData";
    name: string;
    email: string;
    claims?: Array<ManagerClaims> | null;
  } | null;
};

export type ParentCompanyManagerUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
  input: ManagerDataInput;
  claims?: InputMaybe<Array<ManagerClaims> | ManagerClaims>;
}>;

export type ParentCompanyManagerUpdateMutation = {
  __typename?: "Mutation";
  parentCompanyManagerUpdate?: { __typename?: "Manager"; id: string } | null;
};

export type ManagerUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
  input: ManagerDataInput;
  claims?: InputMaybe<Array<ManagerClaims> | ManagerClaims>;
}>;

export type ManagerUpdateMutation = {
  __typename?: "Mutation";
  managerUpdate?: { __typename?: "Manager"; id: string } | null;
};

export type ParentCompanyGeneralFormQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ParentCompanyGeneralFormQuery = {
  __typename?: "Query";
  parentCompanyInfos: {
    __typename?: "Company";
    general?: CompanyGeneralForm | null;
    logo?: any | null;
  };
};

export type CompanyGeneralFormQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CompanyGeneralFormQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    general?: CompanyGeneralForm | null;
    logo?: any | null;
  } | null;
};

export type ParentCompanyGeneralFormUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  generalInput: Scalars["CompanyGeneralForm"];
}>;

export type ParentCompanyGeneralFormUpdateMutation = {
  __typename?: "Mutation";
  updated?: {
    __typename?: "Company";
    id: string;
    general?: CompanyGeneralForm | null;
  } | null;
};

export type CompanyGeneralFormUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  generalInput: Scalars["CompanyGeneralForm"];
}>;

export type CompanyGeneralFormUpdateMutation = {
  __typename?: "Mutation";
  updated?: {
    __typename?: "Company";
    id: string;
    general?: CompanyGeneralForm | null;
  } | null;
};

export type ManagerListQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ManagerListQuery = {
  __typename?: "Query";
  companyManagersStats?: Array<{
    __typename?: "ManagerStats";
    id: string;
    name?: string | null;
    email: string;
    claims?: Array<ManagerClaims> | null;
    nbClients: number;
    nbContracts: number;
    lastActive?: any | null;
    providerCode?: string | null;
  }> | null;
};

export type CustomerReferenceAccessListQueryVariables = Exact<{
  companyID: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type CustomerReferenceAccessListQuery = {
  __typename?: "Query";
  customerReferenceAccessList?: Array<{
    __typename?: "ReferenceAccess";
    primary: boolean;
    manager: { __typename?: "Manager"; id: string; name?: string | null };
    customer: {
      __typename?: "Customer";
      id: string;
      name: string;
      email?: string | null;
    };
  }> | null;
};

export type ManagerCreationMutationVariables = Exact<{
  companyID: Scalars["ID"];
  input: ManagerCreation;
  claims?: InputMaybe<Array<ManagerClaims> | ManagerClaims>;
}>;

export type ManagerCreationMutation = {
  __typename?: "Mutation";
  managerCreation?: { __typename?: "Manager"; id: string } | null;
};

export type ManagerDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
  managerID: Array<Scalars["ID"]> | Scalars["ID"];
}>;

export type ManagerDeletionMutation = {
  __typename?: "Mutation";
  managerDeletion: boolean;
};

export type UpdateManagerProviderCodeMutationVariables = Exact<{
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
  input: Scalars["String"];
}>;

export type UpdateManagerProviderCodeMutation = {
  __typename?: "Mutation";
  updateManagerProviderCode?: {
    __typename?: "Manager";
    providerCode?: string | null;
  } | null;
};

export type ParentCompanyIntermediationFormQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ParentCompanyIntermediationFormQuery = {
  __typename?: "Query";
  parentCompanyInfos: {
    __typename?: "Company";
    intermediation?: CompanyIntermediationForm | null;
  };
};

export type CompanyIntermediationFormQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CompanyIntermediationFormQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    intermediation?: CompanyIntermediationForm | null;
  } | null;
};

export type ParentCompanyIntermediationFormUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  intermediationInput: Scalars["CompanyIntermediationForm"];
}>;

export type ParentCompanyIntermediationFormUpdateMutation = {
  __typename?: "Mutation";
  updated?: {
    __typename?: "Company";
    id: string;
    intermediation?: CompanyIntermediationForm | null;
  } | null;
};

export type CompanyIntermediationFormUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  intermediationInput: Scalars["CompanyIntermediationForm"];
}>;

export type CompanyIntermediationFormUpdateMutation = {
  __typename?: "Mutation";
  updated?: {
    __typename?: "Company";
    id: string;
    intermediation?: CompanyIntermediationForm | null;
  } | null;
};

export type ParentCompanyLegalFormQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type ParentCompanyLegalFormQuery = {
  __typename?: "Query";
  parentCompanyInfos: {
    __typename?: "Company";
    legal?: CompanyLegalForm | null;
  };
};

export type CompanyLegalFormQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CompanyLegalFormQuery = {
  __typename?: "Query";
  company?: { __typename?: "Company"; legal?: CompanyLegalForm | null } | null;
};

export type ParentCompanyLegalFormUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  legalInput: Scalars["CompanyLegalForm"];
}>;

export type ParentCompanyLegalFormUpdateMutation = {
  __typename?: "Mutation";
  updated?: {
    __typename?: "Company";
    id: string;
    legal?: CompanyLegalForm | null;
  } | null;
};

export type CompanyLegalFormUpdateMutationVariables = Exact<{
  companyID: Scalars["ID"];
  legalInput: Scalars["CompanyLegalForm"];
}>;

export type CompanyLegalFormUpdateMutation = {
  __typename?: "Mutation";
  updated?: {
    __typename?: "Company";
    id: string;
    legal?: CompanyLegalForm | null;
  } | null;
};

export type CompanySettingsQueryVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CompanySettingsQuery = {
  __typename?: "Query";
  company?: {
    __typename?: "Company";
    logo?: any | null;
    managerList?: Array<{
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
      phone?: string | null;
    }> | null;
  } | null;
  authenticated?: {
    __typename?: "Authentication";
    id: string;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
      companyList?: Array<{
        __typename?: "Company";
        id: string;
        name: string;
        logo?: any | null;
      } | null> | null;
    } | null;
  } | null;
  companyManagersStats?: Array<{
    __typename?: "ManagerStats";
    id: string;
    name?: string | null;
    email: string;
    claims?: Array<ManagerClaims> | null;
    nbClients: number;
    nbContracts: number;
    lastActive?: any | null;
  }> | null;
};

export type CompanyDeletionMutationVariables = Exact<{
  companyID: Scalars["ID"];
}>;

export type CompanyDeletionMutation = {
  __typename?: "Mutation";
  companyDeletion?: boolean | null;
};

export type ParentCompanySubsidiariesQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ParentCompanySubsidiariesQuery = {
  __typename?: "Query";
  parentCompany: {
    __typename?: "ParentCompany";
    companies?: Array<{
      __typename?: "Company";
      id: string;
      name: string;
    }> | null;
  };
};

export type ParentCompanyWealthQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ParentCompanyWealthQuery = {
  __typename?: "Query";
  parentCompany: { __typename?: "ParentCompany"; wealth: any };
};

export type ParentCompanyAdminsQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ParentCompanyAdminsQuery = {
  __typename?: "Query";
  parentCompany: {
    __typename?: "ParentCompany";
    admins?: Array<{
      __typename?: "Manager";
      id: string;
      email: string;
      name?: string | null;
    }> | null;
  };
};

export type ParentCompanyHomeQueryVariables = Exact<{
  id: Scalars["ID"];
  filter?: InputMaybe<NotificationFilter>;
  taskFilter?: InputMaybe<CompanyTaskFilter>;
}>;

export type ParentCompanyHomeQuery = {
  __typename?: "Query";
  parentCompany: {
    __typename?: "ParentCompany";
    wealth: any;
    liquidity: any;
    managedWealth: any;
    tasks?: {
      __typename?: "TasksCompany";
      lateCount: number;
      edges: Array<{
        __typename?: "Task";
        id: string;
        title?: string | null;
        category?: string | null;
        content?: string | null;
        updated: any;
        schedule: any;
        created: any;
        completed?: any | null;
        customer?: { __typename?: "Customer"; id: string; name: string } | null;
        company: { __typename?: "Company"; id: string; name: string };
        manager?: {
          __typename?: "Manager";
          id: string;
          name?: string | null;
        } | null;
      }>;
    } | null;
    notifications?: Array<{
      __typename?: "Notification";
      id: string;
      type: NotificationType;
      data?: NotificationData | null;
      updated: any;
      company: { __typename?: "Company"; id: string; name: string };
    }> | null;
    mostOccuringAssetType?: {
      __typename?: "AssetStats";
      group: AssetGroup;
      count: number;
    } | null;
    stats: { __typename?: "ParentCompanyStats"; customersCount: number };
  };
};

export type ParentCompanyHomeCustomersQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ParentCompanyHomeCustomersQuery = {
  __typename?: "Query";
  parentCompany: {
    __typename?: "ParentCompany";
    customers: {
      __typename?: "ParentCompanyCustomerConnection";
      edges: Array<{
        __typename?: "ParentCompanyCustomerNode";
        node: {
          __typename?: "ParentCompanyCustomer";
          wealth: any;
          underManagement: any;
          customer: {
            __typename?: "Customer";
            id: string;
            name: string;
            email?: string | null;
            type?: CustomerType | null;
          };
          company?: { __typename?: "Company"; id: string } | null;
        };
      }>;
    };
  };
};

export type ParentCompanyClientsQueryVariables = Exact<{
  id: Scalars["ID"];
  input?: InputMaybe<ParentCompanyCustomersInput>;
}>;

export type ParentCompanyClientsQuery = {
  __typename?: "Query";
  parentCompany: {
    __typename?: "ParentCompany";
    customers: {
      __typename?: "ParentCompanyCustomerConnection";
      totalCount: number;
      edges: Array<{
        __typename?: "ParentCompanyCustomerNode";
        node: {
          __typename?: "ParentCompanyCustomer";
          wealth: any;
          customer: {
            __typename?: "Customer";
            id: string;
            name: string;
            firstName?: string | null;
            lastName?: string | null;
            email?: string | null;
          };
          company?: { __typename?: "Company"; id: string; name: string } | null;
          manager?: {
            __typename?: "Manager";
            id: string;
            name?: string | null;
          } | null;
        };
      }>;
    };
  };
};

export type ParentCompanyManagersQueryVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ParentCompanyManagersQuery = {
  __typename?: "Query";
  parentCompany: {
    __typename?: "ParentCompany";
    companies?: Array<{
      __typename?: "Company";
      id: string;
      name: string;
    }> | null;
    managers?: Array<{
      __typename?: "ParentCompanyManager";
      manager: { __typename?: "Manager"; id: string; name?: string | null };
      company: { __typename?: "Company"; id: string };
    }> | null;
  };
};

export type ExportCustomersParentCompanyMutationVariables = Exact<{
  id: Scalars["ID"];
}>;

export type ExportCustomersParentCompanyMutation = {
  __typename?: "Mutation";
  url?: string | null;
};

export type ParentCompanyCustomerQueryVariables = Exact<{
  id: Scalars["ID"];
  customerID: Scalars["ID"];
}>;

export type ParentCompanyCustomerQuery = {
  __typename?: "Query";
  parentCompany: {
    __typename?: "ParentCompany";
    customer?: {
      __typename?: "ParentCompanyCustomer";
      assets?: Array<{
        __typename?: "CustomerAsset";
        name: string;
        group: AssetGroup;
        accountNumber?: string | null;
        activity?: any | null;
        connection?: {
          __typename?: "Connection";
          connector: { __typename?: "Connector"; key: any; name: string };
        } | null;
      }> | null;
    } | null;
  };
};

export type AssignCustomersToCompanyMutationVariables = Exact<{
  customersID: Array<Scalars["ID"]> | Scalars["ID"];
  parentCompanyID: Scalars["ID"];
  companyID: Scalars["ID"];
  managerID: Scalars["ID"];
}>;

export type AssignCustomersToCompanyMutation = {
  __typename?: "Mutation";
  assignCustomersToCompany?: boolean | null;
};

export type LoginMutationVariables = Exact<{
  token: Scalars["String"];
}>;

export type LoginMutation = {
  __typename?: "Mutation";
  authenticationFirebase?: {
    __typename?: "Authentication";
    id: string;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      companyList?: Array<{
        __typename?: "Company";
        id: string;
        name: string;
      } | null> | null;
      parentCompany?: { __typename?: "ParentCompany"; id: string } | null;
    } | null;
  } | null;
};

export type InviteManagerMutationVariables = Exact<{
  input: ManagerCreation;
  company: CompanyCreation;
}>;

export type InviteManagerMutation = {
  __typename?: "Mutation";
  inviteManager?: { __typename?: "Manager"; id: string } | null;
};

export type SignUpInviteMutationVariables = Exact<{
  token: Scalars["String"];
  id: Scalars["ID"];
}>;

export type SignUpInviteMutation = {
  __typename?: "Mutation";
  authenticationFirebase?: {
    __typename?: "Authentication";
    id: string;
    provider: string;
    manager?: {
      __typename?: "Manager";
      id: string;
      name?: string | null;
      email: string;
    } | null;
  } | null;
  managerInviteAccept?: { __typename?: "ManagerInvite"; id: string } | null;
};

export type SubscribeToNewsletterMutationVariables = Exact<{
  input: ProfileUpdate;
}>;

export type SubscribeToNewsletterMutation = {
  __typename?: "Mutation";
  profileUpdate?: { __typename?: "Manager"; id: string } | null;
};

export type GetPubliFormFillingQueryVariables = Exact<{
  token: Scalars["String"];
}>;

export type GetPubliFormFillingQuery = {
  __typename?: "Query";
  existingFormData?: any | null;
};

export type GetExternalInvestorProfileFormQueryVariables = Exact<{
  customerID: Scalars["ID"];
}>;

export type GetExternalInvestorProfileFormQuery = {
  __typename?: "Query";
  externalInvestorProfileForm?: any | null;
};

export type SubmitExternalInvestorProfileFormMutationVariables = Exact<{
  input: Scalars["PublicFormSubmit"];
  customerID: Scalars["ID"];
}>;

export type SubmitExternalInvestorProfileFormMutation = {
  __typename?: "Mutation";
  externalInvestorProfileForm?: any | null;
};

export type SubmitPubliFormFillingMutationVariables = Exact<{
  input: Scalars["PublicFormSubmit"];
  token: Scalars["String"];
  isSyncing?: InputMaybe<Scalars["Boolean"]>;
}>;

export type SubmitPubliFormFillingMutation = {
  __typename?: "Mutation";
  formFilling?: any | null;
};

export type PublicCustomerWealthQueryVariables = Exact<{
  token: Scalars["String"];
  financialTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  passiveTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  nonFinancialTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  benefitsTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  repartitionTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  othersTypes?: InputMaybe<Array<AssetGroup> | AssetGroup>;
  computing?: InputMaybe<WealthFilter>;
}>;

export type PublicCustomerWealthQuery = {
  __typename?: "Query";
  financialWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      valuation?: any | null;
      underManagement: boolean;
      isManual: boolean;
      sri?: number | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  nonfinancialWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      valuation?: any | null;
      underManagement: boolean;
      isManual: boolean;
      sri?: number | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  othersWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      valuation?: any | null;
      underManagement: boolean;
      isManual: boolean;
      sri?: number | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  passiveWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      underManagement: boolean;
      isManual: boolean;
      valuation?: any | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  benefitsWealth?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
    data?: Array<{
      __typename?: "CustomerAsset";
      id: string;
      name: string;
      group: AssetGroup;
      categoryName?: string | null;
      underManagement: boolean;
      isManual: boolean;
      valuation?: any | null;
      metadata?: any | null;
      owners?: Array<{
        __typename?: "AssetOwner";
        ownership?: number | null;
        entity?: { __typename?: "Customer"; id: string } | null;
      }> | null;
    }> | null;
  }> | null;
  repartition?: Array<{
    __typename?: "CustomerWealth";
    name: AssetGroup;
    amount: any;
  }> | null;
};

export const AuthenticatedDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Authenticated" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticated" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                      { kind: "Field", name: { kind: "Name", value: "phone" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "disabledFeatures" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "companyList" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "logo" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "parentCompanyId" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "isParentCompany" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "parentCompany" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "logo" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<AuthenticatedQuery, AuthenticatedQueryVariables>;
export const ManagerClaimsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ManagerClaims" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticated" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "claims" },
                        arguments: [
                          {
                            kind: "Argument",
                            name: { kind: "Name", value: "companyID" },
                            value: {
                              kind: "Variable",
                              name: { kind: "Name", value: "companyID" },
                            },
                          },
                        ],
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ManagerClaimsQuery, ManagerClaimsQueryVariables>;
export const ParentCompanyDocumentTemplateListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyDocumentTemplateList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "available" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompanyDocumentTemplateList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                { kind: "Field", name: { kind: "Name", value: "creator" } },
                { kind: "Field", name: { kind: "Name", value: "status" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "extension" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "properties" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "type" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "productType" } },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "favorites" },
            name: { kind: "Name", value: "parentCompanyDocumentTemplateList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "available" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "available" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyDocumentTemplateListQuery,
  ParentCompanyDocumentTemplateListQueryVariables
>;
export const DocumentTemplateListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "DocumentTemplateList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "available" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentTemplateList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                { kind: "Field", name: { kind: "Name", value: "creator" } },
                { kind: "Field", name: { kind: "Name", value: "status" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "extension" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "properties" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "type" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "productType" } },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "favorites" },
            name: { kind: "Name", value: "documentTemplateList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "available" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "available" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentTemplateListQuery,
  DocumentTemplateListQueryVariables
>;
export const ParentCompanyAvailableTemplateUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyAvailableTemplateUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "IDs" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "parentCompanyAvailableTemplateUpdate",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "IDs" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "IDs" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyAvailableTemplateUpdateMutation,
  ParentCompanyAvailableTemplateUpdateMutationVariables
>;
export const AvailableTemplateUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AvailableTemplateUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "IDs" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "availableTemplateUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "IDs" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "IDs" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AvailableTemplateUpdateMutation,
  AvailableTemplateUpdateMutationVariables
>;
export const ParentCompanyDocumentTemplateCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyDocumentTemplateCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentTemplateCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "parentCompanyDocumentTemplateCreation",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyDocumentTemplateCreationMutation,
  ParentCompanyDocumentTemplateCreationMutationVariables
>;
export const DocumentTemplateCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentTemplateCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentTemplateCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentTemplateCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentTemplateCreationMutation,
  DocumentTemplateCreationMutationVariables
>;
export const ParentDocumentCustomTemplateCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentDocumentCustomTemplateCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentTemplateCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "parentCompanyDocumentCustomTemplateCreation",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentDocumentCustomTemplateCreationMutation,
  ParentDocumentCustomTemplateCreationMutationVariables
>;
export const DocumentCustomTemplateCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentCustomTemplateCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentTemplateCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCustomTemplateCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentCustomTemplateCreationMutation,
  DocumentCustomTemplateCreationMutationVariables
>;
export const ParentCompanyDocumentTemplateUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyDocumentTemplateUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentTemplateUpdate" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "parentCompanyDocumentTemplateUpdate",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyDocumentTemplateUpdateMutation,
  ParentCompanyDocumentTemplateUpdateMutationVariables
>;
export const DocumentTemplateUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentTemplateUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentTemplateUpdate" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentTemplateUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentTemplateUpdateMutation,
  DocumentTemplateUpdateMutationVariables
>;
export const ParentCompanyDocumentTemplateDeleteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyDocumentTemplateDelete" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "parentCompanyDocumentTemplateDeletion",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyDocumentTemplateDeleteMutation,
  ParentCompanyDocumentTemplateDeleteMutationVariables
>;
export const DocumentTemplateDeleteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentTemplateDelete" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentTemplateDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentTemplateDeleteMutation,
  DocumentTemplateDeleteMutationVariables
>;
export const MutateParentCompanyDocumentTemplateDeletionMultipleDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: {
        kind: "Name",
        value: "mutateParentCompanyDocumentTemplateDeletionMultiple",
      },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "parentCompanyDocumentTemplateDeletionMultiple",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "ids" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "ids" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  MutateParentCompanyDocumentTemplateDeletionMultipleMutation,
  MutateParentCompanyDocumentTemplateDeletionMultipleMutationVariables
>;
export const MutateDocumentTemplateDeletionMultipleDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "mutateDocumentTemplateDeletionMultiple" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentTemplateDeletionMultiple" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "ids" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "ids" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  MutateDocumentTemplateDeletionMultipleMutation,
  MutateDocumentTemplateDeletionMultipleMutationVariables
>;
export const AvailableIntegrationsListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "AvailableIntegrationsList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "list" },
            name: { kind: "Name", value: "availableIntegrations" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AvailableIntegrationsListQuery,
  AvailableIntegrationsListQueryVariables
>;
export const ParentCompanyInstalledIntegrationsListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyInstalledIntegrationsList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "list" },
            name: {
              kind: "Name",
              value: "parentCompanyIntegrationInstalledList",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "added" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "access" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "configuration" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyInstalledIntegrationsListQuery,
  ParentCompanyInstalledIntegrationsListQueryVariables
>;
export const InstalledIntegrationsListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InstalledIntegrationsList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "list" },
            name: { kind: "Name", value: "integrationInstalledList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "added" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "access" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "configuration" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstalledIntegrationsListQuery,
  InstalledIntegrationsListQueryVariables
>;
export const IntegrationDetailsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "IntegrationDetails" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "IntegrationKey" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "integration" },
            name: { kind: "Name", value: "integrationDetails" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "added" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "access" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "configuration" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  IntegrationDetailsQuery,
  IntegrationDetailsQueryVariables
>;
export const ParentCompanyIntegrationInstallationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyIntegrationInstallation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "IntegrationKey" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "installed" },
            name: {
              kind: "Name",
              value: "parentCompanyIntegrationInstallation",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyIntegrationInstallationMutation,
  ParentCompanyIntegrationInstallationMutationVariables
>;
export const IntegrationInstallationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "IntegrationInstallation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "IntegrationKey" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "installed" },
            name: { kind: "Name", value: "integrationInstallation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  IntegrationInstallationMutation,
  IntegrationInstallationMutationVariables
>;
export const ParentCompanyIntegrationDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyIntegrationDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "IntegrationKey" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "uninstalled" },
            name: { kind: "Name", value: "parentCompanyIntegrationDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyIntegrationDeletionMutation,
  ParentCompanyIntegrationDeletionMutationVariables
>;
export const IntegrationDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "IntegrationDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "IntegrationKey" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "uninstalled" },
            name: { kind: "Name", value: "integrationDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  IntegrationDeletionMutation,
  IntegrationDeletionMutationVariables
>;
export const IntegrationAccessConfigurationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "IntegrationAccessConfiguration" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "IntegrationKey" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "access" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "IntegrationAccess" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "configured" },
            name: { kind: "Name", value: "integrationAccessConfiguration" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "access" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "access" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
                { kind: "Field", name: { kind: "Name", value: "access" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  IntegrationAccessConfigurationMutation,
  IntegrationAccessConfigurationMutationVariables
>;
export const MigratorDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Migrator" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "migratorID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "migrator" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "migratorID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "migratorID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<MigratorQuery, MigratorQueryVariables>;
export const MigratorListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "MigratorList" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "migratorList" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<MigratorListQuery, MigratorListQueryVariables>;
export const ParentSynchronizeMigratorDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentSynchronizeMigrator" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "migratorID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "metadata" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "MigrationMetadata" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentSynchronizeMigrator" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "migratorID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "migratorID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "metadata" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "metadata" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentSynchronizeMigratorMutation,
  ParentSynchronizeMigratorMutationVariables
>;
export const SynchronizeMigratorDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SynchronizeMigrator" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "migratorID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "metadata" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "MigrationMetadata" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "synchronizeMigrator" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "migratorID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "migratorID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "metadata" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "metadata" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SynchronizeMigratorMutation,
  SynchronizeMigratorMutationVariables
>;
export const CompanyTeamListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyTeamList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "list" },
            name: { kind: "Name", value: "teamsList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "statistics" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "subordinate" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "contracts" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyTeamListQuery,
  CompanyTeamListQueryVariables
>;
export const CompanyManagersListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyManagersList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "list" },
                  name: { kind: "Name", value: "managerList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyManagersListQuery,
  CompanyManagersListQueryVariables
>;
export const CompanyTeamDetailsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyTeamDetails" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "team" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "statistics" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customers" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "contracts" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "leaderList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "subordinateList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyTeamDetailsQuery,
  CompanyTeamDetailsQueryVariables
>;
export const TeamCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "TeamCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TeamValues" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "created" },
            name: { kind: "Name", value: "teamCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TeamCreationMutation,
  TeamCreationMutationVariables
>;
export const TeamUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "TeamUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TeamValues" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "teamUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<TeamUpdateMutation, TeamUpdateMutationVariables>;
export const TeamDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "TeamDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "deleted" },
            name: { kind: "Name", value: "teamDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TeamDeletionMutation,
  TeamDeletionMutationVariables
>;
export const TeamMemberAddDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "TeamMemberAdd" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "teamName" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "values" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "TeamMember" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "added" },
            name: { kind: "Name", value: "teamMemberAdd" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "teamName" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "teamName" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "values" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "values" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TeamMemberAddMutation,
  TeamMemberAddMutationVariables
>;
export const TeamMemberRemoveDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "TeamMemberRemove" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "teamName" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "values" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "removed" },
            name: { kind: "Name", value: "teamMemberRemove" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "teamName" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "teamName" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "values" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "values" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TeamMemberRemoveMutation,
  TeamMemberRemoveMutationVariables
>;
export const InstrumentListingDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InstrumentListing" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "InstrumentFilters" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "pagination" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Pagination" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentListing" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "pagination" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "pagination" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                { kind: "Field", name: { kind: "Name", value: "totalPages" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "instruments" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      { kind: "Field", name: { kind: "Name", value: "label" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "subcategory" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managementCompany" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "riskIndicator" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "dic" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "prospectus" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentListingQuery,
  InstrumentListingQueryVariables
>;
export const InstrumentFiltersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InstrumentFilters" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "AssetGroup" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentFilters" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "categories" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "group" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "group" },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "subcategories" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "group" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "group" },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "riskIndicators" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "group" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "group" },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managementCompanies" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "group" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "group" },
                      },
                    },
                  ],
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentFiltersQuery,
  InstrumentFiltersQueryVariables
>;
export const InstrumentSriUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "InstrumentSriUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "riskIndicator" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentSriUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "riskIndicator" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "riskIndicator" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "code" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentSriUpdateMutation,
  InstrumentSriUpdateMutationVariables
>;
export const UpdateCustomerAccessDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UpdateCustomerAccess" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "update" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerUpdate" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "inviteCreation" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerInviteCreation" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "sendInvite" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "update" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "update" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "plan" } },
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "invite" },
            name: { kind: "Name", value: "inviteCustomer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "inviteCreation" },
                },
              },
            ],
            directives: [
              {
                kind: "Directive",
                name: { kind: "Name", value: "include" },
                arguments: [
                  {
                    kind: "Argument",
                    name: { kind: "Name", value: "if" },
                    value: {
                      kind: "Variable",
                      name: { kind: "Name", value: "sendInvite" },
                    },
                  },
                ],
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "code" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateCustomerAccessMutation,
  UpdateCustomerAccessMutationVariables
>;
export const ReportingCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ReportingCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "documentTypes" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "String" },
                },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "period" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "contains" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "String" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetsList" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "String" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "reportingCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "documentTypes" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "documentTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "period" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "period" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "contains" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "contains" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetsList" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetsList" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ReportingCreationMutation,
  ReportingCreationMutationVariables
>;
export const ReportingCustomerWealthAssetsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ReportingCustomerWealthAssets" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "groups" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "groups" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ReportingCustomerWealthAssetsQuery,
  ReportingCustomerWealthAssetsQueryVariables
>;
export const ManagerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Manager" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticated" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                      { kind: "Field", name: { kind: "Name", value: "phone" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "companyList" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "logo" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "claims" },
                        arguments: [
                          {
                            kind: "Argument",
                            name: { kind: "Name", value: "companyID" },
                            value: {
                              kind: "Variable",
                              name: { kind: "Name", value: "companyID" },
                            },
                          },
                        ],
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ManagerQuery, ManagerQueryVariables>;
export const ManagerInvitePendingListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ManagerInvitePendingList" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "managerInvitePendingList" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "company" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ManagerInvitePendingListQuery,
  ManagerInvitePendingListQueryVariables
>;
export const ProfileUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ProfileUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ProfileUpdate" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "profileUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProfileUpdateMutation,
  ProfileUpdateMutationVariables
>;
export const ManagerInviteAcceptDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ManagerInviteAccept" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "managerInviteAccept" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ManagerInviteAcceptMutation,
  ManagerInviteAcceptMutationVariables
>;
export const ManagerInviteRejectDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ManagerInviteReject" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "managerInviteReject" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ManagerInviteRejectMutation,
  ManagerInviteRejectMutationVariables
>;
export const LayoutDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Layout" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticated" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "claims" },
                        arguments: [
                          {
                            kind: "Argument",
                            name: { kind: "Name", value: "companyID" },
                            value: {
                              kind: "Variable",
                              name: { kind: "Name", value: "companyID" },
                            },
                          },
                        ],
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "categories" },
            name: { kind: "Name", value: "companyConformityCategories" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerVisibility" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LayoutQuery, LayoutQueryVariables>;
export const WealthAndPerformanceDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "WealthAndPerformance" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  WealthAndPerformanceQuery,
  WealthAndPerformanceQueryVariables
>;
export const LayoutSubWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "LayoutSubWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "customersAssetsTypes" },
            name: { kind: "Name", value: "companyWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: { kind: "EnumValue", value: "customers" },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "underManagementsAssetsTypes" },
            name: { kind: "Name", value: "companyWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: { kind: "EnumValue", value: "under_managements" },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  LayoutSubWealthQuery,
  LayoutSubWealthQueryVariables
>;
export const LayoutCustomerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "LayoutCustomer" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticated" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "claims" },
                        arguments: [
                          {
                            kind: "Argument",
                            name: { kind: "Name", value: "companyID" },
                            value: {
                              kind: "Variable",
                              name: { kind: "Name", value: "companyID" },
                            },
                          },
                        ],
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "firstName" } },
                { kind: "Field", name: { kind: "Name", value: "lastName" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                { kind: "Field", name: { kind: "Name", value: "plan" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "hasB2CAccount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "pendingInvitations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "updated" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "details" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "general" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "valuation" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LayoutCustomerQuery, LayoutCustomerQueryVariables>;
export const CompanyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Company" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "connectionList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CompanyQuery, CompanyQueryVariables>;
export const LogoutDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "Logout" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "logoutAuthentication" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LogoutMutation, LogoutMutationVariables>;
export const InviteCustomerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "InviteCustomer" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerInviteCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "inviteCustomer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InviteCustomerMutation,
  InviteCustomerMutationVariables
>;
export const CreateCustomerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateCustomer" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "customer" },
            name: { kind: "Name", value: "customerCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateCustomerMutation,
  CreateCustomerMutationVariables
>;
export const CreateCustomerReferenceDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateCustomerReference" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "CustomerCreation" },
                },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "addCustomerSheet" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "customer" },
            name: { kind: "Name", value: "customerReferenceCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "addCustomerSheet" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "addCustomerSheet" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateCustomerReferenceMutation,
  CreateCustomerReferenceMutationVariables
>;
export const CompanyCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CompanyCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyCreationMutation,
  CompanyCreationMutationVariables
>;
export const ParentCompanyUploadDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyUpload" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "files" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "UploadRequest" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompanyUpload" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "files" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "files" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "files" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyUploadMutation,
  ParentCompanyUploadMutationVariables
>;
export const CompanyUploadDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CompanyUpload" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "files" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "UploadRequest" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyUpload" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "files" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "files" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "files" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyUploadMutation,
  CompanyUploadMutationVariables
>;
export const CustomerCreationMultipleDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerCreationMultiple" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "file" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "invite" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerCreationMultiple" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "file" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "file" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "invite" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "invite" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "delayedUntil" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerCreationMultipleMutation,
  CustomerCreationMultipleMutationVariables
>;
export const NewCustomersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "NewCustomers" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CustomersInput" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerList" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "input" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "input" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "email" },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "phoneNumber",
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "informations",
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "details",
                                          },
                                        },
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "general",
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    alias: {
                                      kind: "Name",
                                      value: "underManagement",
                                    },
                                    name: { kind: "Name", value: "wealth" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "companyID",
                                        },
                                        value: {
                                          kind: "Variable",
                                          name: {
                                            kind: "Name",
                                            value: "companyID",
                                          },
                                        },
                                      },
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "computing",
                                        },
                                        value: {
                                          kind: "EnumValue",
                                          value: "under_managements",
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<NewCustomersQuery, NewCustomersQueryVariables>;
export const NewCustomersCountDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "NewCustomersCount" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CustomersInput" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerList" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "input" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "input" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  NewCustomersCountQuery,
  NewCustomersCountQueryVariables
>;
export const AssetsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Assets" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "AssetFilters" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "AssetGroup" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "list" },
                  name: { kind: "Name", value: "assetsUnderManagement" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "group" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "group" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "filters" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "filters" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "group" },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "categoryName",
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "valuation" },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "accountNumber",
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "openDate" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "metadata" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "customer" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<AssetsQuery, AssetsQueryVariables>;
export const AssetsNumberDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "AssetsNumber" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "AssetGroup" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "AssetFilters" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "list" },
                  name: { kind: "Name", value: "assetsUnderManagement" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "group" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "group" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "filters" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "filters" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<AssetsNumberQuery, AssetsNumberQueryVariables>;
export const NewTransactionsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "NewTransactions" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AccountingAnalyticsFilters" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "pagination" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Pagination" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "list" },
            name: { kind: "Name", value: "accountingTransactionList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "pagination" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "pagination" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "edges" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "node" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "date" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "amount" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entityName" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "assetName" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  NewTransactionsQuery,
  NewTransactionsQueryVariables
>;
export const ProviderStatisticsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ProviderStatistics" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AccountingAnalyticsFilters" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "list" },
            name: { kind: "Name", value: "accountingProviderStatistics" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
                { kind: "Field", name: { kind: "Name", value: "total" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProviderStatisticsQuery,
  ProviderStatisticsQueryVariables
>;
export const AccountingManagersListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "AccountingManagersList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "list" },
                  name: { kind: "Name", value: "managerList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AccountingManagersListQuery,
  AccountingManagersListQueryVariables
>;
export const AssetListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "AssetList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AccountingAnalyticsFilters" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "accountingAssets" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<AssetListQuery, AssetListQueryVariables>;
export const ConnectorDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Connector" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "connectorID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "connector" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "connectorID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "connectorID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
                { kind: "Field", name: { kind: "Name", value: "labels" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ConnectorQuery, ConnectorQueryVariables>;
export const ConnectorListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ConnectorList" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "connectorList" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
                { kind: "Field", name: { kind: "Name", value: "provider" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ConnectorListQuery, ConnectorListQueryVariables>;
export const SynchronizePowensConnectorDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SynchronizePowensConnector" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "connectorID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "synchronizePowensConnector" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "connectorID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "connectorID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SynchronizePowensConnectorMutation,
  SynchronizePowensConnectorMutationVariables
>;
export const SynchronizeConnectorDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SynchronizeConnector" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "connectorID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "metadata" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ConnectionMetadata" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "synchronizeConnector" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "connectorID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "connectorID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "metadata" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "metadata" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "connection" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "state" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "synchronization" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SynchronizeConnectorMutation,
  SynchronizeConnectorMutationVariables
>;
export const ChangeConnectionCredentialsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ChangeConnectionCredentials" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "connectionID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "credentials" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ConnectionMetadata" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "changeConnectionCredentials" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "connectionID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "connectionID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "credentials" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "credentials" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "connection" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "state" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "synchronization" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ChangeConnectionCredentialsMutation,
  ChangeConnectionCredentialsMutationVariables
>;
export const ValidateConnectionOtpDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ValidateConnectionOTP" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "connectionID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "otp" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "validateConnectionOTP" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "connectionID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "connectionID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "otp" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "otp" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ValidateConnectionOtpMutation,
  ValidateConnectionOtpMutationVariables
>;
export const GlobalAddWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "GlobalAddWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "url" },
            name: { kind: "Name", value: "synchronizeAssetUnderManagement" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GlobalAddWealthMutation,
  GlobalAddWealthMutationVariables
>;
export const CampaignsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Campaigns" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "campaignList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "assetGroup" } },
                { kind: "Field", name: { kind: "Name", value: "provider" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customersCount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "totalInvestment" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "contractList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "investment" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customer" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CampaignsQuery, CampaignsQueryVariables>;
export const CampaignsDocumentListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CampaignsDocumentList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "contractID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "contractID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "contractID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
                { kind: "Field", name: { kind: "Name", value: "treatement" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CampaignsDocumentListQuery,
  CampaignsDocumentListQueryVariables
>;
export const CampaignCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CampaignCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CampaignCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "campaignCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CampaignCreationMutation,
  CampaignCreationMutationVariables
>;
export const CampaignModificationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CampaignModification" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "campaignID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "update" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CampaignModification" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "campaignModification" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "campaignID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "campaignID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "update" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "update" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CampaignModificationMutation,
  CampaignModificationMutationVariables
>;
export const CampaignContractModificationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CampaignContractModification" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "contractID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "update" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CampaignContractModification" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "campaignContractModification" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "contractID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "contractID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "update" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "update" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CampaignContractModificationMutation,
  CampaignContractModificationMutationVariables
>;
export const DocumentCustomerListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "DocumentCustomerList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "documentCategory" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DocumentCustomer" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCustomerList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "company" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "documentCategory" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "documentCategory" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "category" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "key" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "edges" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "node" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "expiration" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "signature" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "signed" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "validated" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "digital" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "customer" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "manager" },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "signatories",
                                    },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "customer" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentCustomerListQuery,
  DocumentCustomerListQueryVariables
>;
export const DocumentNotificationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentNotification" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "documentID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "requests" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "NotificationRequest" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "notifyDocumentStatus" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "documentID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "documentID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "requests" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "requests" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentNotificationMutation,
  DocumentNotificationMutationVariables
>;
export const CompanyComplianceDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyCompliance" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customersCompliance" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "company" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "category" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "key" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "levels" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "valid" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "unvalid" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "waiting" },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "globalCompliance" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "valid" } },
                { kind: "Field", name: { kind: "Name", value: "unvalid" } },
                { kind: "Field", name: { kind: "Name", value: "waiting" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyComplianceQuery,
  CompanyComplianceQueryVariables
>;
export const BudgetDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Budget" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "budgetList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "amount" } },
                { kind: "Field", name: { kind: "Name", value: "libelle" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "availableLiquidity" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                  ],
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<BudgetQuery, BudgetQueryVariables>;
export const BudgetCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "BudgetCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "BudgetCreationInput" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "budgetID" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "created" },
            name: { kind: "Name", value: "budgetCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "budgetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "budgetID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "libelle" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  BudgetCreationMutation,
  BudgetCreationMutationVariables
>;
export const BudgetItemDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "BudgetItemDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "budgetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "budgetItemDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "budgetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "budgetID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  BudgetItemDeletionMutation,
  BudgetItemDeletionMutationVariables
>;
export const UpdateLcbDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UpdateLCB" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "LCBForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "updateLCB" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<UpdateLcbMutation, UpdateLcbMutationVariables>;
export const CustomerLcbDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerLcb" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "lcbLab" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CustomerLcbQuery, CustomerLcbQueryVariables>;
export const CustomerConformityObjectivesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerConformityObjectives" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "conformityObjectives" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerConformityObjectivesQuery,
  CustomerConformityObjectivesQueryVariables
>;
export const EnvelopDocumentTemplateListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "EnvelopDocumentTemplateList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "available" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentTemplateList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "available" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "available" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                { kind: "Field", name: { kind: "Name", value: "creator" } },
                { kind: "Field", name: { kind: "Name", value: "productType" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnvelopDocumentTemplateListQuery,
  EnvelopDocumentTemplateListQueryVariables
>;
export const CustomerConformityDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerConformity" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "officialCategories" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "String" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "legalCategories" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "String" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "arbitraryCategories" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "String" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "officialList" },
            name: { kind: "Name", value: "documentList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "categories" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "officialCategories" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "category" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "key" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "treatement" } },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "legalList" },
            name: { kind: "Name", value: "documentList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "categories" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "legalCategories" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "category" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "key" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "treatement" } },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "envelopeList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "categories" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "arbitraryCategories" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "access" } },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
                { kind: "Field", name: { kind: "Name", value: "conformity" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "documentList" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "categories" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "arbitraryCategories" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "key" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "treatement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "expiration" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerConformityQuery,
  CustomerConformityQueryVariables
>;
export const ConformityDocumentDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ConformityDocument" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "document" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ConformityDocumentQuery,
  ConformityDocumentQueryVariables
>;
export const SearchCampaignDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "SearchCampaign" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "text" } },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "searchCampaign" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "text" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "text" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "assetGroup" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SearchCampaignQuery, SearchCampaignQueryVariables>;
export const InvestorProfileDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InvestorProfile" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investorProfile" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "details" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "general" },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "investorProfileForm" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "budgetList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "amount" } },
                { kind: "Field", name: { kind: "Name", value: "libelle" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InvestorProfileQuery,
  InvestorProfileQueryVariables
>;
export const InvestorProfileStatsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InvestorProfileStats" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "investorProfileStats" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "knowledge" } },
                { kind: "Field", name: { kind: "Name", value: "riskProfile" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "nonFinancialSensitivity" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "investorEnvironmentalStats" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "activities" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "negativeImpacts" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "socialObjectives" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "investorProfileForm" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InvestorProfileStatsQuery,
  InvestorProfileStatsQueryVariables
>;
export const TemplateVariablesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "templateVariables" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "projectID" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "templateVariables" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "projectID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "projectID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TemplateVariablesQuery,
  TemplateVariablesQueryVariables
>;
export const CreateFilesFromTemplateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateFilesFromTemplate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "templates" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "FileFromTemplateInput" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createFilesFromTemplate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "templates" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "templates" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                { kind: "Field", name: { kind: "Name", value: "extension" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateFilesFromTemplateMutation,
  CreateFilesFromTemplateMutationVariables
>;
export const CreateFilesFromGedDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateFilesFromGED" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "gedDocumentsID" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "String" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createFilesFromGedDocuments" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "gedDocumentsID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "gedDocumentsID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                { kind: "Field", name: { kind: "Name", value: "extension" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateFilesFromGedMutation,
  CreateFilesFromGedMutationVariables
>;
export const CustomerConformityObjectivesUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerConformityObjectivesUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ConformityObjectives" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "conformityObjectivesUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerConformityObjectivesUpdateMutation,
  CustomerConformityObjectivesUpdateMutationVariables
>;
export const CustomerUploadCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerUploadCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "files" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "UploadRequest" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerUpload" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "files" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "files" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "files" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerUploadCreationMutation,
  CustomerUploadCreationMutationVariables
>;
export const EnvelopeCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "EnvelopeCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "EnvelopeCreation" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "notificationRequests" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "NotificationRequest" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "addParagraphs" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelopeCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "notificationRequests" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "notificationRequests" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "addParagraphs" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "addParagraphs" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnvelopeCreationMutation,
  EnvelopeCreationMutationVariables
>;
export const EnvelopeAffectationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "EnvelopeAffectation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "envelopeID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "campaignID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelopeAffectation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "envelopeID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "envelopeID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "campaignID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "campaignID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnvelopeAffectationMutation,
  EnvelopeAffectationMutationVariables
>;
export const NotifyDocumentStatusDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "NotifyDocumentStatus" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "documentID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "requests" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "NotificationRequest" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "notifyDocumentStatus" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "documentID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "documentID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "requests" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "requests" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  NotifyDocumentStatusMutation,
  NotifyDocumentStatusMutationVariables
>;
export const InvestorProfileUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "InvestorProfileUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "InvestorProfile" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "investorProfileUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InvestorProfileUpdateMutation,
  InvestorProfileUpdateMutationVariables
>;
export const DocumentDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "documentID" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "documentID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "documentID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentDeletionMutation,
  DocumentDeletionMutationVariables
>;
export const DocumentUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "update" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DocumentUpdate" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "update" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "update" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentUpdateMutation,
  DocumentUpdateMutationVariables
>;
export const InvestorProfileFormUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "InvestorProfileFormUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "InvestorProfileForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "investorProfileFormUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InvestorProfileFormUpdateMutation,
  InvestorProfileFormUpdateMutationVariables
>;
export const RequestFormFillingDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "RequestFormFilling" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "form" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Form" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "requestFormFilling" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "form" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "form" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  RequestFormFillingMutation,
  RequestFormFillingMutationVariables
>;
export const SendToSignDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SendToSign" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "form" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Form" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "sendToSign" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "form" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "form" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SendToSignMutation, SendToSignMutationVariables>;
export const ConvertDocumentToPdfDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ConvertDocumentToPdf" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "fileUrl" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "convertDocumentToPdf" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "fileUrl" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "fileUrl" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ConvertDocumentToPdfMutation,
  ConvertDocumentToPdfMutationVariables
>;
export const EnvelopeUrlDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "EnvelopeURL" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyURL" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelope" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "companyURL" },
                  directives: [
                    {
                      kind: "Directive",
                      name: { kind: "Name", value: "include" },
                      arguments: [
                        {
                          kind: "Argument",
                          name: { kind: "Name", value: "if" },
                          value: {
                            kind: "Variable",
                            name: { kind: "Name", value: "companyURL" },
                          },
                        },
                      ],
                    },
                  ],
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerURL" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "customerID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "customerID" },
                      },
                    },
                  ],
                  directives: [
                    {
                      kind: "Directive",
                      name: { kind: "Name", value: "skip" },
                      arguments: [
                        {
                          kind: "Argument",
                          name: { kind: "Name", value: "if" },
                          value: {
                            kind: "Variable",
                            name: { kind: "Name", value: "companyURL" },
                          },
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<EnvelopeUrlQuery, EnvelopeUrlQueryVariables>;
export const EnvelopeListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "EnvelopeList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelopeList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "treatement" },
                  name: { kind: "Name", value: "conformity" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "documents" },
                  name: { kind: "Name", value: "documentList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "url" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "expiration" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "extension" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "key" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      { kind: "Field", name: { kind: "Name", value: "notes" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "treatement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "signature" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "digital" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "signatories" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<EnvelopeListQuery, EnvelopeListQueryVariables>;
export const EnvelopeDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "EnvelopeDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "envelopeID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelopeDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "envelopeID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "envelopeID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnvelopeDeletionMutation,
  EnvelopeDeletionMutationVariables
>;
export const EnvelopeUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "EnvelopeUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "EnvelopeAccess" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelopeUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnvelopeUpdateMutation,
  EnvelopeUpdateMutationVariables
>;
export const EnvelopeListOnlyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "EnvelopeListOnly" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelopeList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "treatement" },
                  name: { kind: "Name", value: "conformity" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnvelopeListOnlyQuery,
  EnvelopeListOnlyQueryVariables
>;
export const EnvelopeCategoryDocumentsListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "EnvelopeCategoryDocumentsList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "envelope" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "documentList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "treatement" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnvelopeCategoryDocumentsListQuery,
  EnvelopeCategoryDocumentsListQueryVariables
>;
export const DocumentCategoryCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentCategoryCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerVisibility" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCategoryCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerVisibility" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerVisibility" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentCategoryCreationMutation,
  DocumentCategoryCreationMutationVariables
>;
export const GedDocumentCategoryListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GedDocumentCategoryList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCategoryList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "documents" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "customerID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "customerID" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "envelope" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GedDocumentCategoryListQuery,
  GedDocumentCategoryListQueryVariables
>;
export const DocumentAddDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentAdd" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentAdd" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentAdd" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DocumentAddMutation, DocumentAddMutationVariables>;
export const DocumentCategoryUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentCategoryUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "updatedName" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerVisibility" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCategoryUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "updatedName" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "updatedName" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerVisibility" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerVisibility" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentCategoryUpdateMutation,
  DocumentCategoryUpdateMutationVariables
>;
export const DocumentCategoryDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DocumentCategoryDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCategoryDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "key" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "key" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentCategoryDeletionMutation,
  DocumentCategoryDeletionMutationVariables
>;
export const DocumentListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "documentList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "categories" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "String" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "categories" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "categories" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DocumentListQuery, DocumentListQueryVariables>;
export const DocumentCategoryListOnlyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "DocumentCategoryListOnly" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCategoryList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerVisibility" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DocumentCategoryListOnlyQuery,
  DocumentCategoryListOnlyQueryVariables
>;
export const CategoryDocumentsListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CategoryDocumentsList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "categoryKey" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "documentCategory" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "categoryKey" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "categoryKey" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "documents" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "customerID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "customerID" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "treatement" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CategoryDocumentsListQuery,
  CategoryDocumentsListQueryVariables
>;
export const DocumentInfoDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "DocumentInfo" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "document" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "expiration" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "category" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "key" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "treatement" } },
                { kind: "Field", name: { kind: "Name", value: "notes" } },
                { kind: "Field", name: { kind: "Name", value: "extension" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "signature" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "signed" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "validated" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "digital" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customer" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "manager" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "signatories" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "envelope" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DocumentInfoQuery, DocumentInfoQueryVariables>;
export const DocumentUrlDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "DocumentUrl" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "document" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "url" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DocumentUrlQuery, DocumentUrlQueryVariables>;
export const CustomersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Customers" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CustomersInput" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerList" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "input" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "input" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "lastName" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "firstName" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "email" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "type" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "plan" },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "phoneNumber",
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "hasB2CAccount",
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "informations",
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "details",
                                          },
                                        },
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "general",
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "wealth" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "companyID",
                                        },
                                        value: {
                                          kind: "Variable",
                                          name: {
                                            kind: "Name",
                                            value: "companyID",
                                          },
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conformity" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "companyID",
                                        },
                                        value: {
                                          kind: "Variable",
                                          name: {
                                            kind: "Name",
                                            value: "companyID",
                                          },
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "manager" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "companyID",
                                        },
                                        value: {
                                          kind: "Variable",
                                          name: {
                                            kind: "Name",
                                            value: "companyID",
                                          },
                                        },
                                      },
                                    ],
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CustomersQuery, CustomersQueryVariables>;
export const CustomerDetailsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerDetails" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "wealth" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "customerDetails" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "count" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managedWealth" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "averageWealth" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerDetailsQuery,
  CustomerDetailsQueryVariables
>;
export const ExportCustomerListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "exportCustomerList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomersInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "url" },
            name: { kind: "Name", value: "exportCustomerList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ExportCustomerListMutation,
  ExportCustomerListMutationVariables
>;
export const CustomerDetailsUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerDetailsUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerDetailsUpdateInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerDetailsUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "count" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerDetailsUpdateMutation,
  CustomerDetailsUpdateMutationVariables
>;
export const CustomerDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerDeletionMutation,
  CustomerDeletionMutationVariables
>;
export const CustomerManagerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerManager" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                      { kind: "Field", name: { kind: "Name", value: "phone" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "providerCode" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerManagerQuery,
  CustomerManagerQueryVariables
>;
export const CustomerFiscalityDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerFiscality" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "year" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "fiscality" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "year" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "year" },
                      },
                    },
                  ],
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerFiscalityQuery,
  CustomerFiscalityQueryVariables
>;
export const UpdateFiscalityDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UpdateFiscality" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "FiscalityInformations" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "year" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerFiscality" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "year" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "year" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateFiscalityMutation,
  UpdateFiscalityMutationVariables
>;
export const ListNoteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "listNote" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "listNote" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ListNoteQuery, ListNoteQueryVariables>;
export const ExportNotesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "exportNotes" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "url" },
            name: { kind: "Name", value: "exportNotes" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ExportNotesMutation, ExportNotesMutationVariables>;
export const DeleteNoteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "deleteNote" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "noteId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "deleteNote" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "noteId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "noteId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DeleteNoteMutation, DeleteNoteMutationVariables>;
export const CreateNoteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "createNote" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "content" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createNote" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "content" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "content" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CreateNoteMutation, CreateNoteMutationVariables>;
export const UpdateNoteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "updateNote" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "noteId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "content" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "updateNote" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "noteId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "noteId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "content" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "content" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<UpdateNoteMutation, UpdateNoteMutationVariables>;
export const ConformityStatusDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "conformityStatus" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "conformityStatus" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "conformityId" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "engagementLetter" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "documentId" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "officialDocuments" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informationCollections" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investorProfile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "documentId" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "LCB" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "DER" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "documentId" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "objectivesHeritage" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "documentId" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ConformityStatusQuery,
  ConformityStatusQueryVariables
>;
export const AddDocumentToConformityDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "addDocumentToConformity" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "conformityID" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DocumentToConformityInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "addDocumentToConformity" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "conformityID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "conformityID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "conformityId" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "engagementLetter" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "officialDocuments" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informationCollections" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investorProfile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "LCB" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "DER" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "status" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "info" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AddDocumentToConformityMutation,
  AddDocumentToConformityMutationVariables
>;
export const ListCustomerTaskDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "listCustomerTask" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "listCustomerTask" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "title" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "contractNumber" },
                },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
                { kind: "Field", name: { kind: "Name", value: "schedule" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "completed" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customer" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "company" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "assigned_manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "entityRelatedId" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "entityRelatedType" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ListCustomerTaskQuery,
  ListCustomerTaskQueryVariables
>;
export const ListCompanyTaskByTypeDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ListCompanyTaskByType" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyTaskFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "listCompanyTaskByType" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "categories" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "type" } },
                      { kind: "Field", name: { kind: "Name", value: "count" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "tasks" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "title" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "category" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "contractNumber" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "content" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "updated" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "schedule" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "created" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "completed" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "customer" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "company" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "assigned_manager" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managers" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "type" } },
                      { kind: "Field", name: { kind: "Name", value: "count" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "tasks" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "title" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "category" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "contractNumber" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "content" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "updated" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "schedule" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "created" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "completed" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "customer" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "company" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "assigned_manager" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ListCompanyTaskByTypeQuery,
  ListCompanyTaskByTypeQueryVariables
>;
export const TaskDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Task" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "fetchSingleTask" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "title" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "contractNumber" },
                },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
                { kind: "Field", name: { kind: "Name", value: "schedule" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "completed" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customer" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "company" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "assigned_manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<TaskQuery, TaskQueryVariables>;
export const CompanyTaskSearchDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyTaskSearch" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyTaskFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyTaskSearch" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "count" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "tasks" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "title" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "contractNumber" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "content" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "updated" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "completed" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managerName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customerName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customerId" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyTaskSearchQuery,
  CompanyTaskSearchQueryVariables
>;
export const CompanyTaskCountByStatusDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyTaskCountByStatus" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyTaskFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyTaskCountByStatus" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "status" } },
                { kind: "Field", name: { kind: "Name", value: "count" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyTaskCountByStatusQuery,
  CompanyTaskCountByStatusQueryVariables
>;
export const CompanyTaskCountByCategoriesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyTaskCountByCategories" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyTaskFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyTaskCountByCategories" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "category" } },
                { kind: "Field", name: { kind: "Name", value: "count" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyTaskCountByCategoriesQuery,
  CompanyTaskCountByCategoriesQueryVariables
>;
export const CompanyTaskCountByManagersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyTaskCountByManagers" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyTaskFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyTaskCountByManagers" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "count" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyTaskCountByManagersQuery,
  CompanyTaskCountByManagersQueryVariables
>;
export const TaskCategoryListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "TaskCategoryList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "taskCategoryList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "default" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TaskCategoryListQuery,
  TaskCategoryListQueryVariables
>;
export const CreateTaskCategoryDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateTaskCategory" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TaskCategoryInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createTaskCategory" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "default" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateTaskCategoryMutation,
  CreateTaskCategoryMutationVariables
>;
export const AssetsAccountNumbersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "AssetsAccountNumbers" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "accountNumbers" },
            name: { kind: "Name", value: "assetsAccountNumbers" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "value" } },
                { kind: "Field", name: { kind: "Name", value: "label" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetsAccountNumbersQuery,
  AssetsAccountNumbersQueryVariables
>;
export const CustomersListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomersList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CustomersInput" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerList" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "input" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "input" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "lastName" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "firstName" },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CustomersListQuery, CustomersListQueryVariables>;
export const ExportTasksDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "exportTasks" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "url" },
            name: { kind: "Name", value: "exportTasks" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ExportTasksMutation, ExportTasksMutationVariables>;
export const CompletedTaskDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "completedTask" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "taskId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "completedTask" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "taskId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "taskId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
                { kind: "Field", name: { kind: "Name", value: "schedule" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "completed" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompletedTaskMutation,
  CompletedTaskMutationVariables
>;
export const CreateTaskDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "createTask" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TaskInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createTask" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "title" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "contractNumber" },
                },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
                { kind: "Field", name: { kind: "Name", value: "schedule" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "completed" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CreateTaskMutation, CreateTaskMutationVariables>;
export const UpdateTaskDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "updateTask" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "taskId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TaskInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "updateTask" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "taskId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "taskId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "title" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "contractNumber" },
                },
                { kind: "Field", name: { kind: "Name", value: "content" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<UpdateTaskMutation, UpdateTaskMutationVariables>;
export const CustomerWidgetWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerWidgetWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "financialIgnoredGroup" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "passiveIgnoredGroup" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "nonFinancialIgnoredGroup" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "othersIgnoredGroup" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "totalIgnoredGroup" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "start" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "end" } },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "totalWealth" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "ignoring" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "totalIgnoredGroup" },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "financialWealth" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "ignoring" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "financialIgnoredGroup" },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "financialPerformance" },
                  name: { kind: "Name", value: "performance" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "ignoring" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "financialIgnoredGroup" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "start" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "start" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "end" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "end" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "nonFinancialWealth" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "ignoring" },
                      value: {
                        kind: "Variable",
                        name: {
                          kind: "Name",
                          value: "nonFinancialIgnoredGroup",
                        },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "nonFinancialPerformance" },
                  name: { kind: "Name", value: "performance" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "ignoring" },
                      value: {
                        kind: "Variable",
                        name: {
                          kind: "Name",
                          value: "nonFinancialIgnoredGroup",
                        },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "start" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "start" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "end" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "end" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "othersWealth" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "ignoring" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "othersIgnoredGroup" },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "passiveWealth" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "ignoring" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "passiveIgnoredGroup" },
                      },
                    },
                  ],
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "underManagement" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: { kind: "EnumValue", value: "under_managements" },
                    },
                  ],
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "underManagementPerformance" },
                  name: { kind: "Name", value: "performance" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "companyID" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "companyID" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "start" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "start" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "end" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "end" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: { kind: "EnumValue", value: "under_managements" },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerWidgetWealthQuery,
  CustomerWidgetWealthQueryVariables
>;
export const CustomerInformationsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerInformations" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                { kind: "Field", name: { kind: "Name", value: "phoneNumber" } },
                { kind: "Field", name: { kind: "Name", value: "plan" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "tag" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "details" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "general" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "hasB2CAccount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "pendingInvitations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerInformationsQuery,
  CustomerInformationsQueryVariables
>;
export const CustomerInformationsFullFieldsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerInformationsFullFields" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "firstName" } },
                { kind: "Field", name: { kind: "Name", value: "lastName" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                { kind: "Field", name: { kind: "Name", value: "phoneNumber" } },
                { kind: "Field", name: { kind: "Name", value: "plan" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "tag" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investorProfile" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "details" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "general" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "lcbLab" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "hasB2CAccount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "pendingInvitations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "investorProfileForm" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerInformationsFullFieldsQuery,
  CustomerInformationsFullFieldsQueryVariables
>;
export const HoldingQueriesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "HoldingQueries" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "holdingList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "form" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "companies" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "ownerName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "businessList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "general" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<HoldingQueriesQuery, HoldingQueriesQueryVariables>;
export const HoldingListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "HoldingList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "holdingList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "form" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "companies" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "ownerName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<HoldingListQuery, HoldingListQueryVariables>;
export const BusinessListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "BusinessList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "businessList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "general" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<BusinessListQuery, BusinessListQueryVariables>;
export const UpdateCustomerInformationsGeneralDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UpdateCustomerInformationsGeneral" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "GeneralInformations" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerInformationsGeneral" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateCustomerInformationsGeneralMutation,
  UpdateCustomerInformationsGeneralMutationVariables
>;
export const CustomerReferencesAccessUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "customerReferencesAccessUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "values" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ReferenceAccessValue" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerReferencesAccessUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "values" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "values" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "primary" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customer" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerReferencesAccessUpdateMutation,
  CustomerReferencesAccessUpdateMutationVariables
>;
export const UpdateCustomerInformationsDetailDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UpdateCustomerInformationsDetail" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DetailsInformations" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerInformationsDetail" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateCustomerInformationsDetailMutation,
  UpdateCustomerInformationsDetailMutationVariables
>;
export const HoldingCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "HoldingCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "HoldingForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "holdingCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  HoldingCreationMutation,
  HoldingCreationMutationVariables
>;
export const HoldingUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "HoldingUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "HoldingForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "holdingUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  HoldingUpdateMutation,
  HoldingUpdateMutationVariables
>;
export const HoldingDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "HoldingDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "IDs" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "holdingDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "IDs" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "IDs" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  HoldingDeletionMutation,
  HoldingDeletionMutationVariables
>;
export const AssignHoldingsToBusinessDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssignHoldingsToBusiness" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "businessID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "holdingIds" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "assignHoldingsToBusiness" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "businessID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "businessID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "holdingIds" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "holdingIds" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssignHoldingsToBusinessMutation,
  AssignHoldingsToBusinessMutationVariables
>;
export const BusinessCreateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "BusinessCreate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "HoldingCompanyInfo" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "businessCreate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  BusinessCreateMutation,
  BusinessCreateMutationVariables
>;
export const BusinessUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "BusinessUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "information" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "HoldingCompanyInfo" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managers" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "HoldingManagerSchema" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "nbManagers" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "NbHoldingManagerSchema" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "bankAccounts" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyFinancialSchema" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "activities" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyActivitiesSchema" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "tag" } },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "businessUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "information" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "information" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managers" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managers" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "nbManagers" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "nbManagers" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "bankAccounts" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "bankAccounts" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "activities" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "activities" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "tag" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "tag" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  BusinessUpdateMutation,
  BusinessUpdateMutationVariables
>;
export const BusinessDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "BusinessDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "IDs" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "businessDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "IDs" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "IDs" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  BusinessDeletionMutation,
  BusinessDeletionMutationVariables
>;
export const CreateCustomerFromBusinessDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "createCustomerFromBusiness" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "businessID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "addToCustomerReference" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createCustomerFromBusiness" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "businessID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "businessID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "addToCustomerReference" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "addToCustomerReference" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateCustomerFromBusinessMutation,
  CreateCustomerFromBusinessMutationVariables
>;
export const CustomerRelationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerRelation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerRelation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "list" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerRelationQuery,
  CustomerRelationQueryVariables
>;
export const CustomerRelationCreateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerRelationCreate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerRelationForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerRelationCreate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerRelationCreateMutation,
  CustomerRelationCreateMutationVariables
>;
export const CustomerRelationUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerRelationUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerRelationForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerRelationUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerRelationUpdateMutation,
  CustomerRelationUpdateMutationVariables
>;
export const CreateUserFromRelationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateUserFromRelation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "addToCustomerReference" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createUserFromRelation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "addToCustomerReference" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "addToCustomerReference" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateUserFromRelationMutation,
  CreateUserFromRelationMutationVariables
>;
export const CreateRelationFromExistingCustomerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateRelationFromExistingCustomer" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "existingCustomerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "createRelationFromExistingCustomer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "existingCustomerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "existingCustomerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "firstName" } },
                { kind: "Field", name: { kind: "Name", value: "lastName" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "informations" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "details" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "general" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateRelationFromExistingCustomerMutation,
  CreateRelationFromExistingCustomerMutationVariables
>;
export const UnlinkFromCustomerReferenceDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UnlinkFromCustomerReference" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "unlinkFromCustomerReference" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UnlinkFromCustomerReferenceMutation,
  UnlinkFromCustomerReferenceMutationVariables
>;
export const CustomerRelationDeleteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerRelationDelete" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerRelationDelete" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerRelationDeleteMutation,
  CustomerRelationDeleteMutationVariables
>;
export const CustomerRelationsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerRelations" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerRelationForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerRelations" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerRelationsMutation,
  CustomerRelationsMutationVariables
>;
export const CustomerManagerUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerManagerUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "providerCode" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "updateCustomerManager" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "providerCode" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "providerCode" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerManagerUpdateMutation,
  CustomerManagerUpdateMutationVariables
>;
export const ContractListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ContractList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ContractFilters" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "pagination" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Pagination" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "contractListing" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "pagination" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "pagination" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                { kind: "Field", name: { kind: "Name", value: "totalPages" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "contracts" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isSelected" },
                        arguments: [
                          {
                            kind: "Argument",
                            name: { kind: "Name", value: "companyID" },
                            value: {
                              kind: "Variable",
                              name: { kind: "Name", value: "companyID" },
                            },
                          },
                        ],
                      },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "type" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "insuranceCompany" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "intermediary" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "performance" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "accountUnits" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managed" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                        arguments: [
                          {
                            kind: "Argument",
                            name: { kind: "Name", value: "companyID" },
                            value: {
                              kind: "Variable",
                              name: { kind: "Name", value: "companyID" },
                            },
                          },
                        ],
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managedModes" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "fundsOrigin" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "minTransferAmount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "maxTransferFees" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "arbitrageFees" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "yearlyFees" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ContractListQuery, ContractListQueryVariables>;
export const ContractFiltersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ContractFilters" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "contractFilters" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "insuranceCompanies" },
                },
                { kind: "Field", name: { kind: "Name", value: "types" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managedModes" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "fundsOrigins" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ContractFiltersQuery,
  ContractFiltersQueryVariables
>;
export const AutomaticContractCompareDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AutomaticContractCompare" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompareContract" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "automaticContractCompare" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "insuranceCompany" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "intermediary" },
                },
                { kind: "Field", name: { kind: "Name", value: "performance" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "accountUnits" },
                },
                { kind: "Field", name: { kind: "Name", value: "managed" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managedModes" },
                },
                { kind: "Field", name: { kind: "Name", value: "fundsOrigin" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "minTransferAmount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "maxTransferFees" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "arbitrageFees" },
                },
                { kind: "Field", name: { kind: "Name", value: "yearlyFees" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AutomaticContractCompareMutation,
  AutomaticContractCompareMutationVariables
>;
export const LinkContractToCompanyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "linkContractToCompany" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "contractId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "linkContractToCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "contractId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "contractId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "insuranceCompany" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "intermediary" },
                },
                { kind: "Field", name: { kind: "Name", value: "performance" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "accountUnits" },
                },
                { kind: "Field", name: { kind: "Name", value: "managed" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managedModes" },
                },
                { kind: "Field", name: { kind: "Name", value: "fundsOrigin" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "minTransferAmount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "maxTransferFees" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "arbitrageFees" },
                },
                { kind: "Field", name: { kind: "Name", value: "yearlyFees" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  LinkContractToCompanyMutation,
  LinkContractToCompanyMutationVariables
>;
export const UnlinkContractFromCompanyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "unlinkContractFromCompany" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "contractId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "unlinkContractFromCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "contractId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "contractId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "insuranceCompany" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "intermediary" },
                },
                { kind: "Field", name: { kind: "Name", value: "performance" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "accountUnits" },
                },
                { kind: "Field", name: { kind: "Name", value: "managed" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managedModes" },
                },
                { kind: "Field", name: { kind: "Name", value: "fundsOrigin" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "minTransferAmount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "maxTransferFees" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "arbitrageFees" },
                },
                { kind: "Field", name: { kind: "Name", value: "yearlyFees" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UnlinkContractFromCompanyMutation,
  UnlinkContractFromCompanyMutationVariables
>;
export const UpdateFavoriteContractMetadataDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UpdateFavoriteContractMetadata" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "contractID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "FavoriteContractMetadata" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "updateFavoriteContractMetadata" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "contractID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "contractID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateFavoriteContractMetadataMutation,
  UpdateFavoriteContractMetadataMutationVariables
>;
export const InstrumentsListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InstrumentsList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "FavoriteInstrumentsFilters" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "pagination" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Pagination" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentListingWithFavorites" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "pagination" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "pagination" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                { kind: "Field", name: { kind: "Name", value: "totalPages" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "instruments" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "label" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managementCompany" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isFavorite" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentsListQuery,
  InstrumentsListQueryVariables
>;
export const FavoriteInstrumentsListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "FavoriteInstrumentsList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "FavoriteInstrumentsFilters" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "pagination" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Pagination" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentFavorites" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "pagination" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "pagination" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                { kind: "Field", name: { kind: "Name", value: "totalPages" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "instruments" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "label" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managementCompany" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isFavorite" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  FavoriteInstrumentsListQuery,
  FavoriteInstrumentsListQueryVariables
>;
export const InstrumentFiltersQueryDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InstrumentFiltersQuery" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentFavoriteFilters" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "categories" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managementCompanies" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentFiltersQueryQuery,
  InstrumentFiltersQueryQueryVariables
>;
export const SetInstrumentFavoriteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "setInstrumentFavorite" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "code" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "isFavorite" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Boolean" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "setInstrumentFavorite" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "code" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "code" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "isFavorite" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "isFavorite" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "code" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SetInstrumentFavoriteMutation,
  SetInstrumentFavoriteMutationVariables
>;
export const ProjectDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Project" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "project" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "validated" } },
                { kind: "Field", name: { kind: "Name", value: "archived" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "metadata" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProjectQuery, ProjectQueryVariables>;
export const ProjectListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ProjectList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "range" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TimeRange" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "type" } },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "ProjectType" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "productType" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "projectList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "range" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "range" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "type" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "type" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "productType" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "productType" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "validated" } },
                { kind: "Field", name: { kind: "Name", value: "archived" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "metadata" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProjectListQuery, ProjectListQueryVariables>;
export const ProjectDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ProjectDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "projectDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProjectDeletionMutation,
  ProjectDeletionMutationVariables
>;
export const ProjectValidationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ProjectValidation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "projectValidation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProjectValidationMutation,
  ProjectValidationMutationVariables
>;
export const ProjectCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ProjectCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "type" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ProjectType" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "metadata" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ProjectMetadata" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "projectCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "type" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "type" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "metadata" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "metadata" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProjectCreationMutation,
  ProjectCreationMutationVariables
>;
export const ProjectUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ProjectUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "metadata" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ProjectMetadata" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "projectUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "metadata" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "metadata" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProjectUpdateMutation,
  ProjectUpdateMutationVariables
>;
export const ProjectProductTypesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ProjectProductTypes" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "projectProductTypes" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProjectProductTypesQuery,
  ProjectProductTypesQueryVariables
>;
export const GenerateAdequacyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "GenerateAdequacy" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "projectID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "generateAdequacy" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "projectID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "projectID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "extension" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GenerateAdequacyMutation,
  GenerateAdequacyMutationVariables
>;
export const SearchCustomersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "SearchCustomers" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "schema" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerSearchSchema" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "searchCustomers" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "schema" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "schema" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SearchCustomersQuery,
  SearchCustomersQueryVariables
>;
export const CustomersSearchFiltersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomersSearchFilters" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "underManagement" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customersSearchFilters" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "underManagement" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "underManagement" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "insuranceCompany" },
                },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                { kind: "Field", name: { kind: "Name", value: "group" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investmentType" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investmentManagementCompany" },
                },
                { kind: "Field", name: { kind: "Name", value: "tags" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomersSearchFiltersQuery,
  CustomersSearchFiltersQueryVariables
>;
export const SearchCustomersResultDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "SearchCustomersResult" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "getSearchResult" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "result" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: { kind: "Name", value: "CustomerAsset" },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "__typename" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "customer" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "performance" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "gain" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "evolution" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "mixedData" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "accountNumber" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "openDate" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "group" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "valuation" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "investmentCode" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "investmentLabel" },
                            },
                            {
                              kind: "Field",
                              name: {
                                kind: "Name",
                                value: "investmentValuation",
                              },
                            },
                            {
                              kind: "Field",
                              name: {
                                kind: "Name",
                                value: "investmentPerformance",
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: { kind: "Name", value: "Customer" },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "__typename" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              alias: {
                                kind: "Name",
                                value: "underManagementWealth",
                              },
                              name: { kind: "Name", value: "wealth" },
                              arguments: [
                                {
                                  kind: "Argument",
                                  name: { kind: "Name", value: "companyID" },
                                  value: {
                                    kind: "Variable",
                                    name: { kind: "Name", value: "companyID" },
                                  },
                                },
                                {
                                  kind: "Argument",
                                  name: { kind: "Name", value: "computing" },
                                  value: {
                                    kind: "EnumValue",
                                    value: "under_managements",
                                  },
                                },
                              ],
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "wealth" },
                              arguments: [
                                {
                                  kind: "Argument",
                                  name: { kind: "Name", value: "companyID" },
                                  value: {
                                    kind: "Variable",
                                    name: { kind: "Name", value: "companyID" },
                                  },
                                },
                              ],
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "informations" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "details" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "general" },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "schema" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SearchCustomersResultQuery,
  SearchCustomersResultQueryVariables
>;
export const ExportSearchResultDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "exportSearchResult" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "hasInvestQuery" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "url" },
            name: { kind: "Name", value: "exportSearchResult" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "hasInvestQuery" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "hasInvestQuery" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ExportSearchResultMutation,
  ExportSearchResultMutationVariables
>;
export const GetFavoriteSearchesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetFavoriteSearches" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "favoriteSearchQueries" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "schema" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetFavoriteSearchesQuery,
  GetFavoriteSearchesQueryVariables
>;
export const SaveFavoriteSearchDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SaveFavoriteSearch" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "schema" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerSearchSchema" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "saveFavoriteSearchQuery" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "schema" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "schema" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SaveFavoriteSearchMutation,
  SaveFavoriteSearchMutationVariables
>;
export const DeleteFavoriteSearchDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DeleteFavoriteSearch" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "deleteFavoriteSearchQuery" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DeleteFavoriteSearchMutation,
  DeleteFavoriteSearchMutationVariables
>;
export const CustomerWalletActivitiesGraphDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerWalletActivitiesGraph" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "from" } },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWalletActivitiesGraph" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "from" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "from" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
                { kind: "Field", name: { kind: "Name", value: "start" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerWalletActivitiesGraphQuery,
  CustomerWalletActivitiesGraphQueryVariables
>;
export const CustomerWalletActivitiesByYearDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerWalletActivitiesByYear" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWalletActivitiesByYear" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "year" } },
                { kind: "Field", name: { kind: "Name", value: "startValue" } },
                { kind: "Field", name: { kind: "Name", value: "endValue" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "performance" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerWalletActivitiesByYearQuery,
  CustomerWalletActivitiesByYearQueryVariables
>;
export const CustomerWalletAddActivityYearHistoryDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerWalletAddActivityYearHistory" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ActivityYearHistoryCreationInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "customerWalletAddActivityYearHistory",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "year" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerWalletAddActivityYearHistoryMutation,
  CustomerWalletAddActivityYearHistoryMutationVariables
>;
export const CustomerWalletUpdateActivityYearHistoryDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerWalletUpdateActivityYearHistory" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ActivityYearHistoryCreationInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "customerWalletUpdateActivityYearHistory",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "year" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerWalletUpdateActivityYearHistoryMutation,
  CustomerWalletUpdateActivityYearHistoryMutationVariables
>;
export const ScpiListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "SCPIList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SCPIList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "subscription_price" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ScpiListQuery, ScpiListQueryVariables>;
export const AssetCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssetCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AssetGroup" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "values" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerAssetCreationValues" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "investments" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "InvestmentValues" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "created" },
            name: { kind: "Name", value: "assetCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "group" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "group" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "values" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "values" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "investments" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "investments" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetCreationMutation,
  AssetCreationMutationVariables
>;
export const AssetUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssetUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AssetGroup" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "values" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerAssetCreationValues" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "investments" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "InvestmentValues" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "assetUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "group" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "group" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "values" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "values" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "investments" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "investments" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<AssetUpdateMutation, AssetUpdateMutationVariables>;
export const AssetUpdateDatesAndStatusDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssetUpdateDatesAndStatus" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "openDate" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "DateTime" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "closeDate" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "status" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "assetUpdateDatesAndStatus" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "openDate" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "openDate" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "closeDate" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "closeDate" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "status" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "status" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetUpdateDatesAndStatusMutation,
  AssetUpdateDatesAndStatusMutationVariables
>;
export const AssetUpdateGroupDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssetUpdateGroup" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assets" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AssetGroup" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "categoryName" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "assetUpdateGroup" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assets" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assets" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "group" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "group" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "categoryName" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "categoryName" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "group" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "categoryName" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetUpdateGroupMutation,
  AssetUpdateGroupMutationVariables
>;
export const CustomerAssetInvestmentUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerAssetInvestmentUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "update" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "InvestmentValues" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerAssetInvestmentUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "update" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "update" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerAssetInvestmentUpdateMutation,
  CustomerAssetInvestmentUpdateMutationVariables
>;
export const SearchInstrumentDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "SearchInstrument" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AssetGroup" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "searchInstrument" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "name" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "name" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "group" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "group" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "code" } },
                { kind: "Field", name: { kind: "Name", value: "price" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SearchInstrumentQuery,
  SearchInstrumentQueryVariables
>;
export const CustomerInvestmentCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerInvestmentCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CustomerInvestmentCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerInvestmentCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerInvestmentCreationMutation,
  CustomerInvestmentCreationMutationVariables
>;
export const AssetDetailDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "AssetDetail" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "asset" },
            name: { kind: "Name", value: "customerAsset" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "group" } },
                { kind: "Field", name: { kind: "Name", value: "activity" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "underManagement" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "categoryName" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "accountNumber" },
                },
                { kind: "Field", name: { kind: "Name", value: "isManual" } },
                { kind: "Field", name: { kind: "Name", value: "metadata" } },
                { kind: "Field", name: { kind: "Name", value: "openDate" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "owners" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "entity" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "ownership" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "performance" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investmentList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "logo" } },
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managementCompany" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "unitPrice" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "unitValue" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "quantity" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "riskIndicator" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "performance" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "gain" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "evolution" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<AssetDetailQuery, AssetDetailQueryVariables>;
export const RetrieveOtherOwnerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "RetrieveOtherOwner" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "currentOwnerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "otherOwner" },
            name: { kind: "Name", value: "retrieveOtherOwner" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "currentOwnerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "currentOwnerId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "firstName" } },
                { kind: "Field", name: { kind: "Name", value: "lastName" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  RetrieveOtherOwnerQuery,
  RetrieveOtherOwnerQueryVariables
>;
export const GetUsersInCustomerReferenceDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetUsersInCustomerReference" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "users" },
            name: { kind: "Name", value: "getUsersInCustomerReference" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "firstName" } },
                { kind: "Field", name: { kind: "Name", value: "lastName" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetUsersInCustomerReferenceQuery,
  GetUsersInCustomerReferenceQueryVariables
>;
export const AssetDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssetDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "assetDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetDeletionMutation,
  AssetDeletionMutationVariables
>;
export const InstrumentDetailDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "InstrumentDetail" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentDetails" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "code" } },
                { kind: "Field", name: { kind: "Name", value: "label" } },
                { kind: "Field", name: { kind: "Name", value: "category" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managementCompany" },
                },
                { kind: "Field", name: { kind: "Name", value: "subcategory" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "riskIndicator" },
                },
                { kind: "Field", name: { kind: "Name", value: "dic" } },
                { kind: "Field", name: { kind: "Name", value: "prospectus" } },
                { kind: "Field", name: { kind: "Name", value: "location" } },
                { kind: "Field", name: { kind: "Name", value: "closePrice" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "closePriceDate" },
                },
                { kind: "Field", name: { kind: "Name", value: "currency" } },
                { kind: "Field", name: { kind: "Name", value: "sfdr" } },
                { kind: "Field", name: { kind: "Name", value: "pea" } },
                { kind: "Field", name: { kind: "Name", value: "peaPme" } },
                { kind: "Field", name: { kind: "Name", value: "esg" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "indiceReference" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "minimumInvestissement" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "frequenceValorisation" },
                },
                { kind: "Field", name: { kind: "Name", value: "nombreParts" } },
                { kind: "Field", name: { kind: "Name", value: "fraisPriips" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "fraisCourants" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "fraisGestion" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "fraisSouscription" },
                },
                { kind: "Field", name: { kind: "Name", value: "fraisRachat" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "perfCalendaire" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "year" } },
                      { kind: "Field", name: { kind: "Name", value: "value" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentDetailQuery,
  InstrumentDetailQueryVariables
>;
export const SearchInvestmentsByInstrumentCodeInAssetsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: {
        kind: "Name",
        value: "searchInvestmentsByInstrumentCodeInAssets",
      },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "code" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "page" } },
          type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "limit" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "searchInvestmentsByInstrumentCodeInAssets",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "code" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "code" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "page" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "page" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "limit" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "limit" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "edges" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "assetId" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "assetName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "assetGroup" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customerId" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customerName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "amount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "detentions" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "performance" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "amount" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "percentage" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SearchInvestmentsByInstrumentCodeInAssetsQuery,
  SearchInvestmentsByInstrumentCodeInAssetsQueryVariables
>;
export const InstrumentIsFavoriteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "instrumentIsFavorite" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "code" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentIsFavorite" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "code" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "code" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentIsFavoriteQuery,
  InstrumentIsFavoriteQueryVariables
>;
export const InstrumentUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "InstrumentUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "code" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "InstrumentsDataInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "instrumentUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "code" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "code" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "code" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InstrumentUpdateMutation,
  InstrumentUpdateMutationVariables
>;
export const CustomerWalletTransactionsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerWalletTransactions" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetId" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "pagination" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "Pagination" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "search" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "dateRange" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateRange" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWalletTransactions" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetId" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "pagination" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "pagination" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "search" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "search" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "dateRange" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "dateRange" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "transactions" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "date" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "dateBO" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "value" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "comment" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "typeOperation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "manager" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "statusBO" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "statusValidation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "managerBO" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "totalCount" } },
                { kind: "Field", name: { kind: "Name", value: "totalPages" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerWalletTransactionsQuery,
  CustomerWalletTransactionsQueryVariables
>;
export const CreateTransactionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CreateTransaction" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TransactionCreationInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWalletAddTransaction" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreateTransactionMutation,
  CreateTransactionMutationVariables
>;
export const TransactionUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "TransactionUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "transactionID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TransactionCreationInput" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWalletTransactionUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "transactionID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "transactionID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TransactionUpdateMutation,
  TransactionUpdateMutationVariables
>;
export const TransactionDeleteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "TransactionDelete" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "transactionID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWalletTransactionDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "transactionID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "transactionID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  TransactionDeleteMutation,
  TransactionDeleteMutationVariables
>;
export const RelatedEntitiesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "RelatedEntities" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "referenceEntities" },
            name: { kind: "Name", value: "getUsersInCustomerReference" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "asset" },
            name: { kind: "Name", value: "customerAsset" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "owners" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "entity" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "ownership" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "mode" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  RelatedEntitiesQuery,
  RelatedEntitiesQueryVariables
>;
export const UpdateAssetOwnershipDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "updateAssetOwnership" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assetID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "values" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "AssetOwnerInput" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "assetsUpdateOwners" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assetID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assetID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "values" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "values" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "owners" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "entity" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "ownership" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "mode" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateAssetOwnershipMutation,
  UpdateAssetOwnershipMutationVariables
>;
export const CustomerWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "financialTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "passiveTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "nonFinancialTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "benefitsTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "repartitionTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "othersTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "financialWealth" },
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "financialTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "sri" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "nonfinancialWealth" },
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "nonFinancialTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "sri" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "othersWealth" },
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "othersTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "sri" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "passiveWealth" },
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "passiveTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "benefitsWealth" },
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "benefitsTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "repartition" },
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "repartitionTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CustomerWealthQuery, CustomerWealthQueryVariables>;
export const WealthUnderManagmentDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "WealthUnderManagment" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "assetsTypes" },
            name: { kind: "Name", value: "companyWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "assetsUnderManagement" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customer" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  WealthUnderManagmentQuery,
  WealthUnderManagmentQueryVariables
>;
export const CustomerWalletDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerWallet" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWallet" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "accountNumber" },
                },
                { kind: "Field", name: { kind: "Name", value: "group" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "insuranceCompany" },
                },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "openDate" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "transfersAmount" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "withdrawalAmount" },
                },
                { kind: "Field", name: { kind: "Name", value: "valuation" } },
                { kind: "Field", name: { kind: "Name", value: "risk" } },
                { kind: "Field", name: { kind: "Name", value: "metadata" } },
                { kind: "Field", name: { kind: "Name", value: "mixedData" } },
                { kind: "Field", name: { kind: "Name", value: "sri" } },
                { kind: "Field", name: { kind: "Name", value: "irr" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "initialValuation" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "investments" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "code" } },
                      { kind: "Field", name: { kind: "Name", value: "label" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "quantity" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "unitPrice" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "unitValue" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "dateValue" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "dateValuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "instrument" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "riskIndicator" },
                      },
                      {
                        kind: "Field",
                        alias: { kind: "Name", value: "category" },
                        name: { kind: "Name", value: "subcategory" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "buyingDate" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "investmentInstrument" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "dic" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "prospectus" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "metadata" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CustomerWalletQuery, CustomerWalletQueryVariables>;
export const UnderManagementAssetGroupsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "UnderManagementAssetGroups" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "groups" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "groups" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "group" } },
                { kind: "Field", name: { kind: "Name", value: "valuation" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "activity" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "accountNumber" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "openDate" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "transfersAmount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "withdrawalAmount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "sri" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "mode" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UnderManagementAssetGroupsQuery,
  UnderManagementAssetGroupsQueryVariables
>;
export const CustomerAssetsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerAssets" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "groups" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerAssets" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "groups" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "group" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CustomerAssetsQuery, CustomerAssetsQueryVariables>;
export const CustomerWalletInvestmentSriUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CustomerWalletInvestmentSriUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "riskIndicator" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerWalletInvestmentSriUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "riskIndicator" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "riskIndicator" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerWalletInvestmentSriUpdateMutation,
  CustomerWalletInvestmentSriUpdateMutationVariables
>;
export const GlobalWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GlobalWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "start" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "end" } },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "options" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AssetPerformanceOrder" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "ignoring" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "campaignLimit" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "performance" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "start" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "start" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "end" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "end" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "assets" },
            name: { kind: "Name", value: "companiesManagedAsset" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "start" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "start" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "end" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "end" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "options" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "options" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "ignoring" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "ignoring" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "group" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "activity" },
                },
                { kind: "Field", name: { kind: "Name", value: "isManual" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "performance" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "liquidity" },
            name: { kind: "Name", value: "globalLiquidity" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "mostOccuring" },
            name: { kind: "Name", value: "mostOccuringAssetType" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "group" } },
                { kind: "Field", name: { kind: "Name", value: "count" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "wealth" } },
                { kind: "Field", name: { kind: "Name", value: "metadata" } },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "details" },
            name: { kind: "Name", value: "customerDetails" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managedWealth" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "campaigns" },
            name: { kind: "Name", value: "campaignList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "limit" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "campaignLimit" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GlobalWealthQuery, GlobalWealthQueryVariables>;
export const AssetManagementSwitchDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssetManagementSwitch" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "domain" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "WealthFilter" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "asset" },
            name: { kind: "Name", value: "switchAssetManagement" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "management" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "domain" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "underManagement" },
                },
                { kind: "Field", name: { kind: "Name", value: "isManual" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetManagementSwitchMutation,
  AssetManagementSwitchMutationVariables
>;
export const CustomerSearchDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CustomerSearch" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "text" } },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "suggestionsTokens" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "String" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "searchCustomer" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "text" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "text" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "suggestionsTokens" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "suggestionsTokens" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CustomerSearchQuery, CustomerSearchQueryVariables>;
export const AssetAffectationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssetAffectation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "selectedCustomerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "assets" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "assetsAffectation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "selectedCustomerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "assets" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "assets" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetAffectationMutation,
  AssetAffectationMutationVariables
>;
export const AssetTypeWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "assetTypeWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "AssetFilters" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AssetGroup" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "assets" },
                  name: { kind: "Name", value: "assetsUnderManagement" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "group" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "group" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "filters" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "filters" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "valuation" },
                                  },
                                  {
                                    kind: "Field",
                                    name: {
                                      kind: "Name",
                                      value: "accountNumber",
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "customer" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "id" },
                                        },
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "sri" },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssetTypeWealthQuery,
  AssetTypeWealthQueryVariables
>;
export const ExportAssetsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "exportAssets" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "group" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "AssetGroup" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filters" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "AssetFilters" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "url" },
            name: { kind: "Name", value: "exportAssets" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "group" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "group" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filters" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filters" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ExportAssetsMutation,
  ExportAssetsMutationVariables
>;
export const SubWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "SubWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "start" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "end" } },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "DateTime" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "limit" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "assetsTypes" },
            name: { kind: "Name", value: "companyWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "performance" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "start" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "start" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "end" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "end" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "gain" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "evolution" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "assetsUnderManagement" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "limit" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "limit" },
                      },
                    },
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customer" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SubWealthQuery, SubWealthQueryVariables>;
export const HomeDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "Home" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CustomersInput" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "campaignLimit" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "projectRange" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "TimeRange" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "taskFilter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyTaskFilter" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "projectValidated" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "projectLimit" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Int" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "listCompanyTask" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "taskFilter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "lateCount" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "edges" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "title" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "category" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "content" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "updated" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "completed" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customer" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "company" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "assigned_manager" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "entityRelatedId" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "entityRelatedType" },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "projectCompanyList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "range" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "projectRange" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "validated" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "projectValidated" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "limit" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "projectLimit" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "created" } },
                { kind: "Field", name: { kind: "Name", value: "validated" } },
                { kind: "Field", name: { kind: "Name", value: "archived" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "metadata" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customer" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customerList" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "input" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "input" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "firstName" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "lastName" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "email" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "type" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "wealth" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "companyID",
                                        },
                                        value: {
                                          kind: "Variable",
                                          name: {
                                            kind: "Name",
                                            value: "companyID",
                                          },
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    kind: "Field",
                                    alias: {
                                      kind: "Name",
                                      value: "underManagement",
                                    },
                                    name: { kind: "Name", value: "wealth" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "companyID",
                                        },
                                        value: {
                                          kind: "Variable",
                                          name: {
                                            kind: "Name",
                                            value: "companyID",
                                          },
                                        },
                                      },
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "computing",
                                        },
                                        value: {
                                          kind: "EnumValue",
                                          value: "under_managements",
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "customersCompliance" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "company" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "category" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "key" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "levels" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "valid" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "unvalid" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "waiting" },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "campaigns" },
            name: { kind: "Name", value: "campaignList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "limit" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "campaignLimit" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "liquidity" },
            name: { kind: "Name", value: "globalLiquidity" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "mostOccuringAssetType" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "group" } },
                { kind: "Field", name: { kind: "Name", value: "count" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<HomeQuery, HomeQueryVariables>;
export const NotificationListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "NotificationList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "NotificationFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "notificationList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "data" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "company" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  NotificationListQuery,
  NotificationListQueryVariables
>;
export const NotificationListByTypeDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "NotificationListByType" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "NotificationFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "notificationListByType" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "filter" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "filter" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "type" } },
                { kind: "Field", name: { kind: "Name", value: "count" } },
                { kind: "Field", name: { kind: "Name", value: "read" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "notifications" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "type" } },
                      { kind: "Field", name: { kind: "Name", value: "data" } },
                      { kind: "Field", name: { kind: "Name", value: "read" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "created" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  NotificationListByTypeQuery,
  NotificationListByTypeQueryVariables
>;
export const NotificationReadDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "NotificationRead" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "notificationRead" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  NotificationReadMutation,
  NotificationReadMutationVariables
>;
export const GetAggregationListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetAggregationList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "connectionList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "state" } },
                { kind: "Field", name: { kind: "Name", value: "updated" } },
                { kind: "Field", name: { kind: "Name", value: "identifier" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "connector" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "key" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "logo" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "provider" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetAggregationListQuery,
  GetAggregationListQueryVariables
>;
export const ParentConnectionsHasInvalidCredsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentConnectionsHasInvalidCreds" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: {
              kind: "Name",
              value: "parentCompanyConnectionsHasInvalidCreds",
            },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentConnectionsHasInvalidCredsQuery,
  ParentConnectionsHasInvalidCredsQueryVariables
>;
export const ConnectionsHasInvalidCredsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ConnectionsHasInvalidCreds" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "connectionsHasInvalidCreds" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ConnectionsHasInvalidCredsQuery,
  ConnectionsHasInvalidCredsQueryVariables
>;
export const DeleteConnectionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "DeleteConnection" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "connectionID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "deleteConnection" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "connectionID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "connectionID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  DeleteConnectionMutation,
  DeleteConnectionMutationVariables
>;
export const ParentCompanyManagerDataDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyManagerData" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompanyManagerData" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                { kind: "Field", name: { kind: "Name", value: "claims" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyManagerDataQuery,
  ParentCompanyManagerDataQueryVariables
>;
export const ManagerDataDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ManagerData" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "managerData" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                { kind: "Field", name: { kind: "Name", value: "claims" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ManagerDataQuery, ManagerDataQueryVariables>;
export const ParentCompanyManagerUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyManagerUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ManagerDataInput" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "claims" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "ManagerClaims" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompanyManagerUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "claims" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "claims" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyManagerUpdateMutation,
  ParentCompanyManagerUpdateMutationVariables
>;
export const ManagerUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ManagerUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ManagerDataInput" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "claims" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "ManagerClaims" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "managerUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "claims" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "claims" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ManagerUpdateMutation,
  ManagerUpdateMutationVariables
>;
export const ParentCompanyGeneralFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyGeneralForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompanyInfos" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "general" } },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyGeneralFormQuery,
  ParentCompanyGeneralFormQueryVariables
>;
export const CompanyGeneralFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyGeneralForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "general" } },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyGeneralFormQuery,
  CompanyGeneralFormQueryVariables
>;
export const ParentCompanyGeneralFormUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyGeneralFormUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "generalInput" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyGeneralForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "parentCompanyUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "generalInput" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "generalInput" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "general" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyGeneralFormUpdateMutation,
  ParentCompanyGeneralFormUpdateMutationVariables
>;
export const CompanyGeneralFormUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CompanyGeneralFormUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "generalInput" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyGeneralForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "companyUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "generalInput" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "generalInput" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "general" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyGeneralFormUpdateMutation,
  CompanyGeneralFormUpdateMutationVariables
>;
export const ManagerListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ManagerList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyManagersStats" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                { kind: "Field", name: { kind: "Name", value: "claims" } },
                { kind: "Field", name: { kind: "Name", value: "nbClients" } },
                { kind: "Field", name: { kind: "Name", value: "nbContracts" } },
                { kind: "Field", name: { kind: "Name", value: "lastActive" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "providerCode" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ManagerListQuery, ManagerListQueryVariables>;
export const CustomerReferenceAccessListDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "customerReferenceAccessList" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "customerReferenceAccessList" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "primary" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customer" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CustomerReferenceAccessListQuery,
  CustomerReferenceAccessListQueryVariables
>;
export const ManagerCreationDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ManagerCreation" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ManagerCreation" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "claims" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "ManagerClaims" },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "managerCreation" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "claims" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "claims" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ManagerCreationMutation,
  ManagerCreationMutationVariables
>;
export const ManagerDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ManagerDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "managerDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ManagerDeletionMutation,
  ManagerDeletionMutationVariables
>;
export const UpdateManagerProviderCodeDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "UpdateManagerProviderCode" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "updateManagerProviderCode" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "providerCode" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "providerCode" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateManagerProviderCodeMutation,
  UpdateManagerProviderCodeMutationVariables
>;
export const ParentCompanyIntermediationFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyIntermediationForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompanyInfos" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "intermediation" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyIntermediationFormQuery,
  ParentCompanyIntermediationFormQueryVariables
>;
export const CompanyIntermediationFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyIntermediationForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "intermediation" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyIntermediationFormQuery,
  CompanyIntermediationFormQueryVariables
>;
export const ParentCompanyIntermediationFormUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyIntermediationFormUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "intermediationInput" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyIntermediationForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "parentCompanyUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "intermediationInput" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "intermediationInput" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "intermediation" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyIntermediationFormUpdateMutation,
  ParentCompanyIntermediationFormUpdateMutationVariables
>;
export const CompanyIntermediationFormUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CompanyIntermediationFormUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "intermediationInput" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyIntermediationForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "companyUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "intermediationInput" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "intermediationInput" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "intermediation" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyIntermediationFormUpdateMutation,
  CompanyIntermediationFormUpdateMutationVariables
>;
export const ParentCompanyLegalFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyLegalForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompanyInfos" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "legal" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyLegalFormQuery,
  ParentCompanyLegalFormQueryVariables
>;
export const CompanyLegalFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanyLegalForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "legal" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyLegalFormQuery,
  CompanyLegalFormQueryVariables
>;
export const ParentCompanyLegalFormUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "ParentCompanyLegalFormUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "legalInput" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyLegalForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "parentCompanyUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "legalInput" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "legalInput" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "legal" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyLegalFormUpdateMutation,
  ParentCompanyLegalFormUpdateMutationVariables
>;
export const CompanyLegalFormUpdateDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CompanyLegalFormUpdate" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "legalInput" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyLegalForm" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "updated" },
            name: { kind: "Name", value: "companyUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "legalInput" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "legalInput" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "legal" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyLegalFormUpdateMutation,
  CompanyLegalFormUpdateMutationVariables
>;
export const CompanySettingsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "CompanySettings" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "company" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managerList" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                      { kind: "Field", name: { kind: "Name", value: "phone" } },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "logo" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticated" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "companyList" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "logo" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "companyManagersStats" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "email" } },
                { kind: "Field", name: { kind: "Name", value: "claims" } },
                { kind: "Field", name: { kind: "Name", value: "nbClients" } },
                { kind: "Field", name: { kind: "Name", value: "nbContracts" } },
                { kind: "Field", name: { kind: "Name", value: "lastActive" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanySettingsQuery,
  CompanySettingsQueryVariables
>;
export const CompanyDeletionDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "CompanyDeletion" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "companyDeletion" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompanyDeletionMutation,
  CompanyDeletionMutationVariables
>;
export const ParentCompanySubsidiariesDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanySubsidiaries" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "companies" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanySubsidiariesQuery,
  ParentCompanySubsidiariesQueryVariables
>;
export const ParentCompanyWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "wealth" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyWealthQuery,
  ParentCompanyWealthQueryVariables
>;
export const ParentCompanyAdminsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyAdmins" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "admins" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyAdminsQuery,
  ParentCompanyAdminsQueryVariables
>;
export const ParentCompanyHomeDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyHome" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "filter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "NotificationFilter" },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "taskFilter" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "CompanyTaskFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "tasks" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "filter" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "taskFilter" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "lateCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "title" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "category" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "content" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "updated" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "schedule" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "created" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "completed" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "customer" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "company" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "manager" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "name" },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "notifications" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "filter" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "filter" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "type" } },
                      { kind: "Field", name: { kind: "Name", value: "data" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "updated" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "company" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "wealth" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "managedWealth" },
                  name: { kind: "Name", value: "wealth" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: { kind: "EnumValue", value: "under_managements" },
                    },
                  ],
                },
                { kind: "Field", name: { kind: "Name", value: "liquidity" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "mostOccuringAssetType" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      { kind: "Field", name: { kind: "Name", value: "count" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "stats" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "customersCount" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyHomeQuery,
  ParentCompanyHomeQueryVariables
>;
export const ParentCompanyHomeCustomersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyHomeCustomers" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customers" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "input" },
                      value: {
                        kind: "ObjectValue",
                        fields: [
                          {
                            kind: "ObjectField",
                            name: { kind: "Name", value: "take" },
                            value: { kind: "IntValue", value: "10" },
                          },
                        ],
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "customer" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "id" },
                                        },
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "email",
                                          },
                                        },
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "type" },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "wealth" },
                                  },
                                  {
                                    kind: "Field",
                                    alias: {
                                      kind: "Name",
                                      value: "underManagement",
                                    },
                                    name: { kind: "Name", value: "wealth" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "computing",
                                        },
                                        value: {
                                          kind: "EnumValue",
                                          value: "under_managements",
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "company" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "id" },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyHomeCustomersQuery,
  ParentCompanyHomeCustomersQueryVariables
>;
export const ParentCompanyClientsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyClients" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "ParentCompanyCustomersInput" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customers" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "input" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "input" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "totalCount" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "edges" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "node" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "customer" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "id" },
                                        },
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "firstName",
                                          },
                                        },
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "lastName",
                                          },
                                        },
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "email",
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "wealth" },
                                    arguments: [
                                      {
                                        kind: "Argument",
                                        name: {
                                          kind: "Name",
                                          value: "computing",
                                        },
                                        value: {
                                          kind: "EnumValue",
                                          value: "under_managements",
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "company" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "id" },
                                        },
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "manager" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "id" },
                                        },
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyClientsQuery,
  ParentCompanyClientsQueryVariables
>;
export const ParentCompanyManagersDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyManagers" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "companies" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "managers" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "manager" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "company" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyManagersQuery,
  ParentCompanyManagersQueryVariables
>;
export const ExportCustomersParentCompanyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "exportCustomersParentCompany" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "url" },
            name: { kind: "Name", value: "exportCustomersParentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ExportCustomersParentCompanyMutation,
  ExportCustomersParentCompanyMutationVariables
>;
export const ParentCompanyCustomerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ParentCompanyCustomer" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "parentCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "customer" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "id" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "customerID" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "assets" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "group" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "accountNumber" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "activity" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "connection" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "connector" },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "key" },
                                        },
                                        {
                                          kind: "Field",
                                          name: { kind: "Name", value: "name" },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ParentCompanyCustomerQuery,
  ParentCompanyCustomerQueryVariables
>;
export const AssignCustomersToCompanyDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "AssignCustomersToCompany" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customersID" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "ID" },
                },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "parentCompanyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "companyID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "managerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "assignCustomersToCompany" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customersID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customersID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "parentCompanyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "parentCompanyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "companyID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "companyID" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "managerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "managerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  AssignCustomersToCompanyMutation,
  AssignCustomersToCompanyMutationVariables
>;
export const LoginDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "Login" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "token" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticationFirebase" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "companyList" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" },
                            },
                          ],
                        },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "parentCompany" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "id" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LoginMutation, LoginMutationVariables>;
export const InviteManagerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "InviteManager" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ManagerCreation" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "company" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "CompanyCreation" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "inviteManager" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "company" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "company" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  InviteManagerMutation,
  InviteManagerMutationVariables
>;
export const SignUpInviteDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SignUpInvite" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "token" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "authenticationFirebase" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "provider" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "manager" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "email" } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "managerInviteAccept" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "id" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "id" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SignUpInviteMutation,
  SignUpInviteMutationVariables
>;
export const SubscribeToNewsletterDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SubscribeToNewsletter" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "ProfileUpdate" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "profileUpdate" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SubscribeToNewsletterMutation,
  SubscribeToNewsletterMutationVariables
>;
export const GetPubliFormFillingDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPubliFormFilling" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "token" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "existingFormData" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetPubliFormFillingQuery,
  GetPubliFormFillingQueryVariables
>;
export const GetExternalInvestorProfileFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetExternalInvestorProfileForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "externalInvestorProfileForm" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetExternalInvestorProfileFormQuery,
  GetExternalInvestorProfileFormQueryVariables
>;
export const SubmitExternalInvestorProfileFormDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SubmitExternalInvestorProfileForm" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "PublicFormSubmit" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "customerID" },
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "ID" } },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "externalInvestorProfileForm" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "customerID" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "customerID" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SubmitExternalInvestorProfileFormMutation,
  SubmitExternalInvestorProfileFormMutationVariables
>;
export const SubmitPubliFormFillingDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "mutation",
      name: { kind: "Name", value: "SubmitPubliFormFilling" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "PublicFormSubmit" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "token" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "isSyncing" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "formFilling" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "isSyncing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "isSyncing" },
                },
              },
            ],
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SubmitPubliFormFillingMutation,
  SubmitPubliFormFillingMutationVariables
>;
export const PublicCustomerWealthDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "PublicCustomerWealth" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "token" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "financialTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "passiveTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "nonFinancialTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "benefitsTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "repartitionTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "othersTypes" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "AssetGroup" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "computing" },
          },
          type: {
            kind: "NamedType",
            name: { kind: "Name", value: "WealthFilter" },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "financialWealth" },
            name: { kind: "Name", value: "publicCustomerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "financialTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "sri" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "nonfinancialWealth" },
            name: { kind: "Name", value: "publicCustomerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "nonFinancialTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "sri" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "othersWealth" },
            name: { kind: "Name", value: "publicCustomerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "othersTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      { kind: "Field", name: { kind: "Name", value: "sri" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "passiveWealth" },
            name: { kind: "Name", value: "publicCustomerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "passiveTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "benefitsWealth" },
            name: { kind: "Name", value: "publicCustomerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "benefitsTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "data" },
                  name: { kind: "Name", value: "assets" },
                  arguments: [
                    {
                      kind: "Argument",
                      name: { kind: "Name", value: "computing" },
                      value: {
                        kind: "Variable",
                        name: { kind: "Name", value: "computing" },
                      },
                    },
                  ],
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      { kind: "Field", name: { kind: "Name", value: "group" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "categoryName" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "underManagement" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "isManual" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "valuation" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "metadata" },
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "owners" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "entity" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "Field",
                                    name: { kind: "Name", value: "id" },
                                  },
                                ],
                              },
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "ownership" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "repartition" },
            name: { kind: "Name", value: "publicCustomerWealth" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "token" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "token" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "groups" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "repartitionTypes" },
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "computing" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "computing" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "name" },
                  name: { kind: "Name", value: "group" },
                },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "amount" },
                  name: { kind: "Name", value: "valuation" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  PublicCustomerWealthQuery,
  PublicCustomerWealthQueryVariables
>;
